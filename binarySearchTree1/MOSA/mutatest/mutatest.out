2023-07-14 00:12:54,568: Running clean trial
============================= test session starts ==============================
platform linux -- Python 3.10.10, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/auri/temp/lucca/python_experiments/binarySearchTree1
collected 33 items

MOSA/test_binarySearchTree1_MOSA.py .................................    [100%]

============================== 33 passed in 0.12s ==============================
2023-07-14 00:12:54,860: [92m67 mutation targets found in binarySearchTree1.py AST.[0m
2023-07-14 00:12:54,860: Setting random.seed to: 2023
2023-07-14 00:12:54,861: Total sample space size: 63
2023-07-14 00:12:54,861: [92mSelecting 10 locations from 63 potentials.[0m
2023-07-14 00:12:54,861: Starting individual mutation trials!
2023-07-14 00:12:54,861: Running serial (single processor) dispatch mode.
2023-07-14 00:12:54,861: Current target location: binarySearchTree1.py, LocIndex(ast_class='BinOp', lineno=68, col_offset=15, op_type=<class 'ast.Add'>, end_lineno=68, end_col_offset=69)
2023-07-14 00:12:55,103: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:12:55,343: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:12:55,582: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:12:55,824: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:12:56,067: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:12:56,309: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:12:56,309: Current target location: binarySearchTree1.py, LocIndex(ast_class='Compare', lineno=124, col_offset=17, op_type=<class 'ast.Gt'>, end_lineno=124, end_col_offset=36)
2023-07-14 00:12:56,549: [91mResult: Survived at binarySearchTree1.py: (124, 17)[0m
2023-07-14 00:12:56,785: [91mResult: Survived at binarySearchTree1.py: (124, 17)[0m
2023-07-14 00:12:57,026: [92mResult: Detected at binarySearchTree1.py: (124, 17)[0m
2023-07-14 00:12:57,266: [92mResult: Detected at binarySearchTree1.py: (124, 17)[0m
2023-07-14 00:12:57,505: [92mResult: Detected at binarySearchTree1.py: (124, 17)[0m
2023-07-14 00:12:57,505: Current target location: binarySearchTree1.py, LocIndex(ast_class='CompareIs', lineno=90, col_offset=11, op_type=<class 'ast.Is'>, end_lineno=90, end_col_offset=28)
2023-07-14 00:12:57,764: [92mResult: Detected at binarySearchTree1.py: (90, 11)[0m
2023-07-14 00:12:57,764: Current target location: binarySearchTree1.py, LocIndex(ast_class='BinOp', lineno=142, col_offset=19, op_type=<class 'ast.Sub'>, end_lineno=142, end_col_offset=38)
2023-07-14 00:12:58,003: [91mResult: Survived at binarySearchTree1.py: (142, 19)[0m
2023-07-14 00:12:58,243: [92mResult: Detected at binarySearchTree1.py: (142, 19)[0m
2023-07-14 00:12:58,485: [92mResult: Detected at binarySearchTree1.py: (142, 19)[0m
2023-07-14 00:12:58,725: [92mResult: Detected at binarySearchTree1.py: (142, 19)[0m
2023-07-14 00:12:58,962: [91mResult: Survived at binarySearchTree1.py: (142, 19)[0m
2023-07-14 00:12:59,198: [91mResult: Survived at binarySearchTree1.py: (142, 19)[0m
2023-07-14 00:12:59,198: Current target location: binarySearchTree1.py, LocIndex(ast_class='NameConstant', lineno=161, col_offset=24, op_type=None, end_lineno=161, end_col_offset=28)
2023-07-14 00:12:59,436: [92mResult: Detected at binarySearchTree1.py: (161, 24)[0m
2023-07-14 00:12:59,674: [92mResult: Detected at binarySearchTree1.py: (161, 24)[0m
2023-07-14 00:12:59,674: Current target location: binarySearchTree1.py, LocIndex(ast_class='BinOp', lineno=68, col_offset=15, op_type=<class 'ast.Add'>, end_lineno=68, end_col_offset=28)
2023-07-14 00:12:59,917: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:00,161: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:00,403: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:00,644: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:00,885: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:01,130: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:01,130: Current target location: binarySearchTree1.py, LocIndex(ast_class='Compare', lineno=114, col_offset=14, op_type=<class 'ast.NotEq'>, end_lineno=114, end_col_offset=29)
2023-07-14 00:13:01,383: [92mResult: Detected at binarySearchTree1.py: (114, 14)[0m
2023-07-14 00:13:01,635: [92mResult: Detected at binarySearchTree1.py: (114, 14)[0m
2023-07-14 00:13:01,886: [92mResult: Detected at binarySearchTree1.py: (114, 14)[0m
2023-07-14 00:13:02,137: [92mResult: Detected at binarySearchTree1.py: (114, 14)[0m
2023-07-14 00:13:02,393: [92mResult: Detected at binarySearchTree1.py: (114, 14)[0m
2023-07-14 00:13:02,393: Current target location: binarySearchTree1.py, LocIndex(ast_class='If', lineno=111, col_offset=8, op_type='If_Statement', end_lineno=112, end_col_offset=52)
2023-07-14 00:13:02,637: [92mResult: Detected at binarySearchTree1.py: (111, 8)[0m
2023-07-14 00:13:02,891: [92mResult: Detected at binarySearchTree1.py: (111, 8)[0m
2023-07-14 00:13:02,891: Current target location: binarySearchTree1.py, LocIndex(ast_class='BinOp', lineno=68, col_offset=15, op_type=<class 'ast.Add'>, end_lineno=68, end_col_offset=34)
2023-07-14 00:13:03,138: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:03,384: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:03,630: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:03,872: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:04,112: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:04,352: [92mResult: Detected at binarySearchTree1.py: (68, 15)[0m
2023-07-14 00:13:04,352: Current target location: binarySearchTree1.py, LocIndex(ast_class='NameConstant', lineno=114, col_offset=25, op_type=None, end_lineno=114, end_col_offset=29)
2023-07-14 00:13:04,608: [92mResult: Detected at binarySearchTree1.py: (114, 25)[0m
2023-07-14 00:13:04,868: [92mResult: Detected at binarySearchTree1.py: (114, 25)[0m
2023-07-14 00:13:04,869: Running clean trial
============================= test session starts ==============================
platform linux -- Python 3.10.10, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/auri/temp/lucca/python_experiments/binarySearchTree1
collected 33 items

MOSA/test_binarySearchTree1_MOSA.py .................................    [100%]

============================== 33 passed in 0.06s ==============================
2023-07-14 00:13:05,102: CLI Report:

Mutatest diagnostic summary
===========================
 - Source location: /home/auri/temp/lucca/python_experiments/binarySearchTree1/binarySearchTree1.py
 - Test commands: ['python', '-m', 'pytest', '--tb=no', './MOSA']
 - Mode: f
 - Excluded files: []
 - N locations input: 10
 - Random seed: 2023

Random sample details
---------------------
 - Total locations mutated: 10
 - Total locations identified: 63
 - Location sample coverage: 15.87 %


Running time details
--------------------
 - Clean trial 1 run time: 0:00:00.289048
 - Clean trial 2 run time: 0:00:00.233384
 - Mutation trials total run time: 0:00:10.011261

2023-07-14 00:13:05,103: Trial Summary Report:

Overall mutation trial summary
==============================
 - DETECTED: 36
 - SURVIVED: 5
 - TOTAL RUNS: 41
 - RUN DATETIME: 2023-07-14 00:13:05.102709

2023-07-14 00:13:05,103: Detected mutations:[92m

DETECTED
--------
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Mult'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Pow'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Div'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.FloorDiv'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Mod'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Sub'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Mod'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.FloorDiv'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Sub'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Div'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Mult'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Pow'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Div'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Mult'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Pow'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Sub'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.FloorDiv'>
 - binarySearchTree1.py: (l: 68, c: 15) - mutation from <class 'ast.Add'> to <class 'ast.Mod'>
 - binarySearchTree1.py: (l: 90, c: 11) - mutation from <class 'ast.Is'> to <class 'ast.IsNot'>
 - binarySearchTree1.py: (l: 111, c: 8) - mutation from If_Statement to If_False
 - binarySearchTree1.py: (l: 111, c: 8) - mutation from If_Statement to If_True
 - binarySearchTree1.py: (l: 114, c: 14) - mutation from <class 'ast.NotEq'> to <class 'ast.Gt'>
 - binarySearchTree1.py: (l: 114, c: 14) - mutation from <class 'ast.NotEq'> to <class 'ast.GtE'>
 - binarySearchTree1.py: (l: 114, c: 14) - mutation from <class 'ast.NotEq'> to <class 'ast.Lt'>
 - binarySearchTree1.py: (l: 114, c: 14) - mutation from <class 'ast.NotEq'> to <class 'ast.LtE'>
 - binarySearchTree1.py: (l: 114, c: 14) - mutation from <class 'ast.NotEq'> to <class 'ast.Eq'>
 - binarySearchTree1.py: (l: 114, c: 25) - mutation from None to False
 - binarySearchTree1.py: (l: 114, c: 25) - mutation from None to True
 - binarySearchTree1.py: (l: 124, c: 17) - mutation from <class 'ast.Gt'> to <class 'ast.GtE'>
 - binarySearchTree1.py: (l: 124, c: 17) - mutation from <class 'ast.Gt'> to <class 'ast.LtE'>
 - binarySearchTree1.py: (l: 124, c: 17) - mutation from <class 'ast.Gt'> to <class 'ast.Eq'>
 - binarySearchTree1.py: (l: 142, c: 19) - mutation from <class 'ast.Sub'> to <class 'ast.FloorDiv'>
 - binarySearchTree1.py: (l: 142, c: 19) - mutation from <class 'ast.Sub'> to <class 'ast.Mod'>
 - binarySearchTree1.py: (l: 142, c: 19) - mutation from <class 'ast.Sub'> to <class 'ast.Div'>
 - binarySearchTree1.py: (l: 161, c: 24) - mutation from None to False
 - binarySearchTree1.py: (l: 161, c: 24) - mutation from None to True[0m

2023-07-14 00:13:05,103: Timedout mutations:

2023-07-14 00:13:05,103: Surviving mutations:[91m

SURVIVED
--------
 - binarySearchTree1.py: (l: 124, c: 17) - mutation from <class 'ast.Gt'> to <class 'ast.Lt'>
 - binarySearchTree1.py: (l: 124, c: 17) - mutation from <class 'ast.Gt'> to <class 'ast.NotEq'>
 - binarySearchTree1.py: (l: 142, c: 19) - mutation from <class 'ast.Sub'> to <class 'ast.Mult'>
 - binarySearchTree1.py: (l: 142, c: 19) - mutation from <class 'ast.Sub'> to <class 'ast.Pow'>
 - binarySearchTree1.py: (l: 142, c: 19) - mutation from <class 'ast.Sub'> to <class 'ast.Add'>[0m

2023-07-14 00:13:05,103: Writing output report to: /home/auri/temp/lucca/python_experiments/binarySearchTree1/MOSA/mutatest/MOSA-report.rst
