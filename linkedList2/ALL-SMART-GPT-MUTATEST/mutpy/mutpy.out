[34m[*][0m Start mutation process:
[36m   -[0m targets: linkedList2.py
[36m   -[0m tests: ./ALL-SMART-GPT-MUTATEST
[34m[*][0m 68 tests passed:
[36m   -[0m test_linkedList2_MUTATEST [0.32509 s]
[36m   -[0m test_linkedList2_MIO [0.19883 s]
[36m   -[0m test_linkedList2_DYNAMOSA [0.15025 s]
[36m   -[0m test_linkedList2_WHOLE_SUITE [0.14130 s]
[36m   -[0m test_linkedList2_MOSA [0.14823 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] ASR linkedList2: 
--------------------------------------------------------------------------------
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
  76:         while n != None:
[34m- 77:             count += 1[0m
[32m+ 77:             count -= 1[0m
  78:             n = n.next
  79:         return count
--------------------------------------------------------------------------------
[0.22057 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       ValueError: __len__() should return >= 0

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: ValueError
[36m   -[0m [#   2] CDI linkedList2: 
--------------------------------------------------------------------------------
   3: 
   4:     Author: George Heineman
   5: '''
   6: class LinkedNode:
[34m-  7:     def __init__(self, value, tail=None):[0m
[34m-  8:         '''Node in a Linked List.'''[0m
[34m-  9:         self.value = value[0m
[34m- 10:         self.next = tail[0m
[34m- 11:     [0m
[32m+  7:     @classmethod[0m
[32m+  8:     def __init__(self, value, tail=None):[0m
[32m+  9:         '''Node in a Linked List.'''[0m
[32m+ 10:         self.value = value[0m
[32m+ 11:         self.next = tail[0m
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
--------------------------------------------------------------------------------
[5.00938 s] [33mtimeout[0m
[36m   -[0m [#   3] CDI linkedList2: 
--------------------------------------------------------------------------------
   8:         '''Node in a Linked List.'''
   9:         self.value = value
  10:         self.next = tail
  11:     
[34m- 12:     def checkInfinite(self):[0m
[34m- 13:         '''Check whether infinite loop via next.'''[0m
[34m- 14:         p1 = p2 = self[0m
[34m- 15:         while (p1 != None and p2 != None):[0m
[34m- 16:             if p2.next == None:[0m
[34m- 17:                 return False[0m
[34m- 18:             p1 = p1.next[0m
[34m- 19:             p2 = p2.next.next[0m
[34m- 20:             [0m
[34m- 21:             if p1 == p2:[0m
[34m- 22:                 return True[0m
[34m- 23:         return False[0m
[34m- 24: class LinkedList:[0m
[34m- 25:     def __init__(self, *start):[0m
[34m- 26:         '''Demonstrate linked lists in Python.'''[0m
[34m- 27:         self.head = None[0m
[34m- 28:         for _ in start:[0m
[34m- 29:             self.prepend(_)[0m
[34m- 30:     [0m
[32m+ 12:     @classmethod[0m
[32m+ 13:     def checkInfinite(self):[0m
[32m+ 14:         '''Check whether infinite loop via next.'''[0m
[32m+ 15:         p1 = p2 = self[0m
[32m+ 16:         while (p1 != None and p2 != None):[0m
[32m+ 17:             if p2.next == None:[0m
[32m+ 18:                 return False[0m
[32m+ 19:             p1 = p1.next[0m
[32m+ 20:             p2 = p2.next.next[0m
[32m+ 21:             [0m
[32m+ 22:             if p1 == p2:[0m
[32m+ 23:                 return True[0m
[32m+ 24:         return False[0m
[32m+ 25: class LinkedList:[0m
[32m+ 26:     def __init__(self, *start):[0m
[32m+ 27:         '''Demonstrate linked lists in Python.'''[0m
[32m+ 28:         self.head = None[0m
[32m+ 29:         for _ in start:[0m
[32m+ 30:             self.prepend(_)[0m
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
--------------------------------------------------------------------------------
[0.21289 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_0

def test_case_0():
        bool_0 = True
        linked_node_0 = module_0.LinkedNode(bool_0)
>       var_0 = linked_node_0.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedNode'>

>   ???
E   AttributeError: type object 'LinkedNode' has no attribute 'next'

linkedList2:17: AttributeError
[36m   -[0m [#   4] CDI linkedList2: 
--------------------------------------------------------------------------------
  21:             if p1 == p2:
  22:                 return True
  23:         return False
  24: class LinkedList:
[34m- 25:     def __init__(self, *start):[0m
[34m- 26:         '''Demonstrate linked lists in Python.'''[0m
[34m- 27:         self.head = None[0m
[34m- 28:         for _ in start:[0m
[34m- 29:             self.prepend(_)[0m
[34m- 30:     [0m
[32m+ 25:     @classmethod[0m
[32m+ 26:     def __init__(self, *start):[0m
[32m+ 27:         '''Demonstrate linked lists in Python.'''[0m
[32m+ 28:         self.head = None[0m
[32m+ 29:         for _ in start:[0m
[32m+ 30:             self.prepend(_)[0m
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
--------------------------------------------------------------------------------
[0.21778 s] [36mincompetent[0m

TypeError: linkedList2:30: TypeError: LinkedList.prepend() missing 1 required positional argument: 'value'

[36m   -[0m [#   5] CDI linkedList2: 
--------------------------------------------------------------------------------
  27:         self.head = None
  28:         for _ in start:
  29:             self.prepend(_)
  30:     
[34m- 31:     def prepend(self, value):[0m
[34m- 32:         '''Prepend element into list.'''[0m
[34m- 33:         self.head = LinkedNode(value, self.head)[0m
[34m- 34:     [0m
[32m+ 31:     @classmethod[0m
[32m+ 32:     def prepend(self, value):[0m
[32m+ 33:         '''Prepend element into list.'''[0m
[32m+ 34:         self.head = LinkedNode(value, self.head)[0m
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
--------------------------------------------------------------------------------
[0.22424 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
>       linked_list_0 = module_0.LinkedList(*list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
linkedList2:29: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedList'>, value = None

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

linkedList2:34: AttributeError
[36m   -[0m [#   6] CDI linkedList2: 
--------------------------------------------------------------------------------
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
[34m- 35:     def pop(self):[0m
[34m- 36:         '''Remove first value in list.'''[0m
[34m- 37:         if self.head is None:[0m
[34m- 38:             raise Exception('Linked list is empty.')[0m
[34m- 39:         val = self.head.value[0m
[34m- 40:         self.head = self.head.next[0m
[34m- 41:         return val[0m
[34m- 42:     [0m
[32m+ 35:     @classmethod[0m
[32m+ 36:     def pop(self):[0m
[32m+ 37:         '''Remove first value in list.'''[0m
[32m+ 38:         if self.head is None:[0m
[32m+ 39:             raise Exception('Linked list is empty.')[0m
[32m+ 40:         val = self.head.value[0m
[32m+ 41:         self.head = self.head.next[0m
[32m+ 42:         return val[0m
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
--------------------------------------------------------------------------------
[0.23864 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

linkedList2:38: AttributeError
[36m   -[0m [#   7] CDI linkedList2: 
--------------------------------------------------------------------------------
  39:         val = self.head.value
  40:         self.head = self.head.next
  41:         return val
  42:     
[34m- 43:     def remove(self, value):[0m
[34m- 44:         '''Remove value from list.'''[0m
[34m- 45:         n = self.head[0m
[34m- 46:         last = None[0m
[34m- 47:         while n != None:[0m
[34m- 48:             if n.value == value:[0m
[34m- 49:                 if last == None:[0m
[34m- 50:                     self.head = self.head.next[0m
[34m- 51:                 else:[0m
[34m- 52:                     last.next = n.next[0m
[34m- 53:                 return True[0m
[34m- 54:             last = n[0m
[34m- 55:             n = n.next[0m
[34m- 56:         return False[0m
[34m- 57:     [0m
[32m+ 43:     @classmethod[0m
[32m+ 44:     def remove(self, value):[0m
[32m+ 45:         '''Remove value from list.'''[0m
[32m+ 46:         n = self.head[0m
[32m+ 47:         last = None[0m
[32m+ 48:         while n != None:[0m
[32m+ 49:             if n.value == value:[0m
[32m+ 50:                 if last == None:[0m
[32m+ 51:                     self.head = self.head.next[0m
[32m+ 52:                 else:[0m
[32m+ 53:                     last.next = n.next[0m
[32m+ 54:                 return True[0m
[32m+ 55:             last = n[0m
[32m+ 56:             n = n.next[0m
[32m+ 57:         return False[0m
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
  61:         while n != None:
--------------------------------------------------------------------------------
[0.29424 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_3

def test_case_3():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
>       var_0 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedList'>, value = link:[]

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

linkedList2:46: AttributeError
[36m   -[0m [#   8] CDI linkedList2: 
--------------------------------------------------------------------------------
  54:             last = n
  55:             n = n.next
  56:         return False
  57:     
[34m- 58:     def __iter__(self):[0m
[34m- 59:         '''Iterator of values in the list.'''[0m
[34m- 60:         n = self.head[0m
[34m- 61:         while n != None:[0m
[34m- 62:             yield n.value[0m
[34m- 63:             n = n.next[0m
[34m- 64:     [0m
[32m+ 58:     @classmethod[0m
[32m+ 59:     def __iter__(self):[0m
[32m+ 60:         '''Iterator of values in the list.'''[0m
[32m+ 61:         n = self.head[0m
[32m+ 62:         while n != None:[0m
[32m+ 63:             yield n.value[0m
[32m+ 64:             n = n.next[0m
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
--------------------------------------------------------------------------------
[0.28803 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
>       var_0 = linked_list_0.__repr__()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
linkedList2:70: in __repr__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

linkedList2:61: AttributeError
[36m   -[0m [#   9] CDI linkedList2: 
--------------------------------------------------------------------------------
  61:         while n != None:
  62:             yield n.value
  63:             n = n.next
  64:     
[34m- 65:     def __repr__(self):[0m
[34m- 66:         '''String representation of linked list.'''[0m
[34m- 67:         if self.head is None:[0m
[34m- 68:             return 'link:[]'[0m
[34m- 69:         [0m
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[34m- 71:     [0m
[32m+ 65:     @classmethod[0m
[32m+ 66:     def __repr__(self):[0m
[32m+ 67:         '''String representation of linked list.'''[0m
[32m+ 68:         if self.head is None:[0m
[32m+ 69:             return 'link:[]'[0m
[32m+ 70:         [0m
[32m+ 71:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
--------------------------------------------------------------------------------
[0.24039 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
>       var_0 = linked_list_0.__repr__()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

linkedList2:68: AttributeError
[36m   -[0m [#  10] CDI linkedList2: 
--------------------------------------------------------------------------------
  68:             return 'link:[]'
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
[34m- 72:     def __len__(self):[0m
[34m- 73:         '''Count values in list.'''[0m
[34m- 74:         n = self.head[0m
[34m- 75:         count = 0[0m
[34m- 76:         while n != None:[0m
[34m- 77:             count += 1[0m
[34m- 78:             n = n.next[0m
[34m- 79:         return count[0m
[32m+ 72:     @classmethod[0m
[32m+ 73:     def __len__(self):[0m
[32m+ 74:         '''Count values in list.'''[0m
[32m+ 75:         n = self.head[0m
[32m+ 76:         count = 0[0m
[32m+ 77:         while n != None:[0m
[32m+ 78:             count += 1[0m
[32m+ 79:             n = n.next[0m
[32m+ 80:         return count[0m
--------------------------------------------------------------------------------
[0.22634 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList2.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

linkedList2:75: AttributeError
[36m   -[0m [#  11] COI linkedList2: 
--------------------------------------------------------------------------------
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
[34m- 15:         while (p1 != None and p2 != None):[0m
[32m+ 15:         while not ((p1 != None and p2 != None)):[0m
  16:             if p2.next == None:
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
--------------------------------------------------------------------------------
[0.31385 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_check_infinite_with_loop

def test_check_infinite_with_loop():
        # Create a linked list with an infinite loop
        node1 = LinkedNode(1)
        node2 = LinkedNode(2)
        node1.next = node2
        node2.next = node1
    
>       assert node1.checkInfinite()
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:11: AssertionError
[36m   -[0m [#  12] COI linkedList2: 
--------------------------------------------------------------------------------
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
[34m- 16:             if p2.next == None:[0m
[32m+ 16:             if not (p2.next == None):[0m
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
  20:             
--------------------------------------------------------------------------------
[0.21648 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_0

def test_case_0():
        bool_0 = True
        linked_node_0 = module_0.LinkedNode(bool_0)
>       var_0 = linked_node_0.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList2.LinkedNode object at 0x7f3ca7a4bf10>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList2:19: AttributeError
[36m   -[0m [#  13] COI linkedList2: 
--------------------------------------------------------------------------------
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
  20:             
[34m- 21:             if p1 == p2:[0m
[32m+ 21:             if not (p1 == p2):[0m
  22:                 return True
  23:         return False
  24: class LinkedList:
  25:     def __init__(self, *start):
--------------------------------------------------------------------------------
[0.25804 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_13

def test_case_13():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        linked_node_0 = module_0.LinkedNode(linked_list_0)
        assert len(linked_node_0.value) == 0
        linked_node_1 = module_0.LinkedNode(linked_node_0, linked_node_0)
        var_0 = linked_node_1.checkInfinite()
>       assert var_0 is False
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:134: AssertionError
[36m   -[0m [#  14] COI linkedList2: 
--------------------------------------------------------------------------------
  33:         self.head = LinkedNode(value, self.head)
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
[34m- 37:         if self.head is None:[0m
[32m+ 37:         if not (self.head is None):[0m
  38:             raise Exception('Linked list is empty.')
  39:         val = self.head.value
  40:         self.head = self.head.next
  41:         return val
--------------------------------------------------------------------------------
[0.22857 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:['_*]

>   ???
E   Exception: Linked list is empty.

linkedList2:38: Exception
[36m   -[0m [#  15] COI linkedList2: 
--------------------------------------------------------------------------------
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
[34m- 47:         while n != None:[0m
[32m+ 47:         while not (n != None):[0m
  48:             if n.value == value:
  49:                 if last == None:
  50:                     self.head = self.head.next
  51:                 else:
--------------------------------------------------------------------------------
[0.22625 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_3

def test_case_3():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
>       var_0 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[], value = link:[]

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

linkedList2:48: AttributeError
[36m   -[0m [#  16] COI linkedList2: 
--------------------------------------------------------------------------------
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
  47:         while n != None:
[34m- 48:             if n.value == value:[0m
[32m+ 48:             if not (n.value == value):[0m
  49:                 if last == None:
  50:                     self.head = self.head.next
  51:                 else:
  52:                     last.next = n.next
--------------------------------------------------------------------------------
[0.22797 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
        var_1 = linked_list_0.remove(linked_list_0)
>       assert var_1 is True
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:53: AssertionError
[36m   -[0m [#  17] COI linkedList2: 
--------------------------------------------------------------------------------
  45:         n = self.head
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
[34m- 49:                 if last == None:[0m
[32m+ 49:                 if not (last == None):[0m
  50:                     self.head = self.head.next
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
--------------------------------------------------------------------------------
[0.21960 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
>       var_1 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7bc2c50>
value = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7bc2c50>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList2:52: AttributeError
[36m   -[0m [#  18] COI linkedList2: 
--------------------------------------------------------------------------------
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
[34m- 61:         while n != None:[0m
[32m+ 61:         while not (n != None):[0m
  62:             yield n.value
  63:             n = n.next
  64:     
  65:     def __repr__(self):
--------------------------------------------------------------------------------
[0.20993 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  19] COI linkedList2: 
--------------------------------------------------------------------------------
  63:             n = n.next
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
[34m- 67:         if self.head is None:[0m
[32m+ 67:         if not (self.head is None):[0m
  68:             return 'link:[]'
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
--------------------------------------------------------------------------------
[0.23576 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  20] COI linkedList2: 
--------------------------------------------------------------------------------
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
[34m- 76:         while n != None:[0m
[32m+ 76:         while not (n != None):[0m
  77:             count += 1
  78:             n = n.next
  79:         return count
--------------------------------------------------------------------------------
[0.23598 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [#  21] CRP linkedList2: 
--------------------------------------------------------------------------------
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
[34m- 38:             raise Exception('Linked list is empty.')[0m
[32m+ 38:             raise Exception('mutpy')[0m
  39:         val = self.head.value
  40:         self.head = self.head.next
  41:         return val
  42:     
--------------------------------------------------------------------------------
[0.38480 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_pop_empty_queue

def test_pop_empty_queue():
        # Test popping from an empty list
        empty_list = LinkedList()
    
        with pytest.raises(Exception) as exception:
             empty_list.pop()
>       assert str(exception.value) == "Linked list is empty."
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:28: AssertionError
[36m   -[0m [#  22] CRP linkedList2: 
--------------------------------------------------------------------------------
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
[34m- 38:             raise Exception('Linked list is empty.')[0m
[32m+ 38:             raise Exception('')[0m
  39:         val = self.head.value
  40:         self.head = self.head.next
  41:         return val
  42:     
--------------------------------------------------------------------------------
[0.41687 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_pop_empty_queue

def test_pop_empty_queue():
        # Test popping from an empty list
        empty_list = LinkedList()
    
        with pytest.raises(Exception) as exception:
             empty_list.pop()
>       assert str(exception.value) == "Linked list is empty."
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:28: AssertionError
[36m   -[0m [#  23] CRP linkedList2: 
--------------------------------------------------------------------------------
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
[34m- 68:             return 'link:[]'[0m
[32m+ 68:             return 'mutpy'[0m
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
  72:     def __len__(self):
--------------------------------------------------------------------------------
[0.30013 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_7

def test_case_7():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:69: AssertionError
[36m   -[0m [#  24] CRP linkedList2: 
--------------------------------------------------------------------------------
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
[34m- 68:             return 'link:[]'[0m
[32m+ 68:             return ''[0m
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
  72:     def __len__(self):
--------------------------------------------------------------------------------
[0.21674 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_7

def test_case_7():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:69: AssertionError
[36m   -[0m [#  25] CRP linkedList2: 
--------------------------------------------------------------------------------
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
  69:         
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[32m+ 70:         return 'mutpy'.format(','.join(map(str, self)))[0m
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
--------------------------------------------------------------------------------
[0.21929 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  26] CRP linkedList2: 
--------------------------------------------------------------------------------
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
  69:         
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[32m+ 70:         return ''.format(','.join(map(str, self)))[0m
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
--------------------------------------------------------------------------------
[0.23467 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  27] CRP linkedList2: 
--------------------------------------------------------------------------------
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
  69:         
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[32m+ 70:         return 'link:[{0:s}]'.format('mutpy'.join(map(str, self)))[0m
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
--------------------------------------------------------------------------------
[0.23500 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  28] CRP linkedList2: 
--------------------------------------------------------------------------------
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
  69:         
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[32m+ 70:         return 'link:[{0:s}]'.format(''.join(map(str, self)))[0m
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
--------------------------------------------------------------------------------
[0.23285 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  29] CRP linkedList2: 
--------------------------------------------------------------------------------
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
[34m- 75:         count = 0[0m
[32m+ 75:         count = 1[0m
  76:         while n != None:
  77:             count += 1
  78:             n = n.next
  79:         return count
--------------------------------------------------------------------------------
[0.21874 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [#  30] CRP linkedList2: 
--------------------------------------------------------------------------------
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
  76:         while n != None:
[34m- 77:             count += 1[0m
[32m+ 77:             count += 2[0m
  78:             n = n.next
  79:         return count
--------------------------------------------------------------------------------
[0.21555 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [#  31] LCR linkedList2: 
--------------------------------------------------------------------------------
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
[34m- 15:         while (p1 != None and p2 != None):[0m
[32m+ 15:         while (p1 != None or p2 != None):[0m
  16:             if p2.next == None:
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
--------------------------------------------------------------------------------
[0.24665 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_13

def test_case_13():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        linked_node_0 = module_0.LinkedNode(linked_list_0)
        assert len(linked_node_0.value) == 0
        linked_node_1 = module_0.LinkedNode(linked_node_0, linked_node_0)
>       var_0 = linked_node_1.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList2.LinkedNode object at 0x7f3ca7f14ee0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList2:16: AttributeError
[36m   -[0m [#  32] OIL linkedList2: 
--------------------------------------------------------------------------------
  19:             p2 = p2.next.next
  20:             
  21:             if p1 == p2:
  22:                 return True
[34m- 23:         return False[0m
[34m- 24: class LinkedList:[0m
[34m- 25:     def __init__(self, *start):[0m
[34m- 26:         '''Demonstrate linked lists in Python.'''[0m
[34m- 27:         self.head = None[0m
[34m- 28:         for _ in start:[0m
[34m- 29:             self.prepend(_)[0m
[34m- 30:     [0m
[32m+ 23:             break[0m
[32m+ 24:         return False[0m
[32m+ 25: class LinkedList:[0m
[32m+ 26:     def __init__(self, *start):[0m
[32m+ 27:         '''Demonstrate linked lists in Python.'''[0m
[32m+ 28:         self.head = None[0m
[32m+ 29:         for _ in start:[0m
[32m+ 30:             self.prepend(_)[0m
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
--------------------------------------------------------------------------------
[0.31185 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_check_infinite_with_loop

def test_check_infinite_with_loop():
        # Create a linked list with an infinite loop
        node1 = LinkedNode(1)
        node2 = LinkedNode(2)
        node1.next = node2
        node2.next = node1
    
>       assert node1.checkInfinite()
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:11: AssertionError
[36m   -[0m [#  33] OIL linkedList2: 
--------------------------------------------------------------------------------
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
  28:         for _ in start:
  29:             self.prepend(_)
[34m- 30:     [0m
[32m+ 30:             break[0m
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
--------------------------------------------------------------------------------
[0.23921 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 4
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:37: AssertionError
[36m   -[0m [#  34] OIL linkedList2: 
--------------------------------------------------------------------------------
  52:                     last.next = n.next
  53:                 return True
  54:             last = n
  55:             n = n.next
[34m- 56:         return False[0m
[34m- 57:     [0m
[32m+ 56:             break[0m
[32m+ 57:         return False[0m
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
  61:         while n != None:
--------------------------------------------------------------------------------
[0.30243 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_WHOLE_SUITE.py::test_case_1

def test_case_1():
        tuple_0 = ()
        linked_node_0 = module_0.LinkedNode(tuple_0)
        set_0 = set()
        list_0 = []
        var_0 = linked_node_0.checkInfinite()
        assert var_0 is False
        var_1 = var_0.__repr__()
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 0
        var_2 = linked_list_0.remove(set_0)
        assert var_2 is False
        str_0 = '3'
        linked_list_1 = module_0.LinkedList(*str_0)
        assert len(linked_list_1) == 1
        var_3 = linked_list_1.prepend(linked_list_1)
        assert len(linked_list_1) == 2
        var_4 = var_2.__repr__()
        var_5 = linked_list_1.__len__()
        assert var_5 == 2
        var_6 = var_4.__iter__()
        var_7 = linked_list_1.remove(str_0)
>       assert var_7 is True
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_WHOLE_SUITE.py:33: AssertionError
[36m   -[0m [#  35] OIL linkedList2: 
--------------------------------------------------------------------------------
  60:         n = self.head
  61:         while n != None:
  62:             yield n.value
  63:             n = n.next
[34m- 64:     [0m
[32m+ 64:             break[0m
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
--------------------------------------------------------------------------------
[0.24489 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  36] OIL linkedList2: 
--------------------------------------------------------------------------------
  75:         count = 0
  76:         while n != None:
  77:             count += 1
  78:             n = n.next
[34m- 79:         return count[0m
[32m+ 79:             break[0m
[32m+ 80:         return count[0m
--------------------------------------------------------------------------------
[0.28894 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 4
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:37: AssertionError
[36m   -[0m [#  37] RIL linkedList2: 
--------------------------------------------------------------------------------
  24: class LinkedList:
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
[34m- 28:         for _ in start:[0m
[32m+ 28:         for _ in reversed(start):[0m
  29:             self.prepend(_)
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
--------------------------------------------------------------------------------
[0.36263 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MIO.py::test_case_12

def test_case_12():
        str_0 = 'dindzQBW'
        linked_list_0 = module_0.LinkedList(*str_0)
        assert len(linked_list_0) == 8
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[W,B,Q,z,d,n,i,d]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MIO.py:87: AssertionError
[36m   -[0m [#  38] ROR linkedList2: 
--------------------------------------------------------------------------------
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
[34m- 15:         while (p1 != None and p2 != None):[0m
[32m+ 15:         while (p1 == None and p2 != None):[0m
  16:             if p2.next == None:
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
--------------------------------------------------------------------------------
[0.34369 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_check_infinite_with_loop

def test_check_infinite_with_loop():
        # Create a linked list with an infinite loop
        node1 = LinkedNode(1)
        node2 = LinkedNode(2)
        node1.next = node2
        node2.next = node1
    
>       assert node1.checkInfinite()
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:11: AssertionError
[36m   -[0m [#  39] ROR linkedList2: 
--------------------------------------------------------------------------------
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
[34m- 15:         while (p1 != None and p2 != None):[0m
[32m+ 15:         while (p1 != None and p2 == None):[0m
  16:             if p2.next == None:
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
--------------------------------------------------------------------------------
[0.35181 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_check_infinite_with_loop

def test_check_infinite_with_loop():
        # Create a linked list with an infinite loop
        node1 = LinkedNode(1)
        node2 = LinkedNode(2)
        node1.next = node2
        node2.next = node1
    
>       assert node1.checkInfinite()
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:11: AssertionError
[36m   -[0m [#  40] ROR linkedList2: 
--------------------------------------------------------------------------------
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
[34m- 16:             if p2.next == None:[0m
[32m+ 16:             if p2.next != None:[0m
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
  20:             
--------------------------------------------------------------------------------
[0.22223 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_0

def test_case_0():
        bool_0 = True
        linked_node_0 = module_0.LinkedNode(bool_0)
>       var_0 = linked_node_0.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList2.LinkedNode object at 0x7f3ca7d12b00>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList2:19: AttributeError
[36m   -[0m [#  41] ROR linkedList2: 
--------------------------------------------------------------------------------
  17:                 return False
  18:             p1 = p1.next
  19:             p2 = p2.next.next
  20:             
[34m- 21:             if p1 == p2:[0m
[32m+ 21:             if p1 != p2:[0m
  22:                 return True
  23:         return False
  24: class LinkedList:
  25:     def __init__(self, *start):
--------------------------------------------------------------------------------
[0.22641 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_13

def test_case_13():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        linked_node_0 = module_0.LinkedNode(linked_list_0)
        assert len(linked_node_0.value) == 0
        linked_node_1 = module_0.LinkedNode(linked_node_0, linked_node_0)
        var_0 = linked_node_1.checkInfinite()
>       assert var_0 is False
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:134: AssertionError
[36m   -[0m [#  42] ROR linkedList2: 
--------------------------------------------------------------------------------
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
[34m- 47:         while n != None:[0m
[32m+ 47:         while n == None:[0m
  48:             if n.value == value:
  49:                 if last == None:
  50:                     self.head = self.head.next
  51:                 else:
--------------------------------------------------------------------------------
[0.23088 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_3

def test_case_3():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
>       var_0 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[], value = link:[]

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

linkedList2:48: AttributeError
[36m   -[0m [#  43] ROR linkedList2: 
--------------------------------------------------------------------------------
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
  47:         while n != None:
[34m- 48:             if n.value == value:[0m
[32m+ 48:             if n.value != value:[0m
  49:                 if last == None:
  50:                     self.head = self.head.next
  51:                 else:
  52:                     last.next = n.next
--------------------------------------------------------------------------------
[0.22076 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
        var_1 = linked_list_0.remove(linked_list_0)
>       assert var_1 is True
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:53: AssertionError
[36m   -[0m [#  44] ROR linkedList2: 
--------------------------------------------------------------------------------
  45:         n = self.head
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
[34m- 49:                 if last == None:[0m
[32m+ 49:                 if last != None:[0m
  50:                     self.head = self.head.next
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
--------------------------------------------------------------------------------
[0.24273 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
>       var_1 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7f147c0>
value = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7f147c0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList2:52: AttributeError
[36m   -[0m [#  45] ROR linkedList2: 
--------------------------------------------------------------------------------
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
[34m- 61:         while n != None:[0m
[32m+ 61:         while n == None:[0m
  62:             yield n.value
  63:             n = n.next
  64:     
  65:     def __repr__(self):
--------------------------------------------------------------------------------
[0.22208 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  46] ROR linkedList2: 
--------------------------------------------------------------------------------
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
[34m- 76:         while n != None:[0m
[32m+ 76:         while n == None:[0m
  77:             count += 1
  78:             n = n.next
  79:         return count
--------------------------------------------------------------------------------
[0.22993 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [#  47] SDI linkedList2: 
--------------------------------------------------------------------------------
   3: 
   4:     Author: George Heineman
   5: '''
   6: class LinkedNode:
[34m-  7:     def __init__(self, value, tail=None):[0m
[34m-  8:         '''Node in a Linked List.'''[0m
[34m-  9:         self.value = value[0m
[34m- 10:         self.next = tail[0m
[34m- 11:     [0m
[32m+  7:     @staticmethod[0m
[32m+  8:     def __init__(self, value, tail=None):[0m
[32m+  9:         '''Node in a Linked List.'''[0m
[32m+ 10:         self.value = value[0m
[32m+ 11:         self.next = tail[0m
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
--------------------------------------------------------------------------------
[0.22107 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:7: TypeError: LinkedNode.__init__() missing 1 required positional argument: 'value'

[36m   -[0m [#  48] SDI linkedList2: 
--------------------------------------------------------------------------------
   8:         '''Node in a Linked List.'''
   9:         self.value = value
  10:         self.next = tail
  11:     
[34m- 12:     def checkInfinite(self):[0m
[34m- 13:         '''Check whether infinite loop via next.'''[0m
[34m- 14:         p1 = p2 = self[0m
[34m- 15:         while (p1 != None and p2 != None):[0m
[34m- 16:             if p2.next == None:[0m
[34m- 17:                 return False[0m
[34m- 18:             p1 = p1.next[0m
[34m- 19:             p2 = p2.next.next[0m
[34m- 20:             [0m
[34m- 21:             if p1 == p2:[0m
[34m- 22:                 return True[0m
[34m- 23:         return False[0m
[34m- 24: class LinkedList:[0m
[34m- 25:     def __init__(self, *start):[0m
[34m- 26:         '''Demonstrate linked lists in Python.'''[0m
[34m- 27:         self.head = None[0m
[34m- 28:         for _ in start:[0m
[34m- 29:             self.prepend(_)[0m
[34m- 30:     [0m
[32m+ 12:     @staticmethod[0m
[32m+ 13:     def checkInfinite(self):[0m
[32m+ 14:         '''Check whether infinite loop via next.'''[0m
[32m+ 15:         p1 = p2 = self[0m
[32m+ 16:         while (p1 != None and p2 != None):[0m
[32m+ 17:             if p2.next == None:[0m
[32m+ 18:                 return False[0m
[32m+ 19:             p1 = p1.next[0m
[32m+ 20:             p2 = p2.next.next[0m
[32m+ 21:             [0m
[32m+ 22:             if p1 == p2:[0m
[32m+ 23:                 return True[0m
[32m+ 24:         return False[0m
[32m+ 25: class LinkedList:[0m
[32m+ 26:     def __init__(self, *start):[0m
[32m+ 27:         '''Demonstrate linked lists in Python.'''[0m
[32m+ 28:         self.head = None[0m
[32m+ 29:         for _ in start:[0m
[32m+ 30:             self.prepend(_)[0m
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
--------------------------------------------------------------------------------
[0.22146 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: TypeError: LinkedNode.checkInfinite() missing 1 required positional argument: 'self'

[36m   -[0m [#  49] SDI linkedList2: 
--------------------------------------------------------------------------------
  21:             if p1 == p2:
  22:                 return True
  23:         return False
  24: class LinkedList:
[34m- 25:     def __init__(self, *start):[0m
[34m- 26:         '''Demonstrate linked lists in Python.'''[0m
[34m- 27:         self.head = None[0m
[34m- 28:         for _ in start:[0m
[34m- 29:             self.prepend(_)[0m
[34m- 30:     [0m
[32m+ 25:     @staticmethod[0m
[32m+ 26:     def __init__(self, *start):[0m
[32m+ 27:         '''Demonstrate linked lists in Python.'''[0m
[32m+ 28:         self.head = None[0m
[32m+ 29:         for _ in start:[0m
[32m+ 30:             self.prepend(_)[0m
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
--------------------------------------------------------------------------------
[0.21663 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
>       linked_list_0 = module_0.LinkedList(*list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = None, start = ()

>   ???
E   AttributeError: 'NoneType' object has no attribute 'head'

linkedList2:28: AttributeError
[36m   -[0m [#  50] SDI linkedList2: 
--------------------------------------------------------------------------------
  27:         self.head = None
  28:         for _ in start:
  29:             self.prepend(_)
  30:     
[34m- 31:     def prepend(self, value):[0m
[34m- 32:         '''Prepend element into list.'''[0m
[34m- 33:         self.head = LinkedNode(value, self.head)[0m
[34m- 34:     [0m
[32m+ 31:     @staticmethod[0m
[32m+ 32:     def prepend(self, value):[0m
[32m+ 33:         '''Prepend element into list.'''[0m
[32m+ 34:         self.head = LinkedNode(value, self.head)[0m
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
--------------------------------------------------------------------------------
[0.24260 s] [36mincompetent[0m

TypeError: linkedList2:29: TypeError: LinkedList.prepend() missing 1 required positional argument: 'value'

[36m   -[0m [#  51] SDI linkedList2: 
--------------------------------------------------------------------------------
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
  34:     
[34m- 35:     def pop(self):[0m
[34m- 36:         '''Remove first value in list.'''[0m
[34m- 37:         if self.head is None:[0m
[34m- 38:             raise Exception('Linked list is empty.')[0m
[34m- 39:         val = self.head.value[0m
[34m- 40:         self.head = self.head.next[0m
[34m- 41:         return val[0m
[34m- 42:     [0m
[32m+ 35:     @staticmethod[0m
[32m+ 36:     def pop(self):[0m
[32m+ 37:         '''Remove first value in list.'''[0m
[32m+ 38:         if self.head is None:[0m
[32m+ 39:             raise Exception('Linked list is empty.')[0m
[32m+ 40:         val = self.head.value[0m
[32m+ 41:         self.head = self.head.next[0m
[32m+ 42:         return val[0m
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
--------------------------------------------------------------------------------
[0.28853 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: TypeError: LinkedList.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  52] SDI linkedList2: 
--------------------------------------------------------------------------------
  39:         val = self.head.value
  40:         self.head = self.head.next
  41:         return val
  42:     
[34m- 43:     def remove(self, value):[0m
[34m- 44:         '''Remove value from list.'''[0m
[34m- 45:         n = self.head[0m
[34m- 46:         last = None[0m
[34m- 47:         while n != None:[0m
[34m- 48:             if n.value == value:[0m
[34m- 49:                 if last == None:[0m
[34m- 50:                     self.head = self.head.next[0m
[34m- 51:                 else:[0m
[34m- 52:                     last.next = n.next[0m
[34m- 53:                 return True[0m
[34m- 54:             last = n[0m
[34m- 55:             n = n.next[0m
[34m- 56:         return False[0m
[34m- 57:     [0m
[32m+ 43:     @staticmethod[0m
[32m+ 44:     def remove(self, value):[0m
[32m+ 45:         '''Remove value from list.'''[0m
[32m+ 46:         n = self.head[0m
[32m+ 47:         last = None[0m
[32m+ 48:         while n != None:[0m
[32m+ 49:             if n.value == value:[0m
[32m+ 50:                 if last == None:[0m
[32m+ 51:                     self.head = self.head.next[0m
[32m+ 52:                 else:[0m
[32m+ 53:                     last.next = n.next[0m
[32m+ 54:                 return True[0m
[32m+ 55:             last = n[0m
[32m+ 56:             n = n.next[0m
[32m+ 57:         return False[0m
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
  61:         while n != None:
--------------------------------------------------------------------------------
[0.29911 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:28: TypeError: LinkedList.remove() missing 1 required positional argument: 'value'

[36m   -[0m [#  53] SDI linkedList2: 
--------------------------------------------------------------------------------
  54:             last = n
  55:             n = n.next
  56:         return False
  57:     
[34m- 58:     def __iter__(self):[0m
[34m- 59:         '''Iterator of values in the list.'''[0m
[34m- 60:         n = self.head[0m
[34m- 61:         while n != None:[0m
[34m- 62:             yield n.value[0m
[34m- 63:             n = n.next[0m
[34m- 64:     [0m
[32m+ 58:     @staticmethod[0m
[32m+ 59:     def __iter__(self):[0m
[32m+ 60:         '''Iterator of values in the list.'''[0m
[32m+ 61:         n = self.head[0m
[32m+ 62:         while n != None:[0m
[32m+ 63:             yield n.value[0m
[32m+ 64:             n = n.next[0m
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
--------------------------------------------------------------------------------
[0.23005 s] [36mincompetent[0m

TypeError: linkedList2:70: TypeError: LinkedList.__iter__() missing 1 required positional argument: 'self'

[36m   -[0m [#  54] SDI linkedList2: 
--------------------------------------------------------------------------------
  61:         while n != None:
  62:             yield n.value
  63:             n = n.next
  64:     
[34m- 65:     def __repr__(self):[0m
[34m- 66:         '''String representation of linked list.'''[0m
[34m- 67:         if self.head is None:[0m
[34m- 68:             return 'link:[]'[0m
[34m- 69:         [0m
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[34m- 71:     [0m
[32m+ 65:     @staticmethod[0m
[32m+ 66:     def __repr__(self):[0m
[32m+ 67:         '''String representation of linked list.'''[0m
[32m+ 68:         if self.head is None:[0m
[32m+ 69:             return 'link:[]'[0m
[32m+ 70:         [0m
[32m+ 71:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
--------------------------------------------------------------------------------
[0.20660 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:62: TypeError: LinkedList.__repr__() missing 1 required positional argument: 'self'

[36m   -[0m [#  55] SDI linkedList2: 
--------------------------------------------------------------------------------
  68:             return 'link:[]'
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
[34m- 72:     def __len__(self):[0m
[34m- 73:         '''Count values in list.'''[0m
[34m- 74:         n = self.head[0m
[34m- 75:         count = 0[0m
[34m- 76:         while n != None:[0m
[34m- 77:             count += 1[0m
[34m- 78:             n = n.next[0m
[34m- 79:         return count[0m
[32m+ 72:     @staticmethod[0m
[32m+ 73:     def __len__(self):[0m
[32m+ 74:         '''Count values in list.'''[0m
[32m+ 75:         n = self.head[0m
[32m+ 76:         count = 0[0m
[32m+ 77:         while n != None:[0m
[32m+ 78:             count += 1[0m
[32m+ 79:             n = n.next[0m
[32m+ 80:         return count[0m
--------------------------------------------------------------------------------
[0.22725 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: TypeError: LinkedList.__len__() missing 1 required positional argument: 'self'

[36m   -[0m [#  56] SDL linkedList2: 
--------------------------------------------------------------------------------
   5: '''
   6: class LinkedNode:
   7:     def __init__(self, value, tail=None):
   8:         '''Node in a Linked List.'''
[34m-  9:         self.value = value[0m
[32m+  9:         pass[0m
  10:         self.next = tail
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
--------------------------------------------------------------------------------
[0.22348 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'LinkedNode' object has no attribute 'value'") raised in repr()] LinkedList object at 0x7f3ca7be5090>

>   ???
E   AttributeError: 'LinkedNode' object has no attribute 'value'

linkedList2:39: AttributeError
[36m   -[0m [#  57] SDL linkedList2: 
--------------------------------------------------------------------------------
   6: class LinkedNode:
   7:     def __init__(self, value, tail=None):
   8:         '''Node in a Linked List.'''
   9:         self.value = value
[34m- 10:         self.next = tail[0m
[32m+ 10:         pass[0m
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
--------------------------------------------------------------------------------
[0.20566 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_0

def test_case_0():
        bool_0 = True
        linked_node_0 = module_0.LinkedNode(bool_0)
>       var_0 = linked_node_0.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList2.LinkedNode object at 0x7f3ca7b52410>

>   ???
E   AttributeError: 'LinkedNode' object has no attribute 'next'

linkedList2:16: AttributeError
[36m   -[0m [#  58] SDL linkedList2: 
--------------------------------------------------------------------------------
  10:         self.next = tail
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
[34m- 14:         p1 = p2 = self[0m
[32m+ 14:         pass[0m
  15:         while (p1 != None and p2 != None):
  16:             if p2.next == None:
  17:                 return False
  18:             p1 = p1.next
--------------------------------------------------------------------------------
[0.22002 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_0

def test_case_0():
        bool_0 = True
        linked_node_0 = module_0.LinkedNode(bool_0)
>       var_0 = linked_node_0.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList2.LinkedNode object at 0x7f3ca7f14730>

>   ???
E   UnboundLocalError: local variable 'p1' referenced before assignment

linkedList2:15: UnboundLocalError
[36m   -[0m [#  59] SDL linkedList2: 
--------------------------------------------------------------------------------
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
  16:             if p2.next == None:
[34m- 17:                 return False[0m
[32m+ 17:                 pass[0m
  18:             p1 = p1.next
  19:             p2 = p2.next.next
  20:             
  21:             if p1 == p2:
--------------------------------------------------------------------------------
[0.22126 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_0

def test_case_0():
        bool_0 = True
        linked_node_0 = module_0.LinkedNode(bool_0)
>       var_0 = linked_node_0.checkInfinite()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList2.LinkedNode object at 0x7f3ca7d11cf0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList2:19: AttributeError
[36m   -[0m [#  60] SDL linkedList2: 
--------------------------------------------------------------------------------
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
  16:             if p2.next == None:
  17:                 return False
[34m- 18:             p1 = p1.next[0m
[32m+ 18:             pass[0m
  19:             p2 = p2.next.next
  20:             
  21:             if p1 == p2:
  22:                 return True
--------------------------------------------------------------------------------
[5.00893 s] [33mtimeout[0m
[36m   -[0m [#  61] SDL linkedList2: 
--------------------------------------------------------------------------------
  15:         while (p1 != None and p2 != None):
  16:             if p2.next == None:
  17:                 return False
  18:             p1 = p1.next
[34m- 19:             p2 = p2.next.next[0m
[32m+ 19:             pass[0m
  20:             
  21:             if p1 == p2:
  22:                 return True
  23:         return False
--------------------------------------------------------------------------------
[5.00459 s] [33mtimeout[0m
[36m   -[0m [#  62] SDL linkedList2: 
--------------------------------------------------------------------------------
  18:             p1 = p1.next
  19:             p2 = p2.next.next
  20:             
  21:             if p1 == p2:
[34m- 22:                 return True[0m
[32m+ 22:                 pass[0m
  23:         return False
  24: class LinkedList:
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
--------------------------------------------------------------------------------
[5.00646 s] [33mtimeout[0m
[36m   -[0m [#  63] SDL linkedList2: 
--------------------------------------------------------------------------------
  19:             p2 = p2.next.next
  20:             
  21:             if p1 == p2:
  22:                 return True
[34m- 23:         return False[0m
[32m+ 23:         pass[0m
  24: class LinkedList:
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
--------------------------------------------------------------------------------
[0.18593 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_13

def test_case_13():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        linked_node_0 = module_0.LinkedNode(linked_list_0)
        assert len(linked_node_0.value) == 0
        linked_node_1 = module_0.LinkedNode(linked_node_0, linked_node_0)
        var_0 = linked_node_1.checkInfinite()
>       assert var_0 is False
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:134: AssertionError
[36m   -[0m [#  64] SDL linkedList2: 
--------------------------------------------------------------------------------
  23:         return False
  24: class LinkedList:
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
[34m- 27:         self.head = None[0m
[32m+ 27:         pass[0m
  28:         for _ in start:
  29:             self.prepend(_)
  30:     
  31:     def prepend(self, value):
--------------------------------------------------------------------------------
[0.22606 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
>       linked_list_0 = module_0.LinkedList(*list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
linkedList2:29: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'LinkedList' object has no attribute 'head'") raised in repr()] LinkedList object at 0x7f3ca7cfcd30>
value = None

>   ???
E   AttributeError: 'LinkedList' object has no attribute 'head'

linkedList2:33: AttributeError
[36m   -[0m [#  65] SDL linkedList2: 
--------------------------------------------------------------------------------
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
  28:         for _ in start:
[34m- 29:             self.prepend(_)[0m
[32m+ 29:             pass[0m
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
--------------------------------------------------------------------------------
[0.22496 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [#  66] SDL linkedList2: 
--------------------------------------------------------------------------------
  29:             self.prepend(_)
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
[34m- 33:         self.head = LinkedNode(value, self.head)[0m
[32m+ 33:         pass[0m
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
--------------------------------------------------------------------------------
[0.22865 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [#  67] SDL linkedList2: 
--------------------------------------------------------------------------------
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
[34m- 39:         val = self.head.value[0m
[32m+ 39:         pass[0m
  40:         self.head = self.head.next
  41:         return val
  42:     
  43:     def remove(self, value):
--------------------------------------------------------------------------------
[0.28846 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[]

>   ???
E   NameError: name 'val' is not defined

linkedList2:41: NameError
[36m   -[0m [#  68] SDL linkedList2: 
--------------------------------------------------------------------------------
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
  39:         val = self.head.value
[34m- 40:         self.head = self.head.next[0m
[32m+ 40:         pass[0m
  41:         return val
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
--------------------------------------------------------------------------------
[0.28983 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
        var_0 = linked_list_1.pop()
        assert var_0 == "'_*"
>       assert len(linked_list_1) == 0
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:44: AssertionError
[36m   -[0m [#  69] SDL linkedList2: 
--------------------------------------------------------------------------------
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
  39:         val = self.head.value
  40:         self.head = self.head.next
[34m- 41:         return val[0m
[32m+ 41:         pass[0m
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
  45:         n = self.head
--------------------------------------------------------------------------------
[0.22429 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
        var_0 = linked_list_1.pop()
>       assert var_0 == "'_*"
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:43: AssertionError
[36m   -[0m [#  70] SDL linkedList2: 
--------------------------------------------------------------------------------
  41:         return val
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
[34m- 45:         n = self.head[0m
[32m+ 45:         pass[0m
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
  49:                 if last == None:
--------------------------------------------------------------------------------
[0.24334 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_3

def test_case_3():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
>       var_0 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[], value = link:[]

>   ???
E   UnboundLocalError: local variable 'n' referenced before assignment

linkedList2:47: UnboundLocalError
[36m   -[0m [#  71] SDL linkedList2: 
--------------------------------------------------------------------------------
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
  45:         n = self.head
[34m- 46:         last = None[0m
[32m+ 46:         pass[0m
  47:         while n != None:
  48:             if n.value == value:
  49:                 if last == None:
  50:                     self.head = self.head.next
--------------------------------------------------------------------------------
[0.22700 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
>       var_1 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7b51f00>
value = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7b51f00>

>   ???
E   UnboundLocalError: local variable 'last' referenced before assignment

linkedList2:49: UnboundLocalError
[36m   -[0m [#  72] SDL linkedList2: 
--------------------------------------------------------------------------------
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
  49:                 if last == None:
[34m- 50:                     self.head = self.head.next[0m
[32m+ 50:                     pass[0m
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
  54:             last = n
--------------------------------------------------------------------------------
[0.23686 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
        var_1 = linked_list_0.remove(linked_list_0)
        assert var_1 is True
>       assert len(linked_list_0) == 0
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:54: AssertionError
[36m   -[0m [#  73] SDL linkedList2: 
--------------------------------------------------------------------------------
  48:             if n.value == value:
  49:                 if last == None:
  50:                     self.head = self.head.next
  51:                 else:
[34m- 52:                     last.next = n.next[0m
[32m+ 52:                     pass[0m
  53:                 return True
  54:             last = n
  55:             n = n.next
  56:         return False
--------------------------------------------------------------------------------
[0.30171 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_WHOLE_SUITE.py::test_case_1

def test_case_1():
        tuple_0 = ()
        linked_node_0 = module_0.LinkedNode(tuple_0)
        set_0 = set()
        list_0 = []
        var_0 = linked_node_0.checkInfinite()
        assert var_0 is False
        var_1 = var_0.__repr__()
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 0
        var_2 = linked_list_0.remove(set_0)
        assert var_2 is False
        str_0 = '3'
        linked_list_1 = module_0.LinkedList(*str_0)
        assert len(linked_list_1) == 1
        var_3 = linked_list_1.prepend(linked_list_1)
        assert len(linked_list_1) == 2
        var_4 = var_2.__repr__()
        var_5 = linked_list_1.__len__()
        assert var_5 == 2
        var_6 = var_4.__iter__()
        var_7 = linked_list_1.remove(str_0)
        assert var_7 is True
>       assert len(linked_list_1) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_WHOLE_SUITE.py:34: AssertionError
[36m   -[0m [#  74] SDL linkedList2: 
--------------------------------------------------------------------------------
  49:                 if last == None:
  50:                     self.head = self.head.next
  51:                 else:
  52:                     last.next = n.next
[34m- 53:                 return True[0m
[32m+ 53:                 pass[0m
  54:             last = n
  55:             n = n.next
  56:         return False
  57:     
--------------------------------------------------------------------------------
[0.22237 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
        var_1 = linked_list_0.remove(linked_list_0)
>       assert var_1 is True
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:53: AssertionError
[36m   -[0m [#  75] SDL linkedList2: 
--------------------------------------------------------------------------------
  50:                     self.head = self.head.next
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
[34m- 54:             last = n[0m
[32m+ 54:             pass[0m
  55:             n = n.next
  56:         return False
  57:     
  58:     def __iter__(self):
--------------------------------------------------------------------------------
[0.31362 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_remove_middle_element

def test_remove_middle_element():
        # Create an instance of LinkedList with multiple items
        linked_list = LinkedList(10, 20, 30, 40, 50)
    
        # Remove an element in the middle (e.g., 30)
        linked_list.remove(30)
    
        # Verify the state after removal
        assert len(linked_list) == 4
>       assert list(linked_list) == [50, 40, 20, 10]
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:39: AssertionError
[36m   -[0m [#  76] SDL linkedList2: 
--------------------------------------------------------------------------------
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
  54:             last = n
[34m- 55:             n = n.next[0m
[32m+ 55:             pass[0m
  56:         return False
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
--------------------------------------------------------------------------------
[5.00501 s] [33mtimeout[0m
[36m   -[0m [#  77] SDL linkedList2: 
--------------------------------------------------------------------------------
  52:                     last.next = n.next
  53:                 return True
  54:             last = n
  55:             n = n.next
[34m- 56:         return False[0m
[32m+ 56:         pass[0m
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
--------------------------------------------------------------------------------
[0.21757 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_3

def test_case_3():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.remove(linked_list_0)
>       assert var_0 is False
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:29: AssertionError
[36m   -[0m [#  78] SDL linkedList2: 
--------------------------------------------------------------------------------
  56:         return False
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
[34m- 60:         n = self.head[0m
[32m+ 60:         pass[0m
  61:         while n != None:
  62:             yield n.value
  63:             n = n.next
  64:     
--------------------------------------------------------------------------------
[0.23588 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
>       var_0 = linked_list_0.__repr__()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
linkedList2:70: in __repr__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[UnboundLocalError("local variable 'n' referenced before assignment") raised in repr()] LinkedList object at 0x7f3ca7dca7d0>

>   ???
E   UnboundLocalError: local variable 'n' referenced before assignment

linkedList2:61: UnboundLocalError
[36m   -[0m [#  79] SDL linkedList2: 
--------------------------------------------------------------------------------
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
  61:         while n != None:
[34m- 62:             yield n.value[0m
[32m+ 62:             pass[0m
  63:             n = n.next
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
--------------------------------------------------------------------------------
[0.24929 s] [36mincompetent[0m

TypeError: linkedList2:70: TypeError: iter() returned non-iterator of type 'NoneType'

[36m   -[0m [#  80] SDL linkedList2: 
--------------------------------------------------------------------------------
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
  61:         while n != None:
  62:             yield n.value
[34m- 63:             n = n.next[0m
[32m+ 63:             pass[0m
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
--------------------------------------------------------------------------------
[5.00694 s] [33mtimeout[0m
[36m   -[0m [#  81] SDL linkedList2: 
--------------------------------------------------------------------------------
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
[34m- 68:             return 'link:[]'[0m
[32m+ 68:             pass[0m
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
  72:     def __len__(self):
--------------------------------------------------------------------------------
[0.26338 s] [31msurvived[0m
[36m   -[0m [#  82] SDL linkedList2: 
--------------------------------------------------------------------------------
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
  68:             return 'link:[]'
  69:         
[34m- 70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))[0m
[32m+ 70:         pass[0m
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
--------------------------------------------------------------------------------
[0.29680 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
        var_0 = linked_list_0.__repr__()
>       assert var_0 == 'link:[[True, True],[True, True],[True, True]]'
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:63: AssertionError
[36m   -[0m [#  83] SDL linkedList2: 
--------------------------------------------------------------------------------
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
[34m- 74:         n = self.head[0m
[32m+ 74:         pass[0m
  75:         count = 0
  76:         while n != None:
  77:             count += 1
  78:             n = n.next
--------------------------------------------------------------------------------
[0.29263 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[None]

>   ???
E   UnboundLocalError: local variable 'n' referenced before assignment

linkedList2:76: UnboundLocalError
[36m   -[0m [#  84] SDL linkedList2: 
--------------------------------------------------------------------------------
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
  74:         n = self.head
[34m- 75:         count = 0[0m
[32m+ 75:         pass[0m
  76:         while n != None:
  77:             count += 1
  78:             n = n.next
  79:         return count
--------------------------------------------------------------------------------
[0.28260 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[None]

>   ???
E   UnboundLocalError: local variable 'count' referenced before assignment

linkedList2:77: UnboundLocalError
[36m   -[0m [#  85] SDL linkedList2: 
--------------------------------------------------------------------------------
  74:         n = self.head
  75:         count = 0
  76:         while n != None:
  77:             count += 1
[34m- 78:             n = n.next[0m
[32m+ 78:             pass[0m
  79:         return count
--------------------------------------------------------------------------------
[5.00899 s] [33mtimeout[0m
[36m   -[0m [#  86] SDL linkedList2: 
--------------------------------------------------------------------------------
  75:         count = 0
  76:         while n != None:
  77:             count += 1
  78:             n = n.next
[34m- 79:         return count[0m
[32m+ 79:         pass[0m
--------------------------------------------------------------------------------
[0.21898 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/linkedList2/ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: TypeError: 'NoneType' object cannot be interpreted as an integer

[36m   -[0m [#  87] SVD linkedList2: 
--------------------------------------------------------------------------------
   5: '''
   6: class LinkedNode:
   7:     def __init__(self, value, tail=None):
   8:         '''Node in a Linked List.'''
[34m-  9:         self.value = value[0m
[32m+  9:         value = value[0m
  10:         self.next = tail
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  88] SVD linkedList2: 
--------------------------------------------------------------------------------
   6: class LinkedNode:
   7:     def __init__(self, value, tail=None):
   8:         '''Node in a Linked List.'''
   9:         self.value = value
[34m- 10:         self.next = tail[0m
[32m+ 10:         next = tail[0m
  11:     
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  89] SVD linkedList2: 
--------------------------------------------------------------------------------
  23:         return False
  24: class LinkedList:
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
[34m- 27:         self.head = None[0m
[32m+ 27:         head = None[0m
  28:         for _ in start:
  29:             self.prepend(_)
  30:     
  31:     def prepend(self, value):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  90] SVD linkedList2: 
--------------------------------------------------------------------------------
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
  28:         for _ in start:
[34m- 29:             self.prepend(_)[0m
[32m+ 29:             prepend(_)[0m
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
--------------------------------------------------------------------------------
[0.21829 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
>       linked_list_0 = module_0.LinkedList(*list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[], start = (None,), _ = None

>   ???
E   NameError: name 'prepend' is not defined

linkedList2:29: NameError
[36m   -[0m [#  91] SVD linkedList2: 
--------------------------------------------------------------------------------
  29:             self.prepend(_)
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
[34m- 33:         self.head = LinkedNode(value, self.head)[0m
[32m+ 33:         head = LinkedNode(value, self.head)[0m
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  92] SVD linkedList2: 
--------------------------------------------------------------------------------
  29:             self.prepend(_)
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
[34m- 33:         self.head = LinkedNode(value, self.head)[0m
[32m+ 33:         self.head = LinkedNode(value, head)[0m
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
--------------------------------------------------------------------------------
[0.25754 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
>       linked_list_0 = module_0.LinkedList(*list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
linkedList2:29: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[], value = None

>   ???
E   NameError: name 'head' is not defined

linkedList2:33: NameError
[36m   -[0m [#  93] SVD linkedList2: 
--------------------------------------------------------------------------------
  33:         self.head = LinkedNode(value, self.head)
  34:     
  35:     def pop(self):
  36:         '''Remove first value in list.'''
[34m- 37:         if self.head is None:[0m
[32m+ 37:         if head is None:[0m
  38:             raise Exception('Linked list is empty.')
  39:         val = self.head.value
  40:         self.head = self.head.next
  41:         return val
--------------------------------------------------------------------------------
[0.23949 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:['_*]

>   ???
E   NameError: name 'head' is not defined

linkedList2:37: NameError
[36m   -[0m [#  94] SVD linkedList2: 
--------------------------------------------------------------------------------
  35:     def pop(self):
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
[34m- 39:         val = self.head.value[0m
[32m+ 39:         val = head.value[0m
  40:         self.head = self.head.next
  41:         return val
  42:     
  43:     def remove(self, value):
--------------------------------------------------------------------------------
[0.23462 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:['_*]

>   ???
E   NameError: name 'head' is not defined

linkedList2:39: NameError
[36m   -[0m [#  95] SVD linkedList2: 
--------------------------------------------------------------------------------
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
  39:         val = self.head.value
[34m- 40:         self.head = self.head.next[0m
[32m+ 40:         head = self.head.next[0m
  41:         return val
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  96] SVD linkedList2: 
--------------------------------------------------------------------------------
  36:         '''Remove first value in list.'''
  37:         if self.head is None:
  38:             raise Exception('Linked list is empty.')
  39:         val = self.head.value
[34m- 40:         self.head = self.head.next[0m
[32m+ 40:         self.head = head.next[0m
  41:         return val
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
--------------------------------------------------------------------------------
[0.22290 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_4

def test_case_4():
        bytes_0 = b'\x14\x0f\xf4'
        list_0 = [bytes_0, bytes_0, bytes_0, bytes_0]
        linked_list_0 = module_0.LinkedList(*list_0)
        assert len(linked_list_0) == 4
        str_0 = "'_*"
        list_1 = [str_0]
        linked_list_1 = module_0.LinkedList(*list_1)
        assert len(linked_list_1) == 1
>       var_0 = linked_list_1.pop()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:['_*]

>   ???
E   NameError: name 'head' is not defined

linkedList2:40: NameError
[36m   -[0m [#  97] SVD linkedList2: 
--------------------------------------------------------------------------------
  41:         return val
  42:     
  43:     def remove(self, value):
  44:         '''Remove value from list.'''
[34m- 45:         n = self.head[0m
[32m+ 45:         n = head[0m
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
  49:                 if last == None:
--------------------------------------------------------------------------------
[0.22468 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_3

def test_case_3():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
>       var_0 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[], value = link:[]

>   ???
E   NameError: name 'head' is not defined

linkedList2:45: NameError
[36m   -[0m [#  98] SVD linkedList2: 
--------------------------------------------------------------------------------
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
  49:                 if last == None:
[34m- 50:                     self.head = self.head.next[0m
[32m+ 50:                     head = self.head.next[0m
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
  54:             last = n
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  99] SVD linkedList2: 
--------------------------------------------------------------------------------
  46:         last = None
  47:         while n != None:
  48:             if n.value == value:
  49:                 if last == None:
[34m- 50:                     self.head = self.head.next[0m
[32m+ 50:                     self.head = head.next[0m
  51:                 else:
  52:                     last.next = n.next
  53:                 return True
  54:             last = n
--------------------------------------------------------------------------------
[0.30138 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
>       var_1 = linked_list_0.remove(linked_list_0)

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7e831f0>
value = <[RecursionError('maximum recursion depth exceeded while calling a Python object') raised in repr()] LinkedList object at 0x7f3ca7e831f0>

>   ???
E   NameError: name 'head' is not defined

linkedList2:50: NameError
[36m   -[0m [# 100] SVD linkedList2: 
--------------------------------------------------------------------------------
  56:         return False
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
[34m- 60:         n = self.head[0m
[32m+ 60:         n = head[0m
  61:         while n != None:
  62:             yield n.value
  63:             n = n.next
  64:     
--------------------------------------------------------------------------------
[0.22743 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
>       var_0 = linked_list_0.__repr__()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
linkedList2:70: in __repr__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[NameError("name 'head' is not defined") raised in repr()] LinkedList object at 0x7f3ca7b73790>

>   ???
E   NameError: name 'head' is not defined

linkedList2:60: NameError
[36m   -[0m [# 101] SVD linkedList2: 
--------------------------------------------------------------------------------
  63:             n = n.next
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
[34m- 67:         if self.head is None:[0m
[32m+ 67:         if head is None:[0m
  68:             return 'link:[]'
  69:         
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
--------------------------------------------------------------------------------
[0.22791 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_6

def test_case_6():
        bool_0 = True
        list_0 = [bool_0, bool_0]
        list_1 = [list_0, list_0, list_0]
        linked_list_0 = module_0.LinkedList(*list_1)
        assert len(linked_list_0) == 3
>       var_0 = linked_list_0.__repr__()

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[NameError("name 'head' is not defined") raised in repr()] LinkedList object at 0x7f3ca7dcba60>

>   ???
E   NameError: name 'head' is not defined

linkedList2:67: NameError
[36m   -[0m [# 102] SVD linkedList2: 
--------------------------------------------------------------------------------
  70:         return 'link:[{0:s}]'.format(','.join(map(str, self)))
  71:     
  72:     def __len__(self):
  73:         '''Count values in list.'''
[34m- 74:         n = self.head[0m
[32m+ 74:         n = head[0m
  75:         count = 0
  76:         while n != None:
  77:             count += 1
  78:             n = n.next
--------------------------------------------------------------------------------
[0.23115 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = link:[None]

>   ???
E   NameError: name 'head' is not defined

linkedList2:74: NameError
[36m   -[0m [# 103] ZIL linkedList2: 
--------------------------------------------------------------------------------
  12:     def checkInfinite(self):
  13:         '''Check whether infinite loop via next.'''
  14:         p1 = p2 = self
  15:         while (p1 != None and p2 != None):
[34m- 16:             if p2.next == None:[0m
[34m- 17:                 return False[0m
[34m- 18:             p1 = p1.next[0m
[34m- 19:             p2 = p2.next.next[0m
[34m- 20:             [0m
[34m- 21:             if p1 == p2:[0m
[34m- 22:                 return True[0m
[34m- 23:         return False[0m
[32m+ 16:             break[0m
[32m+ 17:         [0m
[32m+ 18:         [0m
[32m+ 19:         [0m
[32m+ 20:         [0m
[32m+ 21:         [0m
[32m+ 22:         return False[0m
[32m+ 23: [0m
  24: class LinkedList:
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
--------------------------------------------------------------------------------
[0.30637 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py::test_check_infinite_with_loop

def test_check_infinite_with_loop():
        # Create a linked list with an infinite loop
        node1 = LinkedNode(1)
        node2 = LinkedNode(2)
        node1.next = node2
        node2.next = node1
    
>       assert node1.checkInfinite()
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_MUTATEST.py:11: AssertionError
[36m   -[0m [# 104] ZIL linkedList2: 
--------------------------------------------------------------------------------
  25:     def __init__(self, *start):
  26:         '''Demonstrate linked lists in Python.'''
  27:         self.head = None
  28:         for _ in start:
[34m- 29:             self.prepend(_)[0m
[32m+ 29:             break[0m
  30:     
  31:     def prepend(self, value):
  32:         '''Prepend element into list.'''
  33:         self.head = LinkedNode(value, self.head)
--------------------------------------------------------------------------------
[0.21926 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[36m   -[0m [# 105] ZIL linkedList2: 
--------------------------------------------------------------------------------
  44:         '''Remove value from list.'''
  45:         n = self.head
  46:         last = None
  47:         while n != None:
[34m- 48:             if n.value == value:[0m
[34m- 49:                 if last == None:[0m
[34m- 50:                     self.head = self.head.next[0m
[34m- 51:                 else:[0m
[34m- 52:                     last.next = n.next[0m
[34m- 53:                 return True[0m
[34m- 54:             last = n[0m
[34m- 55:             n = n.next[0m
[32m+ 48:             break[0m
[32m+ 49:         [0m
[32m+ 50:         [0m
[32m+ 51:         [0m
[32m+ 52:         [0m
[32m+ 53:         [0m
[32m+ 54:         [0m
[32m+ 55:         [0m
  56:         return False
  57:     
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
--------------------------------------------------------------------------------
[0.24569 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_5

def test_case_5():
        linked_list_0 = module_0.LinkedList()
        assert len(linked_list_0) == 0
        var_0 = linked_list_0.prepend(linked_list_0)
        assert len(linked_list_0) == 1
        var_1 = linked_list_0.remove(linked_list_0)
>       assert var_1 is True
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:53: AssertionError
[36m   -[0m [# 106] ZIL linkedList2: 
--------------------------------------------------------------------------------
  58:     def __iter__(self):
  59:         '''Iterator of values in the list.'''
  60:         n = self.head
  61:         while n != None:
[34m- 62:             yield n.value[0m
[34m- 63:             n = n.next[0m
[32m+ 62:             break[0m
[32m+ 63:     [0m
  64:     
  65:     def __repr__(self):
  66:         '''String representation of linked list.'''
  67:         if self.head is None:
--------------------------------------------------------------------------------
[0.23131 s] [36mincompetent[0m

TypeError: linkedList2:70: TypeError: iter() returned non-iterator of type 'NoneType'

[36m   -[0m [# 107] ZIL linkedList2: 
--------------------------------------------------------------------------------
  73:         '''Count values in list.'''
  74:         n = self.head
  75:         count = 0
  76:         while n != None:
[34m- 77:             count += 1[0m
[34m- 78:             n = n.next[0m
[32m+ 77:             break[0m
[32m+ 78:         [0m
  79:         return count
--------------------------------------------------------------------------------
[0.23541 s] [32mkilled[0m by ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py::test_case_1

def test_case_1():
        none_type_0 = None
        list_0 = [none_type_0]
        linked_list_0 = module_0.LinkedList(*list_0)
>       assert len(linked_list_0) == 1
E       AssertionError

ALL-SMART-GPT-MUTATEST/test_linkedList2_DYNAMOSA.py:15: AssertionError
[34m[*][0m Mutation score [67.38786 s]: [1m[34m98.9%[0m
[36m   -[0m all: 107
[36m   -[0m killed: 81 (75.7%)
[36m   -[0m survived: 1 (0.9%)
[36m   -[0m incompetent: 18 (16.8%)
[36m   -[0m timeout: 7 (6.5%)
