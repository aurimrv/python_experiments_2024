[34m[*][0m Start mutation process:
[36m   -[0m targets: queue4.py
[36m   -[0m tests: ./MIO
[34m[*][0m 25 tests passed:
[36m   -[0m test_queue4_MIO [0.28955 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] ASR queue4: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
[34m-  50:         self._length += 1[0m
[32m+  50:         self._length -= 1[0m
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.17999 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ef8250>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
[36m   -[0m [#   2] ASR queue4: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
[34m-  62:         self._length -= 1[0m
[32m+  62:         self._length += 1[0m
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.18488 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.pop()
        assert double_linked_list_0.head is None
>       assert double_linked_list_0.tail is None
E       AssertionError

MIO/test_queue4_MIO.py:48: AssertionError
[36m   -[0m [#   3] ASR queue4: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
[34m-  75:         self._length += 1[0m
[32m+  75:         self._length -= 1[0m
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.16463 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7d77100>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
[36m   -[0m [#   4] ASR queue4: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
[34m-  87:         self._length -= 1[0m
[32m+  87:         self._length += 1[0m
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.14947 s] [31msurvived[0m
[36m   -[0m [#   5] ASR queue4: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
[34m- 105:                 self._length -= 1[0m
[32m+ 105:                 self._length += 1[0m
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.15717 s] [31msurvived[0m
[36m   -[0m [#   6] BCR queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 continue[0m
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.16908 s] [31msurvived[0m
[36m   -[0m [#   7] CDI queue4: 
--------------------------------------------------------------------------------
    3: 
    4: class Node(object):
    5:     '''Node class for data storage.'''
    6:     
[34m-   7:     def __init__(self, data=None, next_node=None, prev=None):[0m
[34m-   8:         '''Initialize Node.'''[0m
[34m-   9:         self.data = data[0m
[34m-  10:         self.next = next_node[0m
[34m-  11:         self.prev = prev[0m
[34m-  12:     [0m
[32m+   7:     @classmethod[0m
[32m+   8:     def __init__(self, data=None, next_node=None, prev=None):[0m
[32m+   9:         '''Initialize Node.'''[0m
[32m+  10:         self.data = data[0m
[32m+  11:         self.next = next_node[0m
[32m+  12:         self.prev = prev[0m
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
   16: 
--------------------------------------------------------------------------------
[0.24466 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_0.shift()
>       assert var_0 == 98
E       AssertionError

MIO/test_queue4_MIO.py:81: AssertionError
[36m   -[0m [#   8] CDI queue4: 
--------------------------------------------------------------------------------
    9:         self.data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
[34m-  13:     def __repr__(self):[0m
[34m-  14:         '''String representation.'''[0m
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[34m-  16: [0m
[32m+  13:     @classmethod[0m
[32m+  14:     def __repr__(self):[0m
[32m+  15:         '''String representation.'''[0m
[32m+  16:         return 'Value: {}'.format(self.data)[0m
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
   20: 
--------------------------------------------------------------------------------
[0.20079 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_21

def test_case_21():
        node_0 = module_0.Node()
>       var_0 = node_0.__repr__()

MIO/test_queue4_MIO.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Node'>

>   ???
E   AttributeError: type object 'Node' has no attribute 'data'

queue4:16: AttributeError
[36m   -[0m [#   9] CDI queue4: 
--------------------------------------------------------------------------------
   26:     remove(val) - will remove the first instance of (val) found in the list,
   27:     starting from the head.
   28:     '''
   29:     
[34m-  30:     def __init__(self, data=None):[0m
[34m-  31:         '''Initialize list.'''[0m
[34m-  32:         self.head = None[0m
[34m-  33:         self.tail = None[0m
[34m-  34:         self._length = 0[0m
[34m-  35:         try:[0m
[34m-  36:             for val in data:[0m
[34m-  37:                 self.push(val)[0m
[34m-  38:         except TypeError:[0m
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[34m-  41:     [0m
[32m+  30:     @classmethod[0m
[32m+  31:     def __init__(self, data=None):[0m
[32m+  32:         '''Initialize list.'''[0m
[32m+  33:         self.head = None[0m
[32m+  34:         self.tail = None[0m
[32m+  35:         self._length = 0[0m
[32m+  36:         try:[0m
[32m+  37:             for val in data:[0m
[32m+  38:                 self.push(val)[0m
[32m+  39:         except TypeError:[0m
[32m+  40:             if data:[0m
[32m+  41:                 self.push(data)[0m
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
--------------------------------------------------------------------------------
[0.18023 s] [36mincompetent[0m

TypeError: queue4:41: TypeError: DoubleLinkedList.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  10] CDI queue4: 
--------------------------------------------------------------------------------
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
[34m-  42:     def push(self, val):[0m
[34m-  43:         '''Add val to the head of the list.'''[0m
[34m-  44:         old_head = self.head[0m
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[34m-  46:         if old_head:[0m
[34m-  47:             old_head.prev = self.head[0m
[34m-  48:         if not (self.tail):[0m
[34m-  49:             self.tail = self.head[0m
[34m-  50:         self._length += 1[0m
[34m-  51:     [0m
[32m+  42:     @classmethod[0m
[32m+  43:     def push(self, val):[0m
[32m+  44:         '''Add val to the head of the list.'''[0m
[32m+  45:         old_head = self.head[0m
[32m+  46:         self.head = Node(val, next_node=old_head)[0m
[32m+  47:         if old_head:[0m
[32m+  48:             old_head.prev = self.head[0m
[32m+  49:         if not (self.tail):[0m
[32m+  50:             self.tail = self.head[0m
[32m+  51:         self._length += 1[0m
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
--------------------------------------------------------------------------------
[0.16526 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>, val = 98

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

queue4:45: AttributeError
[36m   -[0m [#  11] CDI queue4: 
--------------------------------------------------------------------------------
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
[34m-  52:     def pop(self):[0m
[34m-  53:         '''Remove the val from the head of the list.'''[0m
[34m-  54:         to_return = self.head[0m
[34m-  55:         if self._length < 1:[0m
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[34m-  57:         [0m
[34m-  58:         new_head = self.head.next[0m
[34m-  59:         if new_head:[0m
[34m-  60:             new_head.prev = None[0m
[34m-  61:         self.head = new_head[0m
[34m-  62:         self._length -= 1[0m
[34m-  63:         if self._length < 1:[0m
[34m-  64:             self.tail = None[0m
[34m-  65:         return to_return.data[0m
[34m-  66:     [0m
[32m+  52:     @classmethod[0m
[32m+  53:     def pop(self):[0m
[32m+  54:         '''Remove the val from the head of the list.'''[0m
[32m+  55:         to_return = self.head[0m
[32m+  56:         if self._length < 1:[0m
[32m+  57:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  58:         [0m
[32m+  59:         new_head = self.head.next[0m
[32m+  60:         if new_head:[0m
[32m+  61:             new_head.prev = None[0m
[32m+  62:         self.head = new_head[0m
[32m+  63:         self._length -= 1[0m
[32m+  64:         if self._length < 1:[0m
[32m+  65:             self.tail = None[0m
[32m+  66:         return to_return.data[0m
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
--------------------------------------------------------------------------------
[0.17919 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

queue4:55: AttributeError
[36m   -[0m [#  12] CDI queue4: 
--------------------------------------------------------------------------------
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
[34m-  67:     def append(self, val):[0m
[34m-  68:         '''Add val to the tail of the list.'''[0m
[34m-  69:         old_tail = self.tail[0m
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[34m-  71:         if old_tail:[0m
[34m-  72:             old_tail.next = self.tail[0m
[34m-  73:         if self._length < 1:[0m
[34m-  74:             self.head = self.tail[0m
[34m-  75:         self._length += 1[0m
[34m-  76:     [0m
[32m+  67:     @classmethod[0m
[32m+  68:     def append(self, val):[0m
[32m+  69:         '''Add val to the tail of the list.'''[0m
[32m+  70:         old_tail = self.tail[0m
[32m+  71:         self.tail = Node(val, prev=old_tail)[0m
[32m+  72:         if old_tail:[0m
[32m+  73:             old_tail.next = self.tail[0m
[32m+  74:         if self._length < 1:[0m
[32m+  75:             self.head = self.tail[0m
[32m+  76:         self._length += 1[0m
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
--------------------------------------------------------------------------------
[0.18541 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>
val = <queue4.DoubleLinkedList object at 0x7f1fe7aaa740>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'tail'

queue4:70: AttributeError
[36m   -[0m [#  13] CDI queue4: 
--------------------------------------------------------------------------------
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
[34m-  77:     def shift(self):[0m
[34m-  78:         '''Remove the val from the tail of the list.'''[0m
[34m-  79:         to_return = self.tail[0m
[34m-  80:         if self._length < 1:[0m
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[34m-  82:         [0m
[34m-  83:         new_tail = self.tail.prev[0m
[34m-  84:         if new_tail:[0m
[34m-  85:             new_tail.next = None[0m
[34m-  86:         self.tail = new_tail[0m
[34m-  87:         self._length -= 1[0m
[34m-  88:         if self._length < 1:[0m
[34m-  89:             self.tail = None[0m
[34m-  90:         return to_return.data[0m
[34m-  91:     [0m
[32m+  77:     @classmethod[0m
[32m+  78:     def shift(self):[0m
[32m+  79:         '''Remove the val from the tail of the list.'''[0m
[32m+  80:         to_return = self.tail[0m
[32m+  81:         if self._length < 1:[0m
[32m+  82:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  83:         [0m
[32m+  84:         new_tail = self.tail.prev[0m
[32m+  85:         if new_tail:[0m
[32m+  86:             new_tail.next = None[0m
[32m+  87:         self.tail = new_tail[0m
[32m+  88:         self._length -= 1[0m
[32m+  89:         if self._length < 1:[0m
[32m+  90:             self.tail = None[0m
[32m+  91:         return to_return.data[0m
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
--------------------------------------------------------------------------------
[0.19200 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'tail'

queue4:80: AttributeError
[36m   -[0m [#  14] CDI queue4: 
--------------------------------------------------------------------------------
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
[34m-  92:     def remove(self, val):[0m
[34m-  93:         '''Remove first occurance of val from list.'''[0m
[34m-  94:         curr = self.head[0m
[34m-  95:         while curr:[0m
[34m-  96:             if curr.data is val:[0m
[34m-  97:                 if self._length == 1:[0m
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[34m- 101:                 elif curr is self.head:[0m
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[34m- 103:                 elif curr is self.tail:[0m
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[34m- 105:                 self._length -= 1[0m
[34m- 106:                 return[0m
[34m- 107:             curr = curr.next[0m
[34m- 108:         [0m
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[34m- 110:     [0m
[32m+  92:     @classmethod[0m
[32m+  93:     def remove(self, val):[0m
[32m+  94:         '''Remove first occurance of val from list.'''[0m
[32m+  95:         curr = self.head[0m
[32m+  96:         while curr:[0m
[32m+  97:             if curr.data is val:[0m
[32m+  98:                 if self._length == 1:[0m
[32m+  99:                     (self.head, self.tail) = (None, None)[0m
[32m+ 100:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+ 101:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[32m+ 102:                 elif curr is self.head:[0m
[32m+ 103:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 104:                 elif curr is self.tail:[0m
[32m+ 105:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 106:                 self._length -= 1[0m
[32m+ 107:                 return[0m
[32m+ 108:             curr = curr.next[0m
[32m+ 109:         [0m
[32m+ 110:         raise ValueError('{} is not in the list'.format(val))[0m
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
--------------------------------------------------------------------------------
[0.25585 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>
val = <queue4.Queue object at 0x7f1fe7de06d0>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

queue4:95: AttributeError
[36m   -[0m [#  15] CDI queue4: 
--------------------------------------------------------------------------------
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
[34m- 111:     def _repr(self):[0m
[34m- 112:         '''Return list representation of dll.'''[0m
[34m- 113:         l = [][0m
[34m- 114:         while True:[0m
[34m- 115:             try:[0m
[34m- 116:                 popped_data = self.pop()[0m
[34m- 117:                 l.append(popped_data)[0m
[34m- 118:             except IndexError:[0m
[34m- 119:                 break[0m
[34m- 120:         return l[0m
[34m- 121: [0m
[32m+ 111:     @classmethod[0m
[32m+ 112:     def _repr(self):[0m
[32m+ 113:         '''Return list representation of dll.'''[0m
[32m+ 114:         l = [][0m
[32m+ 115:         while True:[0m
[32m+ 116:             try:[0m
[32m+ 117:                 popped_data = self.pop()[0m
[32m+ 118:                 l.append(popped_data)[0m
[32m+ 119:             except IndexError:[0m
[32m+ 120:                 break[0m
[32m+ 121:         return l[0m
  122: 
  123: class Queue(object):
  124:     '''Implementation of Queue.
  125: 
--------------------------------------------------------------------------------
[0.17248 s] [31msurvived[0m
[36m   -[0m [#  16] CDI queue4: 
--------------------------------------------------------------------------------
  131:     If the queue is empty, returns None
  132:     size(): return the size of the queue. Returns 0 if the queue is empty.
  133:     '''
  134:     
[34m- 135:     def __init__(self, data=None):[0m
[34m- 136:         '''Initialize queue data structure.'''[0m
[34m- 137:         self._container = DoubleLinkedList(data)[0m
[34m- 138:     [0m
[32m+ 135:     @classmethod[0m
[32m+ 136:     def __init__(self, data=None):[0m
[32m+ 137:         '''Initialize queue data structure.'''[0m
[32m+ 138:         self._container = DoubleLinkedList(data)[0m
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
--------------------------------------------------------------------------------
[0.16916 s] [31msurvived[0m
[36m   -[0m [#  17] CDI queue4: 
--------------------------------------------------------------------------------
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
  137:         self._container = DoubleLinkedList(data)
  138:     
[34m- 139:     def enqueue(self, val):[0m
[34m- 140:         '''Add a value to the queue.'''[0m
[34m- 141:         self._container.append(val)[0m
[34m- 142:     [0m
[32m+ 139:     @classmethod[0m
[32m+ 140:     def enqueue(self, val):[0m
[32m+ 141:         '''Add a value to the queue.'''[0m
[32m+ 142:         self._container.append(val)[0m
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
--------------------------------------------------------------------------------
[0.20647 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_23

def test_case_23():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO/test_queue4_MIO.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Queue'>, val = <queue4.Queue object at 0x7f1fe7fd7fa0>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

queue4:142: AttributeError
[36m   -[0m [#  18] CDI queue4: 
--------------------------------------------------------------------------------
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
[34m- 143:     def dequeue(self):[0m
[34m- 144:         '''Remove a value from the front of the queue.'''[0m
[34m- 145:         return self._container.pop()[0m
[34m- 146:     [0m
[32m+ 143:     @classmethod[0m
[32m+ 144:     def dequeue(self):[0m
[32m+ 145:         '''Remove a value from the front of the queue.'''[0m
[32m+ 146:         return self._container.pop()[0m
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
--------------------------------------------------------------------------------
[0.16303 s] [31msurvived[0m
[36m   -[0m [#  19] CDI queue4: 
--------------------------------------------------------------------------------
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
[34m- 147:     def peek(self):[0m
[34m- 148:         '''Return the next value in the queue without dequing it.'''[0m
[34m- 149:         try:[0m
[34m- 150:             return self._container.head.data[0m
[34m- 151:         except AttributeError:[0m
[34m- 152:             return None[0m
[34m- 153:     [0m
[32m+ 147:     @classmethod[0m
[32m+ 148:     def peek(self):[0m
[32m+ 149:         '''Return the next value in the queue without dequing it.'''[0m
[32m+ 150:         try:[0m
[32m+ 151:             return self._container.head.data[0m
[32m+ 152:         except AttributeError:[0m
[32m+ 153:             return None[0m
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.16955 s] [31msurvived[0m
[36m   -[0m [#  20] CDI queue4: 
--------------------------------------------------------------------------------
  150:             return self._container.head.data
  151:         except AttributeError:
  152:             return None
  153:     
[34m- 154:     def size(self):[0m
[34m- 155:         '''Return the size of the queue.'''[0m
[34m- 156:         return self._container._length[0m
[32m+ 154:     @classmethod[0m
[32m+ 155:     def size(self):[0m
[32m+ 156:         '''Return the size of the queue.'''[0m
[32m+ 157:         return self._container._length[0m
--------------------------------------------------------------------------------
[0.18915 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_24

def test_case_24():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.size()

MIO/test_queue4_MIO.py:197: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

queue4:157: AttributeError
[36m   -[0m [#  21] COD queue4: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
[34m-  48:         if not (self.tail):[0m
[32m+  48:         if self.tail:[0m
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.22809 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:10: AssertionError
[36m   -[0m [#  22] COI queue4: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
[34m-  39:             if data:[0m
[32m+  39:             if not data:[0m
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
--------------------------------------------------------------------------------
[0.18079 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_2

def test_case_2():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert double_linked_list_0.head is None
E       AssertionError

MIO/test_queue4_MIO.py:19: AssertionError
[36m   -[0m [#  23] COI queue4: 
--------------------------------------------------------------------------------
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
[34m-  46:         if old_head:[0m
[32m+  46:         if not old_head:[0m
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
--------------------------------------------------------------------------------
[0.17898 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe794bac0>, val = 98

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:47: AttributeError
[36m   -[0m [#  24] COI queue4: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
[34m-  48:         if not (self.tail):[0m
[32m+  48:         if not ((not (self.tail))):[0m
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.18469 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:10: AssertionError
[36m   -[0m [#  25] COI queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if not (self._length < 1):[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.16789 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b078b0>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
[36m   -[0m [#  26] COI queue4: 
--------------------------------------------------------------------------------
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
[34m-  59:         if new_head:[0m
[32m+  59:         if not new_head:[0m
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
--------------------------------------------------------------------------------
[0.18307 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7bae830>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:60: AttributeError
[36m   -[0m [#  27] COI queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if not (self._length < 1):[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.18498 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.pop()
        assert double_linked_list_0.head is None
>       assert double_linked_list_0.tail is None
E       AssertionError

MIO/test_queue4_MIO.py:48: AssertionError
[36m   -[0m [#  28] COI queue4: 
--------------------------------------------------------------------------------
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
[34m-  71:         if old_tail:[0m
[32m+  71:         if not old_tail:[0m
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
--------------------------------------------------------------------------------
[0.25122 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7dafee0>
val = <queue4.DoubleLinkedList object at 0x7f1fe7dafee0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:72: AttributeError
[36m   -[0m [#  29] COI queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if not (self._length < 1):[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.18055 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:45: AssertionError
[36m   -[0m [#  30] COI queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if not (self._length < 1):[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.18929 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd1ed0>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
[36m   -[0m [#  31] COI queue4: 
--------------------------------------------------------------------------------
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
[34m-  84:         if new_tail:[0m
[32m+  84:         if not new_tail:[0m
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
--------------------------------------------------------------------------------
[0.19480 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_10

def test_case_10():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ebe200>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:85: AttributeError
[36m   -[0m [#  32] COI queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if not (self._length < 1):[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.17140 s] [31msurvived[0m
[36m   -[0m [#  33] COI queue4: 
--------------------------------------------------------------------------------
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
[34m-  95:         while curr:[0m
[32m+  95:         while not curr:[0m
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
--------------------------------------------------------------------------------
[0.19592 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7e6fa30>
val = <queue4.Queue object at 0x7f1fe7e6f970>

>   ???
E   ValueError: <queue4.Queue object at 0x7f1fe7e6f970> is not in the list

queue4:109: ValueError
[36m   -[0m [#  34] COI queue4: 
--------------------------------------------------------------------------------
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
[34m-  96:             if curr.data is val:[0m
[32m+  96:             if not (curr.data is val):[0m
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
--------------------------------------------------------------------------------
[0.17666 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c2e710>
val = <queue4.Queue object at 0x7f1fe7c2e650>

>   ???
E   ValueError: <queue4.Queue object at 0x7f1fe7c2e650> is not in the list

queue4:109: ValueError
[36m   -[0m [#  35] COI queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if not (self._length == 1):[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.26302 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7acdc60>
val = <queue4.Queue object at 0x7f1fe7acd9f0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  36] COI queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif not ((curr is not self.head and curr is not self.tail)):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.18318 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_13

def test_case_13():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO/test_queue4_MIO.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd0dc0>
val = <queue4.DoubleLinkedList object at 0x7f1fe7fd0dc0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:100: AttributeError
[36m   -[0m [#  37] COI queue4: 
--------------------------------------------------------------------------------
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
[34m- 101:                 elif curr is self.head:[0m
[32m+ 101:                 elif not (curr is self.head):[0m
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
--------------------------------------------------------------------------------
[0.18347 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ec1630>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  38] COI queue4: 
--------------------------------------------------------------------------------
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
[34m- 103:                 elif curr is self.tail:[0m
[32m+ 103:                 elif not (curr is self.tail):[0m
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
--------------------------------------------------------------------------------
[0.16977 s] [31msurvived[0m
[36m   -[0m [#  39] COI queue4: 
--------------------------------------------------------------------------------
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
[34m- 114:         while True:[0m
[32m+ 114:         while not True:[0m
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
--------------------------------------------------------------------------------
[0.16981 s] [31msurvived[0m
[36m   -[0m [#  40] CRP queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         return 'mutpy'.format(self.data)[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.20086 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_21

def test_case_21():
        node_0 = module_0.Node()
        var_0 = node_0.__repr__()
>       assert var_0 == 'Value: None'
E       AssertionError

MIO/test_queue4_MIO.py:183: AssertionError
[36m   -[0m [#  41] CRP queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         return ''.format(self.data)[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.18893 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_21

def test_case_21():
        node_0 = module_0.Node()
        var_0 = node_0.__repr__()
>       assert var_0 == 'Value: None'
E       AssertionError

MIO/test_queue4_MIO.py:183: AssertionError
[36m   -[0m [#  42] CRP queue4: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
[34m-  34:         self._length = 0[0m
[32m+  34:         self._length = 1[0m
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.23640 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:45: AssertionError
[36m   -[0m [#  43] CRP queue4: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
[34m-  50:         self._length += 1[0m
[32m+  50:         self._length += 2[0m
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.19318 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7eb2620>
val = <queue4.Queue object at 0x7f1fe7eb0a60>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  44] CRP queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if self._length < 2:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.18197 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7d91900>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
[36m   -[0m [#  45] CRP queue4: 
--------------------------------------------------------------------------------
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  56:             raise IndexError('mutpy')[0m
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
--------------------------------------------------------------------------------
[0.15167 s] [31msurvived[0m
[36m   -[0m [#  46] CRP queue4: 
--------------------------------------------------------------------------------
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  56:             raise IndexError('')[0m
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
--------------------------------------------------------------------------------
[0.16645 s] [31msurvived[0m
[36m   -[0m [#  47] CRP queue4: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
[34m-  62:         self._length -= 1[0m
[32m+  62:         self._length -= 2[0m
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.16922 s] [31msurvived[0m
[36m   -[0m [#  48] CRP queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if self._length < 2:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.15227 s] [31msurvived[0m
[36m   -[0m [#  49] CRP queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if self._length < 2:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.18487 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7cf0610>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  50] CRP queue4: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
[34m-  75:         self._length += 1[0m
[32m+  75:         self._length += 2[0m
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.23934 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.pop()
        assert double_linked_list_0.head is None
>       assert double_linked_list_0.tail is None
E       AssertionError

MIO/test_queue4_MIO.py:48: AssertionError
[36m   -[0m [#  51] CRP queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if self._length < 2:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.17166 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_10

def test_case_10():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe796b730>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
[36m   -[0m [#  52] CRP queue4: 
--------------------------------------------------------------------------------
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  81:             raise IndexError('mutpy')[0m
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
--------------------------------------------------------------------------------
[0.16348 s] [31msurvived[0m
[36m   -[0m [#  53] CRP queue4: 
--------------------------------------------------------------------------------
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  81:             raise IndexError('')[0m
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
--------------------------------------------------------------------------------
[0.16069 s] [31msurvived[0m
[36m   -[0m [#  54] CRP queue4: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
[34m-  87:         self._length -= 1[0m
[32m+  87:         self._length -= 2[0m
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.15108 s] [31msurvived[0m
[36m   -[0m [#  55] CRP queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if self._length < 2:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.17007 s] [31msurvived[0m
[36m   -[0m [#  56] CRP queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if self._length == 2:[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.18901 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe8035f00>
val = <queue4.Queue object at 0x7f1fe80378e0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  57] CRP queue4: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
[34m- 105:                 self._length -= 1[0m
[32m+ 105:                 self._length -= 2[0m
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.23720 s] [31msurvived[0m
[36m   -[0m [#  58] CRP queue4: 
--------------------------------------------------------------------------------
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[32m+ 109:         raise ValueError('mutpy'.format(val))[0m
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
--------------------------------------------------------------------------------
[0.17864 s] [31msurvived[0m
[36m   -[0m [#  59] CRP queue4: 
--------------------------------------------------------------------------------
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[32m+ 109:         raise ValueError(''.format(val))[0m
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
--------------------------------------------------------------------------------
[0.16788 s] [31msurvived[0m
[36m   -[0m [#  60] EHD queue4: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[32m+  39:             raise[0m
[32m+  40:     [0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.18301 s] [36mincompetent[0m

TypeError: queue4:36: TypeError: 'NoneType' object is not iterable

[36m   -[0m [#  61] EHD queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 raise[0m
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.16838 s] [31msurvived[0m
[36m   -[0m [#  62] EHD queue4: 
--------------------------------------------------------------------------------
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
  151:         except AttributeError:
[34m- 152:             return None[0m
[32m+ 152:             raise[0m
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.20384 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_19

def test_case_19():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.peek()

MIO/test_queue4_MIO.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f1fe8037190>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

queue4:150: AttributeError
[36m   -[0m [#  63] EXS queue4: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[32m+  39:             pass[0m
[32m+  40:     [0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.19101 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:109: AssertionError
[36m   -[0m [#  64] EXS queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 pass[0m
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.17039 s] [31msurvived[0m
[36m   -[0m [#  65] EXS queue4: 
--------------------------------------------------------------------------------
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
  151:         except AttributeError:
[34m- 152:             return None[0m
[32m+ 152:             pass[0m
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.16637 s] [31msurvived[0m
[36m   -[0m [#  66] LCR queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif (curr is not self.head or curr is not self.tail):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.19728 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_13

def test_case_13():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO/test_queue4_MIO.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7eb1480>
val = <queue4.DoubleLinkedList object at 0x7f1fe7eb1480>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:100: AttributeError
[36m   -[0m [#  67] OIL queue4: 
--------------------------------------------------------------------------------
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
[34m-  38:         except TypeError:[0m
[32m+  38:                 breakexcept TypeError:[0m
   39:             if data:
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
--------------------------------------------------------------------------------
[0.18819 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_0.pop()
>       assert var_0 == 199
E       AssertionError

MIO/test_queue4_MIO.py:37: AssertionError
[36m   -[0m [#  68] OIL queue4: 
--------------------------------------------------------------------------------
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
[34m- 108:         [0m
[32m+ 108:             break[0m
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
--------------------------------------------------------------------------------
[0.19993 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7e27430>, val = None

>   ???
E   ValueError: None is not in the list

queue4:109: ValueError
[36m   -[0m [#  69] OIL queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
[34m- 119:                 break[0m
[32m+ 119:                 breakbreak[0m
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.17024 s] [31msurvived[0m
[36m   -[0m [#  70] RIL queue4: 
--------------------------------------------------------------------------------
   32:         self.head = None
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
[34m-  36:             for val in data:[0m
[32m+  36:             for val in reversed(data):[0m
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
--------------------------------------------------------------------------------
[0.19042 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_0.pop()
>       assert var_0 == 199
E       AssertionError

MIO/test_queue4_MIO.py:37: AssertionError
[36m   -[0m [#  71] ROR queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if self._length > 1:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.25532 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c73df0>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
[36m   -[0m [#  72] ROR queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if self._length <= 1:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.18444 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c3f760>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
[36m   -[0m [#  73] ROR queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if self._length > 1:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.16684 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.pop()
        assert double_linked_list_0.head is None
>       assert double_linked_list_0.tail is None
E       AssertionError

MIO/test_queue4_MIO.py:48: AssertionError
[36m   -[0m [#  74] ROR queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if self._length <= 1:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.15752 s] [31msurvived[0m
[36m   -[0m [#  75] ROR queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if self._length > 1:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.18532 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:45: AssertionError
[36m   -[0m [#  76] ROR queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if self._length <= 1:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.20117 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ccdff0>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  77] ROR queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if self._length > 1:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.18513 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7d72620>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
[36m   -[0m [#  78] ROR queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if self._length <= 1:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.18609 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_10

def test_case_10():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7f240d0>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
[36m   -[0m [#  79] ROR queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if self._length > 1:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.23924 s] [31msurvived[0m
[36m   -[0m [#  80] ROR queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if self._length <= 1:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.16486 s] [31msurvived[0m
[36m   -[0m [#  81] ROR queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if self._length != 1:[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.19232 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b9d360>
val = <queue4.Queue object at 0x7f1fe7b9f670>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
[36m   -[0m [#  82] SDI queue4: 
--------------------------------------------------------------------------------
    3: 
    4: class Node(object):
    5:     '''Node class for data storage.'''
    6:     
[34m-   7:     def __init__(self, data=None, next_node=None, prev=None):[0m
[34m-   8:         '''Initialize Node.'''[0m
[34m-   9:         self.data = data[0m
[34m-  10:         self.next = next_node[0m
[34m-  11:         self.prev = prev[0m
[34m-  12:     [0m
[32m+   7:     @staticmethod[0m
[32m+   8:     def __init__(self, data=None, next_node=None, prev=None):[0m
[32m+   9:         '''Initialize Node.'''[0m
[32m+  10:         self.data = data[0m
[32m+  11:         self.next = next_node[0m
[32m+  12:         self.prev = prev[0m
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
   16: 
--------------------------------------------------------------------------------
[0.17461 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
queue4:45: in push
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 98, data = None, next_node = None, prev = None

>   ???
E   AttributeError: 'int' object has no attribute 'data'

queue4:10: AttributeError
[36m   -[0m [#  83] SDI queue4: 
--------------------------------------------------------------------------------
    9:         self.data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
[34m-  13:     def __repr__(self):[0m
[34m-  14:         '''String representation.'''[0m
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[34m-  16: [0m
[32m+  13:     @staticmethod[0m
[32m+  14:     def __repr__(self):[0m
[32m+  15:         '''String representation.'''[0m
[32m+  16:         return 'Value: {}'.format(self.data)[0m
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
   20: 
--------------------------------------------------------------------------------
[0.19903 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:182: TypeError: Node.__repr__() missing 1 required positional argument: 'self'

[36m   -[0m [#  84] SDI queue4: 
--------------------------------------------------------------------------------
   26:     remove(val) - will remove the first instance of (val) found in the list,
   27:     starting from the head.
   28:     '''
   29:     
[34m-  30:     def __init__(self, data=None):[0m
[34m-  31:         '''Initialize list.'''[0m
[34m-  32:         self.head = None[0m
[34m-  33:         self.tail = None[0m
[34m-  34:         self._length = 0[0m
[34m-  35:         try:[0m
[34m-  36:             for val in data:[0m
[34m-  37:                 self.push(val)[0m
[34m-  38:         except TypeError:[0m
[34m-  39:             if data:[0m
[34m-  40:                 self.push(data)[0m
[34m-  41:     [0m
[32m+  30:     @staticmethod[0m
[32m+  31:     def __init__(self, data=None):[0m
[32m+  32:         '''Initialize list.'''[0m
[32m+  33:         self.head = None[0m
[32m+  34:         self.tail = None[0m
[32m+  35:         self._length = 0[0m
[32m+  36:         try:[0m
[32m+  37:             for val in data:[0m
[32m+  38:                 self.push(val)[0m
[32m+  39:         except TypeError:[0m
[32m+  40:             if data:[0m
[32m+  41:                 self.push(data)[0m
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
--------------------------------------------------------------------------------
[0.18091 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
data = None

>   ???
E   AttributeError: 'bytes' object has no attribute 'head'

queue4:33: AttributeError
[36m   -[0m [#  85] SDI queue4: 
--------------------------------------------------------------------------------
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
[34m-  42:     def push(self, val):[0m
[34m-  43:         '''Add val to the head of the list.'''[0m
[34m-  44:         old_head = self.head[0m
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[34m-  46:         if old_head:[0m
[34m-  47:             old_head.prev = self.head[0m
[34m-  48:         if not (self.tail):[0m
[34m-  49:             self.tail = self.head[0m
[34m-  50:         self._length += 1[0m
[34m-  51:     [0m
[32m+  42:     @staticmethod[0m
[32m+  43:     def push(self, val):[0m
[32m+  44:         '''Add val to the head of the list.'''[0m
[32m+  45:         old_head = self.head[0m
[32m+  46:         self.head = Node(val, next_node=old_head)[0m
[32m+  47:         if old_head:[0m
[32m+  48:             old_head.prev = self.head[0m
[32m+  49:         if not (self.tail):[0m
[32m+  50:             self.tail = self.head[0m
[32m+  51:         self._length += 1[0m
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
--------------------------------------------------------------------------------
[0.18171 s] [36mincompetent[0m

TypeError: queue4:40: TypeError: DoubleLinkedList.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  86] SDI queue4: 
--------------------------------------------------------------------------------
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
[34m-  52:     def pop(self):[0m
[34m-  53:         '''Remove the val from the head of the list.'''[0m
[34m-  54:         to_return = self.head[0m
[34m-  55:         if self._length < 1:[0m
[34m-  56:             raise IndexError('Cannot pop from an empty list.')[0m
[34m-  57:         [0m
[34m-  58:         new_head = self.head.next[0m
[34m-  59:         if new_head:[0m
[34m-  60:             new_head.prev = None[0m
[34m-  61:         self.head = new_head[0m
[34m-  62:         self._length -= 1[0m
[34m-  63:         if self._length < 1:[0m
[34m-  64:             self.tail = None[0m
[34m-  65:         return to_return.data[0m
[34m-  66:     [0m
[32m+  52:     @staticmethod[0m
[32m+  53:     def pop(self):[0m
[32m+  54:         '''Remove the val from the head of the list.'''[0m
[32m+  55:         to_return = self.head[0m
[32m+  56:         if self._length < 1:[0m
[32m+  57:             raise IndexError('Cannot pop from an empty list.')[0m
[32m+  58:         [0m
[32m+  59:         new_head = self.head.next[0m
[32m+  60:         if new_head:[0m
[32m+  61:             new_head.prev = None[0m
[32m+  62:         self.head = new_head[0m
[32m+  63:         self._length -= 1[0m
[32m+  64:         if self._length < 1:[0m
[32m+  65:             self.tail = None[0m
[32m+  66:         return to_return.data[0m
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
--------------------------------------------------------------------------------
[0.22533 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:36: TypeError: DoubleLinkedList.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  87] SDI queue4: 
--------------------------------------------------------------------------------
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
[34m-  67:     def append(self, val):[0m
[34m-  68:         '''Add val to the tail of the list.'''[0m
[34m-  69:         old_tail = self.tail[0m
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[34m-  71:         if old_tail:[0m
[34m-  72:             old_tail.next = self.tail[0m
[34m-  73:         if self._length < 1:[0m
[34m-  74:             self.head = self.tail[0m
[34m-  75:         self._length += 1[0m
[34m-  76:     [0m
[32m+  67:     @staticmethod[0m
[32m+  68:     def append(self, val):[0m
[32m+  69:         '''Add val to the tail of the list.'''[0m
[32m+  70:         old_tail = self.tail[0m
[32m+  71:         self.tail = Node(val, prev=old_tail)[0m
[32m+  72:         if old_tail:[0m
[32m+  73:             old_tail.next = self.tail[0m
[32m+  74:         if self._length < 1:[0m
[32m+  75:             self.head = self.tail[0m
[32m+  76:         self._length += 1[0m
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
--------------------------------------------------------------------------------
[0.18489 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:44: TypeError: DoubleLinkedList.append() missing 1 required positional argument: 'val'

[36m   -[0m [#  88] SDI queue4: 
--------------------------------------------------------------------------------
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
[34m-  77:     def shift(self):[0m
[34m-  78:         '''Remove the val from the tail of the list.'''[0m
[34m-  79:         to_return = self.tail[0m
[34m-  80:         if self._length < 1:[0m
[34m-  81:             raise IndexError('Cannot shift from an empty list.')[0m
[34m-  82:         [0m
[34m-  83:         new_tail = self.tail.prev[0m
[34m-  84:         if new_tail:[0m
[34m-  85:             new_tail.next = None[0m
[34m-  86:         self.tail = new_tail[0m
[34m-  87:         self._length -= 1[0m
[34m-  88:         if self._length < 1:[0m
[34m-  89:             self.tail = None[0m
[34m-  90:         return to_return.data[0m
[34m-  91:     [0m
[32m+  77:     @staticmethod[0m
[32m+  78:     def shift(self):[0m
[32m+  79:         '''Remove the val from the tail of the list.'''[0m
[32m+  80:         to_return = self.tail[0m
[32m+  81:         if self._length < 1:[0m
[32m+  82:             raise IndexError('Cannot shift from an empty list.')[0m
[32m+  83:         [0m
[32m+  84:         new_tail = self.tail.prev[0m
[32m+  85:         if new_tail:[0m
[32m+  86:             new_tail.next = None[0m
[32m+  87:         self.tail = new_tail[0m
[32m+  88:         self._length -= 1[0m
[32m+  89:         if self._length < 1:[0m
[32m+  90:             self.tail = None[0m
[32m+  91:         return to_return.data[0m
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
--------------------------------------------------------------------------------
[0.19063 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:80: TypeError: DoubleLinkedList.shift() missing 1 required positional argument: 'self'

[36m   -[0m [#  89] SDI queue4: 
--------------------------------------------------------------------------------
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
[34m-  92:     def remove(self, val):[0m
[34m-  93:         '''Remove first occurance of val from list.'''[0m
[34m-  94:         curr = self.head[0m
[34m-  95:         while curr:[0m
[34m-  96:             if curr.data is val:[0m
[34m-  97:                 if self._length == 1:[0m
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[34m- 101:                 elif curr is self.head:[0m
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[34m- 103:                 elif curr is self.tail:[0m
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[34m- 105:                 self._length -= 1[0m
[34m- 106:                 return[0m
[34m- 107:             curr = curr.next[0m
[34m- 108:         [0m
[34m- 109:         raise ValueError('{} is not in the list'.format(val))[0m
[34m- 110:     [0m
[32m+  92:     @staticmethod[0m
[32m+  93:     def remove(self, val):[0m
[32m+  94:         '''Remove first occurance of val from list.'''[0m
[32m+  95:         curr = self.head[0m
[32m+  96:         while curr:[0m
[32m+  97:             if curr.data is val:[0m
[32m+  98:                 if self._length == 1:[0m
[32m+  99:                     (self.head, self.tail) = (None, None)[0m
[32m+ 100:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+ 101:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[32m+ 102:                 elif curr is self.head:[0m
[32m+ 103:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 104:                 elif curr is self.tail:[0m
[32m+ 105:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 106:                 self._length -= 1[0m
[32m+ 107:                 return[0m
[32m+ 108:             curr = curr.next[0m
[32m+ 109:         [0m
[32m+ 110:         raise ValueError('{} is not in the list'.format(val))[0m
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
--------------------------------------------------------------------------------
[0.19137 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:111: TypeError: DoubleLinkedList.remove() missing 1 required positional argument: 'val'

[36m   -[0m [#  90] SDI queue4: 
--------------------------------------------------------------------------------
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
[34m- 111:     def _repr(self):[0m
[34m- 112:         '''Return list representation of dll.'''[0m
[34m- 113:         l = [][0m
[34m- 114:         while True:[0m
[34m- 115:             try:[0m
[34m- 116:                 popped_data = self.pop()[0m
[34m- 117:                 l.append(popped_data)[0m
[34m- 118:             except IndexError:[0m
[34m- 119:                 break[0m
[34m- 120:         return l[0m
[34m- 121: [0m
[32m+ 111:     @staticmethod[0m
[32m+ 112:     def _repr(self):[0m
[32m+ 113:         '''Return list representation of dll.'''[0m
[32m+ 114:         l = [][0m
[32m+ 115:         while True:[0m
[32m+ 116:             try:[0m
[32m+ 117:                 popped_data = self.pop()[0m
[32m+ 118:                 l.append(popped_data)[0m
[32m+ 119:             except IndexError:[0m
[32m+ 120:                 break[0m
[32m+ 121:         return l[0m
  122: 
  123: class Queue(object):
  124:     '''Implementation of Queue.
  125: 
--------------------------------------------------------------------------------
[0.16976 s] [31msurvived[0m
[36m   -[0m [#  91] SDI queue4: 
--------------------------------------------------------------------------------
  131:     If the queue is empty, returns None
  132:     size(): return the size of the queue. Returns 0 if the queue is empty.
  133:     '''
  134:     
[34m- 135:     def __init__(self, data=None):[0m
[34m- 136:         '''Initialize queue data structure.'''[0m
[34m- 137:         self._container = DoubleLinkedList(data)[0m
[34m- 138:     [0m
[32m+ 135:     @staticmethod[0m
[32m+ 136:     def __init__(self, data=None):[0m
[32m+ 137:         '''Initialize queue data structure.'''[0m
[32m+ 138:         self._container = DoubleLinkedList(data)[0m
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
--------------------------------------------------------------------------------
[0.18759 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_1

def test_case_1():
        tuple_0 = ()
>       queue_0 = module_0.Queue(tuple_0)

MIO/test_queue4_MIO.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = (), data = None

>   ???
E   AttributeError: 'tuple' object has no attribute '_container'

queue4:138: AttributeError
[36m   -[0m [#  92] SDI queue4: 
--------------------------------------------------------------------------------
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
  137:         self._container = DoubleLinkedList(data)
  138:     
[34m- 139:     def enqueue(self, val):[0m
[34m- 140:         '''Add a value to the queue.'''[0m
[34m- 141:         self._container.append(val)[0m
[34m- 142:     [0m
[32m+ 139:     @staticmethod[0m
[32m+ 140:     def enqueue(self, val):[0m
[32m+ 141:         '''Add a value to the queue.'''[0m
[32m+ 142:         self._container.append(val)[0m
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
--------------------------------------------------------------------------------
[0.27622 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:192: TypeError: Queue.enqueue() missing 1 required positional argument: 'val'

[36m   -[0m [#  93] SDI queue4: 
--------------------------------------------------------------------------------
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
[34m- 143:     def dequeue(self):[0m
[34m- 144:         '''Remove a value from the front of the queue.'''[0m
[34m- 145:         return self._container.pop()[0m
[34m- 146:     [0m
[32m+ 143:     @staticmethod[0m
[32m+ 144:     def dequeue(self):[0m
[32m+ 145:         '''Remove a value from the front of the queue.'''[0m
[32m+ 146:         return self._container.pop()[0m
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
--------------------------------------------------------------------------------
[0.23763 s] [31msurvived[0m
[36m   -[0m [#  94] SDI queue4: 
--------------------------------------------------------------------------------
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
[34m- 147:     def peek(self):[0m
[34m- 148:         '''Return the next value in the queue without dequing it.'''[0m
[34m- 149:         try:[0m
[34m- 150:             return self._container.head.data[0m
[34m- 151:         except AttributeError:[0m
[34m- 152:             return None[0m
[34m- 153:     [0m
[32m+ 147:     @staticmethod[0m
[32m+ 148:     def peek(self):[0m
[32m+ 149:         '''Return the next value in the queue without dequing it.'''[0m
[32m+ 150:         try:[0m
[32m+ 151:             return self._container.head.data[0m
[32m+ 152:         except AttributeError:[0m
[32m+ 153:             return None[0m
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.20165 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:175: TypeError: Queue.peek() missing 1 required positional argument: 'self'

[36m   -[0m [#  95] SDI queue4: 
--------------------------------------------------------------------------------
  150:             return self._container.head.data
  151:         except AttributeError:
  152:             return None
  153:     
[34m- 154:     def size(self):[0m
[34m- 155:         '''Return the size of the queue.'''[0m
[34m- 156:         return self._container._length[0m
[32m+ 154:     @staticmethod[0m
[32m+ 155:     def size(self):[0m
[32m+ 156:         '''Return the size of the queue.'''[0m
[32m+ 157:         return self._container._length[0m
--------------------------------------------------------------------------------
[0.19643 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/queue4/MIO/test_queue4_MIO.py:197: TypeError: Queue.size() missing 1 required positional argument: 'self'

[36m   -[0m [#  96] SDL queue4: 
--------------------------------------------------------------------------------
    5:     '''Node class for data storage.'''
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
[34m-   9:         self.data = data[0m
[32m+   9:         pass[0m
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
--------------------------------------------------------------------------------
[0.17870 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7df24a0>

>   ???
E   AttributeError: 'Node' object has no attribute 'data'

queue4:65: AttributeError
[36m   -[0m [#  97] SDL queue4: 
--------------------------------------------------------------------------------
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
[34m-  10:         self.next = next_node[0m
[32m+  10:         pass[0m
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
--------------------------------------------------------------------------------
[0.18476 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7f233d0>

>   ???
E   AttributeError: 'Node' object has no attribute 'next'

queue4:58: AttributeError
[36m   -[0m [#  98] SDL queue4: 
--------------------------------------------------------------------------------
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
   10:         self.next = next_node
[34m-  11:         self.prev = prev[0m
[32m+  11:         pass[0m
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
--------------------------------------------------------------------------------
[0.19103 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_10

def test_case_10():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7af3820>

>   ???
E   AttributeError: 'Node' object has no attribute 'prev'

queue4:83: AttributeError
[36m   -[0m [#  99] SDL queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         pass[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.19972 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_21

def test_case_21():
        node_0 = module_0.Node()
        var_0 = node_0.__repr__()
>       assert var_0 == 'Value: None'
E       AssertionError

MIO/test_queue4_MIO.py:183: AssertionError
[36m   -[0m [# 100] SDL queue4: 
--------------------------------------------------------------------------------
   28:     '''
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
[34m-  32:         self.head = None[0m
[32m+  32:         pass[0m
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
--------------------------------------------------------------------------------
[0.24243 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7d76a10>, val = 98

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute 'head'

queue4:44: AttributeError
[36m   -[0m [# 101] SDL queue4: 
--------------------------------------------------------------------------------
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
[34m-  33:         self.tail = None[0m
[32m+  33:         pass[0m
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
--------------------------------------------------------------------------------
[0.17496 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7f208e0>, val = 98

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute 'tail'

queue4:48: AttributeError
[36m   -[0m [# 102] SDL queue4: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
[34m-  34:         self._length = 0[0m
[32m+  34:         pass[0m
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.17434 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7be8e20>, val = 98

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute '_length'

queue4:50: AttributeError
[36m   -[0m [# 103] SDL queue4: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
[34m-  37:                 self.push(val)[0m
[32m+  37:                 pass[0m
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.17531 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:9: AssertionError
[36m   -[0m [# 104] SDL queue4: 
--------------------------------------------------------------------------------
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
[34m-  40:                 self.push(data)[0m
[32m+  40:                 pass[0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.18625 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:109: AssertionError
[36m   -[0m [# 105] SDL queue4: 
--------------------------------------------------------------------------------
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
[34m-  44:         old_head = self.head[0m
[32m+  44:         pass[0m
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
--------------------------------------------------------------------------------
[0.18294 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b9dd50>, val = 98

>   ???
E   NameError: name 'old_head' is not defined

queue4:45: NameError
[36m   -[0m [# 106] SDL queue4: 
--------------------------------------------------------------------------------
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[32m+  45:         pass[0m
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
--------------------------------------------------------------------------------
[0.17909 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:9: AssertionError
[36m   -[0m [# 107] SDL queue4: 
--------------------------------------------------------------------------------
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
[34m-  47:             old_head.prev = self.head[0m
[32m+  47:             pass[0m
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
--------------------------------------------------------------------------------
[0.26999 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_17

def test_case_17():
        bool_0 = True
        int_0 = -1990
        tuple_0 = (bool_0, bool_0, bool_0, int_0)
        double_linked_list_0 = module_0.DoubleLinkedList(tuple_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(bool_0)

MIO/test_queue4_MIO.py:162: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b30400>, val = True

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:100: AttributeError
[36m   -[0m [# 108] SDL queue4: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
[34m-  49:             self.tail = self.head[0m
[32m+  49:             pass[0m
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.18290 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:10: AssertionError
[36m   -[0m [# 109] SDL queue4: 
--------------------------------------------------------------------------------
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
[34m-  54:         to_return = self.head[0m
[32m+  54:         pass[0m
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
--------------------------------------------------------------------------------
[0.18618 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe8036320>

>   ???
E   NameError: name 'to_return' is not defined

queue4:65: NameError
[36m   -[0m [# 110] SDL queue4: 
--------------------------------------------------------------------------------
   54:         to_return = self.head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
[34m-  58:         new_head = self.head.next[0m
[32m+  58:         pass[0m
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
--------------------------------------------------------------------------------
[0.18232 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd1270>

>   ???
E   NameError: name 'new_head' is not defined

queue4:59: NameError
[36m   -[0m [# 111] SDL queue4: 
--------------------------------------------------------------------------------
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
[34m-  60:             new_head.prev = None[0m
[32m+  60:             pass[0m
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
--------------------------------------------------------------------------------
[0.16850 s] [31msurvived[0m
[36m   -[0m [# 112] SDL queue4: 
--------------------------------------------------------------------------------
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
[34m-  61:         self.head = new_head[0m
[32m+  61:         pass[0m
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
--------------------------------------------------------------------------------
[0.16635 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.pop()
>       assert double_linked_list_0.head is None
E       AssertionError

MIO/test_queue4_MIO.py:47: AssertionError
[36m   -[0m [# 113] SDL queue4: 
--------------------------------------------------------------------------------
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
[34m-  64:             self.tail = None[0m
[32m+  64:             pass[0m
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
--------------------------------------------------------------------------------
[0.17986 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.pop()
        assert double_linked_list_0.head is None
>       assert double_linked_list_0.tail is None
E       AssertionError

MIO/test_queue4_MIO.py:48: AssertionError
[36m   -[0m [# 114] SDL queue4: 
--------------------------------------------------------------------------------
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
[34m-  65:         return to_return.data[0m
[32m+  65:         pass[0m
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
--------------------------------------------------------------------------------
[0.18610 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_0.pop()
>       assert var_0 == 199
E       AssertionError

MIO/test_queue4_MIO.py:37: AssertionError
[36m   -[0m [# 115] SDL queue4: 
--------------------------------------------------------------------------------
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
[34m-  69:         old_tail = self.tail[0m
[32m+  69:         pass[0m
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
--------------------------------------------------------------------------------
[0.24404 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7bfb220>
val = <queue4.DoubleLinkedList object at 0x7f1fe7bfb220>

>   ???
E   NameError: name 'old_tail' is not defined

queue4:70: NameError
[36m   -[0m [# 116] SDL queue4: 
--------------------------------------------------------------------------------
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[32m+  70:         pass[0m
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
--------------------------------------------------------------------------------
[0.18513 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:45: AssertionError
[36m   -[0m [# 117] SDL queue4: 
--------------------------------------------------------------------------------
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
[34m-  72:             old_tail.next = self.tail[0m
[32m+  72:             pass[0m
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
--------------------------------------------------------------------------------
[0.19948 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd2e90>, val = None

>   ???
E   ValueError: None is not in the list

queue4:109: ValueError
[36m   -[0m [# 118] SDL queue4: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
[34m-  74:             self.head = self.tail[0m
[32m+  74:             pass[0m
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.18372 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:45: AssertionError
[36m   -[0m [# 119] SDL queue4: 
--------------------------------------------------------------------------------
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
[34m-  79:         to_return = self.tail[0m
[32m+  79:         pass[0m
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
--------------------------------------------------------------------------------
[0.17835 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7d70220>

>   ???
E   NameError: name 'to_return' is not defined

queue4:90: NameError
[36m   -[0m [# 120] SDL queue4: 
--------------------------------------------------------------------------------
   79:         to_return = self.tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
[34m-  83:         new_tail = self.tail.prev[0m
[32m+  83:         pass[0m
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
--------------------------------------------------------------------------------
[0.17337 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ed78e0>

>   ???
E   NameError: name 'new_tail' is not defined

queue4:84: NameError
[36m   -[0m [# 121] SDL queue4: 
--------------------------------------------------------------------------------
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
[34m-  85:             new_tail.next = None[0m
[32m+  85:             pass[0m
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
--------------------------------------------------------------------------------
[0.16747 s] [31msurvived[0m
[36m   -[0m [# 122] SDL queue4: 
--------------------------------------------------------------------------------
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
[34m-  86:         self.tail = new_tail[0m
[32m+  86:         pass[0m
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
--------------------------------------------------------------------------------
[0.15243 s] [31msurvived[0m
[36m   -[0m [# 123] SDL queue4: 
--------------------------------------------------------------------------------
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
[34m-  89:             self.tail = None[0m
[32m+  89:             pass[0m
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
--------------------------------------------------------------------------------
[0.16759 s] [31msurvived[0m
[36m   -[0m [# 124] SDL queue4: 
--------------------------------------------------------------------------------
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
[34m-  90:         return to_return.data[0m
[32m+  90:         pass[0m
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
--------------------------------------------------------------------------------
[0.18844 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_0.shift()
>       assert var_0 == 98
E       AssertionError

MIO/test_queue4_MIO.py:81: AssertionError
[36m   -[0m [# 125] SDL queue4: 
--------------------------------------------------------------------------------
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
[34m-  94:         curr = self.head[0m
[32m+  94:         pass[0m
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
--------------------------------------------------------------------------------
[0.18307 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c3ff70>
val = <queue4.Queue object at 0x7f1fe7c3e560>

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

queue4:95: UnboundLocalError
[36m   -[0m [# 126] SDL queue4: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[32m+  98:                     pass[0m
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.17676 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_0.remove(queue_0)
>       assert double_linked_list_0.head is None
E       AssertionError

MIO/test_queue4_MIO.py:112: AssertionError
[36m   -[0m [# 127] SDL queue4: 
--------------------------------------------------------------------------------
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[32m+ 100:                     pass[0m
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
--------------------------------------------------------------------------------
[0.16784 s] [31msurvived[0m
[36m   -[0m [# 128] SDL queue4: 
--------------------------------------------------------------------------------
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 102:                     pass[0m
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
--------------------------------------------------------------------------------
[0.16860 s] [31msurvived[0m
[36m   -[0m [# 129] SDL queue4: 
--------------------------------------------------------------------------------
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 104:                     pass[0m
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
--------------------------------------------------------------------------------
[0.15027 s] [31msurvived[0m
[36m   -[0m [# 130] SDL queue4: 
--------------------------------------------------------------------------------
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
[34m- 106:                 return[0m
[32m+ 106:                 pass[0m
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
--------------------------------------------------------------------------------
[0.26391 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7de0790>
val = <queue4.Queue object at 0x7f1fe7de1360>

>   ???
E   ValueError: <queue4.Queue object at 0x7f1fe7de1360> is not in the list

queue4:109: ValueError
[36m   -[0m [# 131] SDL queue4: 
--------------------------------------------------------------------------------
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
[34m- 107:             curr = curr.next[0m
[32m+ 107:             pass[0m
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
--------------------------------------------------------------------------------
[5.00825 s] [33mtimeout[0m
[36m   -[0m [# 132] SDL queue4: 
--------------------------------------------------------------------------------
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
[34m- 113:         l = [][0m
[32m+ 113:         pass[0m
  114:         while True:
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
--------------------------------------------------------------------------------
[0.16916 s] [31msurvived[0m
[36m   -[0m [# 133] SDL queue4: 
--------------------------------------------------------------------------------
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
  115:             try:
[34m- 116:                 popped_data = self.pop()[0m
[32m+ 116:                 pass[0m
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.16241 s] [31msurvived[0m
[36m   -[0m [# 134] SDL queue4: 
--------------------------------------------------------------------------------
  113:         l = []
  114:         while True:
  115:             try:
  116:                 popped_data = self.pop()
[34m- 117:                 l.append(popped_data)[0m
[32m+ 117:                 pass[0m
  118:             except IndexError:
  119:                 break
  120:         return l
  121: 
--------------------------------------------------------------------------------
[0.16864 s] [31msurvived[0m
[36m   -[0m [# 135] SDL queue4: 
--------------------------------------------------------------------------------
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
[34m- 120:         return l[0m
[32m+ 120:         pass[0m
  121: 
  122: 
  123: class Queue(object):
  124:     '''Implementation of Queue.
--------------------------------------------------------------------------------
[0.14807 s] [31msurvived[0m
[36m   -[0m [# 136] SDL queue4: 
--------------------------------------------------------------------------------
  133:     '''
  134:     
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
[34m- 137:         self._container = DoubleLinkedList(data)[0m
[32m+ 137:         pass[0m
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
--------------------------------------------------------------------------------
[0.18971 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_23

def test_case_23():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO/test_queue4_MIO.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f1fe7ebece0>
val = <queue4.Queue object at 0x7f1fe7ebece0>

>   ???
E   AttributeError: 'Queue' object has no attribute '_container'

queue4:141: AttributeError
[36m   -[0m [# 137] SDL queue4: 
--------------------------------------------------------------------------------
  137:         self._container = DoubleLinkedList(data)
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
[34m- 141:         self._container.append(val)[0m
[32m+ 141:         pass[0m
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
--------------------------------------------------------------------------------
[0.22813 s] [31msurvived[0m
[36m   -[0m [# 138] SDL queue4: 
--------------------------------------------------------------------------------
  141:         self._container.append(val)
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
[34m- 145:         return self._container.pop()[0m
[32m+ 145:         pass[0m
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
--------------------------------------------------------------------------------
[0.14871 s] [31msurvived[0m
[36m   -[0m [# 139] SDL queue4: 
--------------------------------------------------------------------------------
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
[34m- 150:             return self._container.head.data[0m
[32m+ 150:             pass[0m
  151:         except AttributeError:
  152:             return None
  153:     
  154:     def size(self):
--------------------------------------------------------------------------------
[0.16735 s] [31msurvived[0m
[36m   -[0m [# 140] SDL queue4: 
--------------------------------------------------------------------------------
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
  151:         except AttributeError:
[34m- 152:             return None[0m
[32m+ 152:             pass[0m
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.16204 s] [31msurvived[0m
[36m   -[0m [# 141] SDL queue4: 
--------------------------------------------------------------------------------
  152:             return None
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
[34m- 156:         return self._container._length[0m
[32m+ 156:         pass[0m
--------------------------------------------------------------------------------
[0.20607 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_24

def test_case_24():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.size()
>       assert var_0 == 0
E       AssertionError

MIO/test_queue4_MIO.py:198: AssertionError
[36m   -[0m [# 142] SVD queue4: 
--------------------------------------------------------------------------------
    5:     '''Node class for data storage.'''
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
[34m-   9:         self.data = data[0m
[32m+   9:         data = data[0m
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 143] SVD queue4: 
--------------------------------------------------------------------------------
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
[34m-  10:         self.next = next_node[0m
[32m+  10:         next = next_node[0m
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 144] SVD queue4: 
--------------------------------------------------------------------------------
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
   10:         self.next = next_node
[34m-  11:         self.prev = prev[0m
[32m+  11:         prev = prev[0m
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 145] SVD queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
[34m-  15:         return 'Value: {}'.format(self.data)[0m
[32m+  15:         return 'Value: {}'.format(data)[0m
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.27319 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_21

def test_case_21():
        node_0 = module_0.Node()
>       var_0 = node_0.__repr__()

MIO/test_queue4_MIO.py:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[NameError("name 'data' is not defined") raised in repr()] Node object at 0x7f1fe8034490>

>   ???
E   NameError: name 'data' is not defined

queue4:15: NameError
[36m   -[0m [# 146] SVD queue4: 
--------------------------------------------------------------------------------
   28:     '''
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
[34m-  32:         self.head = None[0m
[32m+  32:         head = None[0m
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 147] SVD queue4: 
--------------------------------------------------------------------------------
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
[34m-  33:         self.tail = None[0m
[32m+  33:         tail = None[0m
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 148] SVD queue4: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
[34m-  34:         self._length = 0[0m
[32m+  34:         _length = 0[0m
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 149] SVD queue4: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
[34m-  37:                 self.push(val)[0m
[32m+  37:                 push(val)[0m
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.18383 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7eb1c00>
data = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'

>   ???
E   NameError: name 'push' is not defined

queue4:37: NameError
[36m   -[0m [# 150] SVD queue4: 
--------------------------------------------------------------------------------
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
[34m-  40:                 self.push(data)[0m
[32m+  40:                 push(data)[0m
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.16818 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_2

self = <queue4.DoubleLinkedList object at 0x7f1fe7c482e0>
data = <queue4.DoubleLinkedList object at 0x7f1fe7c48250>

>   ???
E   TypeError: 'DoubleLinkedList' object is not iterable

queue4:36: TypeError

During handling of the above exception, another exception occurred:

    def test_case_2():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       queue_0 = module_0.Queue(double_linked_list_0)

MIO/test_queue4_MIO.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:137: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c482e0>
data = <queue4.DoubleLinkedList object at 0x7f1fe7c48250>

>   ???
E   NameError: name 'push' is not defined

queue4:40: NameError
[36m   -[0m [# 151] SVD queue4: 
--------------------------------------------------------------------------------
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
[34m-  44:         old_head = self.head[0m
[32m+  44:         old_head = head[0m
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
--------------------------------------------------------------------------------
[0.18485 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b3ada0>, val = 98

>   ???
E   NameError: name 'head' is not defined

queue4:44: NameError
[36m   -[0m [# 152] SVD queue4: 
--------------------------------------------------------------------------------
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
[34m-  45:         self.head = Node(val, next_node=old_head)[0m
[32m+  45:         head = Node(val, next_node=old_head)[0m
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 153] SVD queue4: 
--------------------------------------------------------------------------------
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
[34m-  47:             old_head.prev = self.head[0m
[32m+  47:             old_head.prev = head[0m
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
--------------------------------------------------------------------------------
[0.18342 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7cedcf0>, val = 63

>   ???
E   NameError: name 'head' is not defined

queue4:47: NameError
[36m   -[0m [# 154] SVD queue4: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
[34m-  48:         if not (self.tail):[0m
[32m+  48:         if not tail:[0m
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.18043 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd0730>, val = 98

>   ???
E   NameError: name 'tail' is not defined

queue4:48: NameError
[36m   -[0m [# 155] SVD queue4: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
[34m-  49:             self.tail = self.head[0m
[32m+  49:             tail = self.head[0m
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 156] SVD queue4: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
[34m-  49:             self.tail = self.head[0m
[32m+  49:             self.tail = head[0m
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.18141 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO/test_queue4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7bf96f0>, val = 98

>   ???
E   NameError: name 'head' is not defined

queue4:49: NameError
[36m   -[0m [# 157] SVD queue4: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
[34m-  50:         self._length += 1[0m
[32m+  50:         _length += 1[0m
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 158] SVD queue4: 
--------------------------------------------------------------------------------
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
[34m-  54:         to_return = self.head[0m
[32m+  54:         to_return = head[0m
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
--------------------------------------------------------------------------------
[0.18724 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7eb7010>

>   ???
E   NameError: name 'head' is not defined

queue4:54: NameError
[36m   -[0m [# 159] SVD queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
[34m-  55:         if self._length < 1:[0m
[32m+  55:         if _length < 1:[0m
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.25478 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b39f00>

>   ???
E   NameError: name '_length' is not defined

queue4:55: NameError
[36m   -[0m [# 160] SVD queue4: 
--------------------------------------------------------------------------------
   54:         to_return = self.head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
[34m-  58:         new_head = self.head.next[0m
[32m+  58:         new_head = head.next[0m
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
--------------------------------------------------------------------------------
[0.18284 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7b062f0>

>   ???
E   NameError: name 'head' is not defined

queue4:58: NameError
[36m   -[0m [# 161] SVD queue4: 
--------------------------------------------------------------------------------
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
[34m-  61:         self.head = new_head[0m
[32m+  61:         head = new_head[0m
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 162] SVD queue4: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
[34m-  62:         self._length -= 1[0m
[32m+  62:         _length -= 1[0m
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 163] SVD queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
[34m-  63:         if self._length < 1:[0m
[32m+  63:         if _length < 1:[0m
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.18584 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_4

def test_case_4():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.pop()

MIO/test_queue4_MIO.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ec3e20>

>   ???
E   NameError: name '_length' is not defined

queue4:63: NameError
[36m   -[0m [# 164] SVD queue4: 
--------------------------------------------------------------------------------
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
[34m-  64:             self.tail = None[0m
[32m+  64:             tail = None[0m
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 165] SVD queue4: 
--------------------------------------------------------------------------------
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
[34m-  69:         old_tail = self.tail[0m
[32m+  69:         old_tail = tail[0m
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
--------------------------------------------------------------------------------
[0.18784 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7eb3640>
val = <queue4.DoubleLinkedList object at 0x7f1fe7eb3640>

>   ???
E   NameError: name 'tail' is not defined

queue4:69: NameError
[36m   -[0m [# 166] SVD queue4: 
--------------------------------------------------------------------------------
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
[34m-  70:         self.tail = Node(val, prev=old_tail)[0m
[32m+  70:         tail = Node(val, prev=old_tail)[0m
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 167] SVD queue4: 
--------------------------------------------------------------------------------
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
[34m-  72:             old_tail.next = self.tail[0m
[32m+  72:             old_tail.next = tail[0m
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
--------------------------------------------------------------------------------
[0.25412 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7eb0b80>
val = <queue4.DoubleLinkedList object at 0x7f1fe7eb0b80>

>   ???
E   NameError: name 'tail' is not defined

queue4:72: NameError
[36m   -[0m [# 168] SVD queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
[34m-  73:         if self._length < 1:[0m
[32m+  73:         if _length < 1:[0m
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.18070 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd3e50>
val = <queue4.DoubleLinkedList object at 0x7f1fe7fd3e50>

>   ???
E   NameError: name '_length' is not defined

queue4:73: NameError
[36m   -[0m [# 169] SVD queue4: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
[34m-  74:             self.head = self.tail[0m
[32m+  74:             head = self.tail[0m
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 170] SVD queue4: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
[34m-  74:             self.head = self.tail[0m
[32m+  74:             self.head = tail[0m
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.18693 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_5

def test_case_5():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.append(double_linked_list_0)

MIO/test_queue4_MIO.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7cc2320>
val = <queue4.DoubleLinkedList object at 0x7f1fe7cc2320>

>   ???
E   NameError: name 'tail' is not defined

queue4:74: NameError
[36m   -[0m [# 171] SVD queue4: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
[34m-  75:         self._length += 1[0m
[32m+  75:         _length += 1[0m
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 172] SVD queue4: 
--------------------------------------------------------------------------------
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
[34m-  79:         to_return = self.tail[0m
[32m+  79:         to_return = tail[0m
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
--------------------------------------------------------------------------------
[0.19415 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ec27d0>

>   ???
E   NameError: name 'tail' is not defined

queue4:79: NameError
[36m   -[0m [# 173] SVD queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
[34m-  80:         if self._length < 1:[0m
[32m+  80:         if _length < 1:[0m
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.18922 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ab1a20>

>   ???
E   NameError: name '_length' is not defined

queue4:80: NameError
[36m   -[0m [# 174] SVD queue4: 
--------------------------------------------------------------------------------
   79:         to_return = self.tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
[34m-  83:         new_tail = self.tail.prev[0m
[32m+  83:         new_tail = tail.prev[0m
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
--------------------------------------------------------------------------------
[0.25841 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ec5b70>

>   ???
E   NameError: name 'tail' is not defined

queue4:83: NameError
[36m   -[0m [# 175] SVD queue4: 
--------------------------------------------------------------------------------
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
[34m-  86:         self.tail = new_tail[0m
[32m+  86:         tail = new_tail[0m
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 176] SVD queue4: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
[34m-  87:         self._length -= 1[0m
[32m+  87:         _length -= 1[0m
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 177] SVD queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
[34m-  88:         if self._length < 1:[0m
[32m+  88:         if _length < 1:[0m
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.19192 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_9

def test_case_9():
        bytes_0 = b'b?v\x8e\x03\xe4\xcdN\x05j\t\x8d\xe9\xdb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.shift()

MIO/test_queue4_MIO.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7fd6f80>

>   ???
E   NameError: name '_length' is not defined

queue4:88: NameError
[36m   -[0m [# 178] SVD queue4: 
--------------------------------------------------------------------------------
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
[34m-  89:             self.tail = None[0m
[32m+  89:             tail = None[0m
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 179] SVD queue4: 
--------------------------------------------------------------------------------
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
[34m-  94:         curr = self.head[0m
[32m+  94:         curr = head[0m
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
--------------------------------------------------------------------------------
[0.19426 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c0a8f0>
val = <queue4.Queue object at 0x7f1fe7c0a830>

>   ???
E   NameError: name 'head' is not defined

queue4:94: NameError
[36m   -[0m [# 180] SVD queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
[34m-  97:                 if self._length == 1:[0m
[32m+  97:                 if _length == 1:[0m
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.19503 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7ebc4f0>
val = <queue4.Queue object at 0x7f1fe7ebd990>

>   ???
E   NameError: name '_length' is not defined

queue4:97: NameError
[36m   -[0m [# 181] SVD queue4: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[32m+  98:                     (head, self.tail) = (None, None)[0m
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 182] SVD queue4: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[32m+  98:                     (self.head, tail) = (None, None)[0m
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 183] SVD queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif (curr is not head and curr is not self.tail):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.19756 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_13

def test_case_13():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO/test_queue4_MIO.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe79fb610>
val = <queue4.DoubleLinkedList object at 0x7f1fe79fb610>

>   ???
E   NameError: name 'head' is not defined

queue4:99: NameError
[36m   -[0m [# 184] SVD queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[32m+  99:                 elif (curr is not self.head and curr is not tail):[0m
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.19916 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7e66350>, val = None

>   ???
E   NameError: name 'tail' is not defined

queue4:99: NameError
[36m   -[0m [# 185] SVD queue4: 
--------------------------------------------------------------------------------
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
[34m- 101:                 elif curr is self.head:[0m
[32m+ 101:                 elif curr is head:[0m
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
--------------------------------------------------------------------------------
[0.19858 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_13

def test_case_13():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO/test_queue4_MIO.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7e64e50>
val = <queue4.DoubleLinkedList object at 0x7f1fe7e64e50>

>   ???
E   NameError: name 'head' is not defined

queue4:101: NameError
[36m   -[0m [# 186] SVD queue4: 
--------------------------------------------------------------------------------
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[32m+ 102:                     (head, curr.next.prev) = (curr.next, None)[0m
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 187] SVD queue4: 
--------------------------------------------------------------------------------
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
[34m- 103:                 elif curr is self.tail:[0m
[32m+ 103:                 elif curr is tail:[0m
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
--------------------------------------------------------------------------------
[0.20019 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe7c3e110>, val = None

>   ???
E   NameError: name 'tail' is not defined

queue4:103: NameError
[36m   -[0m [# 188] SVD queue4: 
--------------------------------------------------------------------------------
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[32m+ 104:                     (tail, curr.prev.next) = (curr.prev, None)[0m
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 189] SVD queue4: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
[34m- 105:                 self._length -= 1[0m
[32m+ 105:                 _length -= 1[0m
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 190] SVD queue4: 
--------------------------------------------------------------------------------
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
  115:             try:
[34m- 116:                 popped_data = self.pop()[0m
[32m+ 116:                 popped_data = pop()[0m
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.17044 s] [31msurvived[0m
[36m   -[0m [# 191] SVD queue4: 
--------------------------------------------------------------------------------
  133:     '''
  134:     
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
[34m- 137:         self._container = DoubleLinkedList(data)[0m
[32m+ 137:         _container = DoubleLinkedList(data)[0m
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 192] SVD queue4: 
--------------------------------------------------------------------------------
  137:         self._container = DoubleLinkedList(data)
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
[34m- 141:         self._container.append(val)[0m
[32m+ 141:         _container.append(val)[0m
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
--------------------------------------------------------------------------------
[0.20715 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_23

def test_case_23():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO/test_queue4_MIO.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f1fe7b38400>
val = <queue4.Queue object at 0x7f1fe7b38400>

>   ???
E   NameError: name '_container' is not defined

queue4:141: NameError
[36m   -[0m [# 193] SVD queue4: 
--------------------------------------------------------------------------------
  141:         self._container.append(val)
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
[34m- 145:         return self._container.pop()[0m
[32m+ 145:         return _container.pop()[0m
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
--------------------------------------------------------------------------------
[0.16995 s] [31msurvived[0m
[36m   -[0m [# 194] SVD queue4: 
--------------------------------------------------------------------------------
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
[34m- 150:             return self._container.head.data[0m
[32m+ 150:             return _container.head.data[0m
  151:         except AttributeError:
  152:             return None
  153:     
  154:     def size(self):
--------------------------------------------------------------------------------
[0.20091 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_19

def test_case_19():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.peek()

MIO/test_queue4_MIO.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f1fe7e27190>

>   ???
E   NameError: name '_container' is not defined

queue4:150: NameError
[36m   -[0m [# 195] SVD queue4: 
--------------------------------------------------------------------------------
  152:             return None
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
[34m- 156:         return self._container._length[0m
[32m+ 156:         return _container._length[0m
--------------------------------------------------------------------------------
[0.18875 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_24

def test_case_24():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.size()

MIO/test_queue4_MIO.py:197: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f1fe7e278e0>

>   ???
E   NameError: name '_container' is not defined

queue4:156: NameError
[36m   -[0m [# 196] ZIL queue4: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
[34m-  37:                 self.push(val)[0m
[32m+  37:                 break[0m
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.17309 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_0

def test_case_0():
        bytes_0 = b'b?v\x9f\x03\xe4\xcdN\x05j\t\xd5\x85\x8d\xe9\xcb\xea\x0fk\xc7'
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO/test_queue4_MIO.py:9: AssertionError
[36m   -[0m [# 197] ZIL queue4: 
--------------------------------------------------------------------------------
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
[34m-  96:             if curr.data is val:[0m
[34m-  97:                 if self._length == 1:[0m
[34m-  98:                     (self.head, self.tail) = (None, None)[0m
[34m-  99:                 elif (curr is not self.head and curr is not self.tail):[0m
[34m- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)[0m
[34m- 101:                 elif curr is self.head:[0m
[34m- 102:                     (self.head, curr.next.prev) = (curr.next, None)[0m
[34m- 103:                 elif curr is self.tail:[0m
[34m- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)[0m
[34m- 105:                 self._length -= 1[0m
[34m- 106:                 return[0m
[34m- 107:             curr = curr.next[0m
[32m+  96:             break[0m
[32m+  97:         [0m
[32m+  98:         [0m
[32m+  99:         [0m
[32m+ 100:         [0m
[32m+ 101:         [0m
[32m+ 102:         [0m
[32m+ 103:         [0m
[32m+ 104:         [0m
[32m+ 105:         [0m
[32m+ 106:         [0m
[32m+ 107:         [0m
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
--------------------------------------------------------------------------------
[0.25022 s] [32mkilled[0m by MIO/test_queue4_MIO.py::test_case_12

def test_case_12():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        double_linked_list_0 = module_0.DoubleLinkedList(queue_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_0 = double_linked_list_0.remove(queue_0)

MIO/test_queue4_MIO.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f1fe8035b40>
val = <queue4.Queue object at 0x7f1fe8036e60>

>   ???
E   ValueError: <queue4.Queue object at 0x7f1fe8036e60> is not in the list

queue4:109: ValueError
[36m   -[0m [# 198] ZIL queue4: 
--------------------------------------------------------------------------------
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
[34m- 115:             try:[0m
[34m- 116:                 popped_data = self.pop()[0m
[34m- 117:                 l.append(popped_data)[0m
[34m- 118:             except IndexError:[0m
[34m- 119:                 break[0m
[32m+ 115:             break[0m
[32m+ 116:         [0m
[32m+ 117:         [0m
[32m+ 118:         [0m
[32m+ 119:         [0m
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.17049 s] [31msurvived[0m
[34m[*][0m Mutation score [60.81884 s]: [1m[34m70.6%[0m
[36m   -[0m all: 198
[36m   -[0m killed: 114 (57.6%)
[36m   -[0m survived: 48 (24.2%)
[36m   -[0m incompetent: 35 (17.7%)
[36m   -[0m timeout: 1 (0.5%)
