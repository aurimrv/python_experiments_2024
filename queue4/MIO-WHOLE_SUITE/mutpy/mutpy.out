[*] Start mutation process:
   - targets: queue4.py
   - tests: ./MIO-WHOLE_SUITE
[*] 38 tests passed:
   - test_queue4_MIO [0.07169 s]
   - test_queue4_WHOLE_SUITE [0.04184 s]
[*] Start mutants generation and execution:
   - [#   1] ASR queue4: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
-  50:         self._length += 1
+  50:         self._length -= 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.07615 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
>       var_0 = double_linked_list_0.pop()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09977066b0>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [#   2] ASR queue4: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
-  62:         self._length -= 1
+  62:         self._length += 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.07501 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
        var_2 = queue_0.size()
>       assert var_2 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:54: AssertionError
   - [#   3] ASR queue4: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
-  75:         self._length += 1
+  75:         self._length -= 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.07628 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997224b20>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [#   4] ASR queue4: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
-  87:         self._length -= 1
+  87:         self._length += 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.06865 s] survived
   - [#   5] ASR queue4: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
- 105:                 self._length -= 1
+ 105:                 self._length += 1
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.07019 s] survived
   - [#   6] BCR queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
- 119:                 break
+ 119:                 continue
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.06877 s] survived
   - [#   7] CDI queue4: 
--------------------------------------------------------------------------------
    3: 
    4: class Node(object):
    5:     '''Node class for data storage.'''
    6:     
-   7:     def __init__(self, data=None, next_node=None, prev=None):
-   8:         '''Initialize Node.'''
-   9:         self.data = data
-  10:         self.next = next_node
-  11:         self.prev = prev
-  12:     
+   7:     @classmethod
+   8:     def __init__(self, data=None, next_node=None, prev=None):
+   9:         '''Initialize Node.'''
+  10:         self.data = data
+  11:         self.next = next_node
+  12:         self.prev = prev
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
   16: 
--------------------------------------------------------------------------------
[0.07773 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
>       assert var_0 == 189
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:79: AssertionError
   - [#   8] CDI queue4: 
--------------------------------------------------------------------------------
    9:         self.data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
-  13:     def __repr__(self):
-  14:         '''String representation.'''
-  15:         return 'Value: {}'.format(self.data)
-  16: 
+  13:     @classmethod
+  14:     def __repr__(self):
+  15:         '''String representation.'''
+  16:         return 'Value: {}'.format(self.data)
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
   20: 
--------------------------------------------------------------------------------
[0.07517 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_4

def test_case_4():
        node_0 = module_0.Node()
        bool_0 = False
>       var_0 = node_0.__repr__()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Node'>

>   ???
E   AttributeError: type object 'Node' has no attribute 'data'

queue4:16: AttributeError
   - [#   9] CDI queue4: 
--------------------------------------------------------------------------------
   26:     remove(val) - will remove the first instance of (val) found in the list,
   27:     starting from the head.
   28:     '''
   29:     
-  30:     def __init__(self, data=None):
-  31:         '''Initialize list.'''
-  32:         self.head = None
-  33:         self.tail = None
-  34:         self._length = 0
-  35:         try:
-  36:             for val in data:
-  37:                 self.push(val)
-  38:         except TypeError:
-  39:             if data:
-  40:                 self.push(data)
-  41:     
+  30:     @classmethod
+  31:     def __init__(self, data=None):
+  32:         '''Initialize list.'''
+  33:         self.head = None
+  34:         self.tail = None
+  35:         self._length = 0
+  36:         try:
+  37:             for val in data:
+  38:                 self.push(val)
+  39:         except TypeError:
+  40:             if data:
+  41:                 self.push(data)
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
--------------------------------------------------------------------------------
[0.07836 s] incompetent

TypeError: queue4:41: TypeError: DoubleLinkedList.push() missing 1 required positional argument: 'val'

   - [#  10] CDI queue4: 
--------------------------------------------------------------------------------
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
-  42:     def push(self, val):
-  43:         '''Add val to the head of the list.'''
-  44:         old_head = self.head
-  45:         self.head = Node(val, next_node=old_head)
-  46:         if old_head:
-  47:             old_head.prev = self.head
-  48:         if not (self.tail):
-  49:             self.tail = self.head
-  50:         self._length += 1
-  51:     
+  42:     @classmethod
+  43:     def push(self, val):
+  44:         '''Add val to the head of the list.'''
+  45:         old_head = self.head
+  46:         self.head = Node(val, next_node=old_head)
+  47:         if old_head:
+  48:             old_head.prev = self.head
+  49:         if not (self.tail):
+  50:             self.tail = self.head
+  51:         self._length += 1
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
--------------------------------------------------------------------------------
[0.07352 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>, val = b'\x0c\x9f*\xec'

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

queue4:45: AttributeError
   - [#  11] CDI queue4: 
--------------------------------------------------------------------------------
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
-  52:     def pop(self):
-  53:         '''Remove the val from the head of the list.'''
-  54:         to_return = self.head
-  55:         if self._length < 1:
-  56:             raise IndexError('Cannot pop from an empty list.')
-  57:         
-  58:         new_head = self.head.next
-  59:         if new_head:
-  60:             new_head.prev = None
-  61:         self.head = new_head
-  62:         self._length -= 1
-  63:         if self._length < 1:
-  64:             self.tail = None
-  65:         return to_return.data
-  66:     
+  52:     @classmethod
+  53:     def pop(self):
+  54:         '''Remove the val from the head of the list.'''
+  55:         to_return = self.head
+  56:         if self._length < 1:
+  57:             raise IndexError('Cannot pop from an empty list.')
+  58:         
+  59:         new_head = self.head.next
+  60:         if new_head:
+  61:             new_head.prev = None
+  62:         self.head = new_head
+  63:         self._length -= 1
+  64:         if self._length < 1:
+  65:             self.tail = None
+  66:         return to_return.data
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
--------------------------------------------------------------------------------
[0.07652 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

queue4:55: AttributeError
   - [#  12] CDI queue4: 
--------------------------------------------------------------------------------
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
-  67:     def append(self, val):
-  68:         '''Add val to the tail of the list.'''
-  69:         old_tail = self.tail
-  70:         self.tail = Node(val, prev=old_tail)
-  71:         if old_tail:
-  72:             old_tail.next = self.tail
-  73:         if self._length < 1:
-  74:             self.head = self.tail
-  75:         self._length += 1
-  76:     
+  67:     @classmethod
+  68:     def append(self, val):
+  69:         '''Add val to the tail of the list.'''
+  70:         old_tail = self.tail
+  71:         self.tail = Node(val, prev=old_tail)
+  72:         if old_tail:
+  73:             old_tail.next = self.tail
+  74:         if self._length < 1:
+  75:             self.head = self.tail
+  76:         self._length += 1
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
--------------------------------------------------------------------------------
[0.07736 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.append(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>, val = b'\x0c\x9f*\xec'

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'tail'

queue4:70: AttributeError
   - [#  13] CDI queue4: 
--------------------------------------------------------------------------------
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
-  77:     def shift(self):
-  78:         '''Remove the val from the tail of the list.'''
-  79:         to_return = self.tail
-  80:         if self._length < 1:
-  81:             raise IndexError('Cannot shift from an empty list.')
-  82:         
-  83:         new_tail = self.tail.prev
-  84:         if new_tail:
-  85:             new_tail.next = None
-  86:         self.tail = new_tail
-  87:         self._length -= 1
-  88:         if self._length < 1:
-  89:             self.tail = None
-  90:         return to_return.data
-  91:     
+  77:     @classmethod
+  78:     def shift(self):
+  79:         '''Remove the val from the tail of the list.'''
+  80:         to_return = self.tail
+  81:         if self._length < 1:
+  82:             raise IndexError('Cannot shift from an empty list.')
+  83:         
+  84:         new_tail = self.tail.prev
+  85:         if new_tail:
+  86:             new_tail.next = None
+  87:         self.tail = new_tail
+  88:         self._length -= 1
+  89:         if self._length < 1:
+  90:             self.tail = None
+  91:         return to_return.data
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
--------------------------------------------------------------------------------
[0.07760 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_2

def test_case_2():
        none_type_0 = None
        double_linked_list_0 = module_0.DoubleLinkedList(none_type_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        double_linked_list_1 = module_0.DoubleLinkedList(none_type_0)
        assert double_linked_list_1.head is None
        assert double_linked_list_1.tail is None
        with pytest.raises(IndexError):
>           double_linked_list_1.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'tail'

queue4:80: AttributeError
   - [#  14] CDI queue4: 
--------------------------------------------------------------------------------
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
-  92:     def remove(self, val):
-  93:         '''Remove first occurance of val from list.'''
-  94:         curr = self.head
-  95:         while curr:
-  96:             if curr.data is val:
-  97:                 if self._length == 1:
-  98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
- 101:                 elif curr is self.head:
- 102:                     (self.head, curr.next.prev) = (curr.next, None)
- 103:                 elif curr is self.tail:
- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)
- 105:                 self._length -= 1
- 106:                 return
- 107:             curr = curr.next
- 108:         
- 109:         raise ValueError('{} is not in the list'.format(val))
- 110:     
+  92:     @classmethod
+  93:     def remove(self, val):
+  94:         '''Remove first occurance of val from list.'''
+  95:         curr = self.head
+  96:         while curr:
+  97:             if curr.data is val:
+  98:                 if self._length == 1:
+  99:                     (self.head, self.tail) = (None, None)
+ 100:                 elif (curr is not self.head and curr is not self.tail):
+ 101:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
+ 102:                 elif curr is self.head:
+ 103:                     (self.head, curr.next.prev) = (curr.next, None)
+ 104:                 elif curr is self.tail:
+ 105:                     (self.tail, curr.prev.next) = (curr.prev, None)
+ 106:                 self._length -= 1
+ 107:                 return
+ 108:             curr = curr.next
+ 109:         
+ 110:         raise ValueError('{} is not in the list'.format(val))
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
--------------------------------------------------------------------------------
[0.08083 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_6

def test_case_6():
        bool_0 = True
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(bool_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        with pytest.raises(ValueError):
>           double_linked_list_0.remove(none_type_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.DoubleLinkedList'>, val = None

>   ???
E   AttributeError: type object 'DoubleLinkedList' has no attribute 'head'

queue4:95: AttributeError
   - [#  15] CDI queue4: 
--------------------------------------------------------------------------------
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
- 111:     def _repr(self):
- 112:         '''Return list representation of dll.'''
- 113:         l = []
- 114:         while True:
- 115:             try:
- 116:                 popped_data = self.pop()
- 117:                 l.append(popped_data)
- 118:             except IndexError:
- 119:                 break
- 120:         return l
- 121: 
+ 111:     @classmethod
+ 112:     def _repr(self):
+ 113:         '''Return list representation of dll.'''
+ 114:         l = []
+ 115:         while True:
+ 116:             try:
+ 117:                 popped_data = self.pop()
+ 118:                 l.append(popped_data)
+ 119:             except IndexError:
+ 120:                 break
+ 121:         return l
  122: 
  123: class Queue(object):
  124:     '''Implementation of Queue.
  125: 
--------------------------------------------------------------------------------
[0.06918 s] survived
   - [#  16] CDI queue4: 
--------------------------------------------------------------------------------
  131:     If the queue is empty, returns None
  132:     size(): return the size of the queue. Returns 0 if the queue is empty.
  133:     '''
  134:     
- 135:     def __init__(self, data=None):
- 136:         '''Initialize queue data structure.'''
- 137:         self._container = DoubleLinkedList(data)
- 138:     
+ 135:     @classmethod
+ 136:     def __init__(self, data=None):
+ 137:         '''Initialize queue data structure.'''
+ 138:         self._container = DoubleLinkedList(data)
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
--------------------------------------------------------------------------------
[0.06811 s] survived
   - [#  17] CDI queue4: 
--------------------------------------------------------------------------------
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
  137:         self._container = DoubleLinkedList(data)
  138:     
- 139:     def enqueue(self, val):
- 140:         '''Add a value to the queue.'''
- 141:         self._container.append(val)
- 142:     
+ 139:     @classmethod
+ 140:     def enqueue(self, val):
+ 141:         '''Add a value to the queue.'''
+ 142:         self._container.append(val)
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
--------------------------------------------------------------------------------
[0.07819 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Queue'>, val = <queue4.Queue object at 0x7f0997705ff0>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

queue4:142: AttributeError
   - [#  18] CDI queue4: 
--------------------------------------------------------------------------------
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
- 143:     def dequeue(self):
- 144:         '''Remove a value from the front of the queue.'''
- 145:         return self._container.pop()
- 146:     
+ 143:     @classmethod
+ 144:     def dequeue(self):
+ 145:         '''Remove a value from the front of the queue.'''
+ 146:         return self._container.pop()
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
--------------------------------------------------------------------------------
[0.07735 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

queue4:146: AttributeError
   - [#  19] CDI queue4: 
--------------------------------------------------------------------------------
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
- 147:     def peek(self):
- 148:         '''Return the next value in the queue without dequing it.'''
- 149:         try:
- 150:             return self._container.head.data
- 151:         except AttributeError:
- 152:             return None
- 153:     
+ 147:     @classmethod
+ 148:     def peek(self):
+ 149:         '''Return the next value in the queue without dequing it.'''
+ 150:         try:
+ 151:             return self._container.head.data
+ 152:         except AttributeError:
+ 153:             return None
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.07012 s] survived
   - [#  20] CDI queue4: 
--------------------------------------------------------------------------------
  150:             return self._container.head.data
  151:         except AttributeError:
  152:             return None
  153:     
- 154:     def size(self):
- 155:         '''Return the size of the queue.'''
- 156:         return self._container._length
+ 154:     @classmethod
+ 155:     def size(self):
+ 156:         '''Return the size of the queue.'''
+ 157:         return self._container._length
--------------------------------------------------------------------------------
[0.07740 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
>       var_2 = queue_0.size()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue4.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_container'

queue4:157: AttributeError
   - [#  21] COD queue4: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
-  48:         if not (self.tail):
+  48:         if self.tail:
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.07471 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:18: AssertionError
   - [#  22] COI queue4: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
-  39:             if data:
+  39:             if not data:
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
--------------------------------------------------------------------------------
[0.07313 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert double_linked_list_0.head is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:15: AssertionError
   - [#  23] COI queue4: 
--------------------------------------------------------------------------------
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
-  46:         if old_head:
+  46:         if not old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
--------------------------------------------------------------------------------
[0.07394 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997420af0>
val = b'\x0c\x9f*\xec'

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:47: AttributeError
   - [#  24] COI queue4: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
-  48:         if not (self.tail):
+  48:         if not ((not (self.tail))):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.07386 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:18: AssertionError
   - [#  25] COI queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
-  55:         if self._length < 1:
+  55:         if not (self._length < 1):
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.07689 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997391240>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [#  26] COI queue4: 
--------------------------------------------------------------------------------
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
-  59:         if new_head:
+  59:         if not new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
--------------------------------------------------------------------------------
[0.07649 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099762f8b0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:60: AttributeError
   - [#  27] COI queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
-  63:         if self._length < 1:
+  63:         if not (self._length < 1):
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.07856 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099762fe20>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:83: AttributeError
   - [#  28] COI queue4: 
--------------------------------------------------------------------------------
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
-  71:         if old_tail:
+  71:         if not old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
--------------------------------------------------------------------------------
[0.07650 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:141: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09970d2e00>
val = <queue4.Queue object at 0x7f09970d2d70>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:72: AttributeError
   - [#  29] COI queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
-  73:         if self._length < 1:
+  73:         if not (self._length < 1):
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.09749 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997390130>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:58: AttributeError
   - [#  30] COI queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
-  80:         if self._length < 1:
+  80:         if not (self._length < 1):
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.07629 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_2

def test_case_2():
        none_type_0 = None
        double_linked_list_0 = module_0.DoubleLinkedList(none_type_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        double_linked_list_1 = module_0.DoubleLinkedList(none_type_0)
        assert double_linked_list_1.head is None
        assert double_linked_list_1.tail is None
        with pytest.raises(IndexError):
>           double_linked_list_1.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09976f1120>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:83: AttributeError
   - [#  31] COI queue4: 
--------------------------------------------------------------------------------
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
-  84:         if new_tail:
+  84:         if not new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
--------------------------------------------------------------------------------
[0.08008 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
        var_2 = double_linked_list_0.remove(double_linked_list_0)
        none_type_1 = None
>       var_3 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099716d540>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:85: AttributeError
   - [#  32] COI queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
-  88:         if self._length < 1:
+  88:         if not (self._length < 1):
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.06882 s] survived
   - [#  33] COI queue4: 
--------------------------------------------------------------------------------
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
-  95:         while curr:
+  95:         while not curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
--------------------------------------------------------------------------------
[0.07767 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09974a4790>
val = <queue4.DoubleLinkedList object at 0x7f09974a4790>

>   ???
E   ValueError: <queue4.DoubleLinkedList object at 0x7f09974a4790> is not in the list

queue4:109: ValueError
   - [#  34] COI queue4: 
--------------------------------------------------------------------------------
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
-  96:             if curr.data is val:
+  96:             if not (curr.data is val):
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
--------------------------------------------------------------------------------
[0.07698 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_6

def test_case_6():
        bool_0 = True
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(bool_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       with pytest.raises(ValueError):
E       Failed: DID NOT RAISE <class 'ValueError'>

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:66: Failed
   - [#  35] COI queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
-  97:                 if self._length == 1:
+  97:                 if not (self._length == 1):
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.07845 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0996f4d090>
val = <queue4.DoubleLinkedList object at 0x7f0996f4d090>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
   - [#  36] COI queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
+  99:                 elif not ((curr is not self.head and curr is not self.tail)):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.07873 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099737cd00>
val = <queue4.DoubleLinkedList object at 0x7f099737cd00>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:100: AttributeError
   - [#  37] COI queue4: 
--------------------------------------------------------------------------------
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
- 101:                 elif curr is self.head:
+ 101:                 elif not (curr is self.head):
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
--------------------------------------------------------------------------------
[0.07976 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_11

def test_case_11():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(var_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099737f370>
val = <queue4.DoubleLinkedList object at 0x7f099737f370>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
   - [#  38] COI queue4: 
--------------------------------------------------------------------------------
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
- 103:                 elif curr is self.tail:
+ 103:                 elif not (curr is self.tail):
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
--------------------------------------------------------------------------------
[0.06938 s] survived
   - [#  39] COI queue4: 
--------------------------------------------------------------------------------
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
- 114:         while True:
+ 114:         while not True:
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
--------------------------------------------------------------------------------
[0.07027 s] survived
   - [#  40] CRP queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
-  15:         return 'Value: {}'.format(self.data)
+  15:         return 'mutpy'.format(self.data)
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.07794 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_4

def test_case_4():
        node_0 = module_0.Node()
        bool_0 = False
        var_0 = node_0.__repr__()
>       assert var_0 == 'Value: None'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:44: AssertionError
   - [#  41] CRP queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
-  15:         return 'Value: {}'.format(self.data)
+  15:         return ''.format(self.data)
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.07858 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_4

def test_case_4():
        node_0 = module_0.Node()
        bool_0 = False
        var_0 = node_0.__repr__()
>       assert var_0 == 'Value: None'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:44: AssertionError
   - [#  42] CRP queue4: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
-  34:         self._length = 0
+  34:         self._length = 1
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.07807 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_2

def test_case_2():
        none_type_0 = None
        double_linked_list_0 = module_0.DoubleLinkedList(none_type_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        double_linked_list_1 = module_0.DoubleLinkedList(none_type_0)
        assert double_linked_list_1.head is None
        assert double_linked_list_1.tail is None
        with pytest.raises(IndexError):
>           double_linked_list_1.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997326410>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:83: AttributeError
   - [#  43] CRP queue4: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
-  50:         self._length += 1
+  50:         self._length += 2
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.09991 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_10

def test_case_10():
        int_0 = -2937
        double_linked_list_0 = module_0.DoubleLinkedList(int_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        int_1 = -2380
        double_linked_list_1 = module_0.DoubleLinkedList(int_1)
        assert f'{type(double_linked_list_1.head).__module__}.{type(double_linked_list_1.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_1.tail).__module__}.{type(double_linked_list_1.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_1.pop()
        assert var_0 == -2380
        assert double_linked_list_1.head is None
>       assert double_linked_list_1.tail is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:124: AssertionError
   - [#  44] CRP queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
-  55:         if self._length < 1:
+  55:         if self._length < 2:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.07576 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997385240>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [#  45] CRP queue4: 
--------------------------------------------------------------------------------
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
-  56:             raise IndexError('Cannot pop from an empty list.')
+  56:             raise IndexError('mutpy')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
--------------------------------------------------------------------------------
[0.07058 s] survived
   - [#  46] CRP queue4: 
--------------------------------------------------------------------------------
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
-  56:             raise IndexError('Cannot pop from an empty list.')
+  56:             raise IndexError('')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
--------------------------------------------------------------------------------
[0.06910 s] survived
   - [#  47] CRP queue4: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
-  62:         self._length -= 1
+  62:         self._length -= 2
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.07628 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
        var_2 = queue_0.size()
>       assert var_2 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:54: AssertionError
   - [#  48] CRP queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
-  63:         if self._length < 1:
+  63:         if self._length < 2:
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.06952 s] survived
   - [#  49] CRP queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
-  73:         if self._length < 1:
+  73:         if self._length < 2:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.09378 s] killed by MIO-WHOLE_SUITE/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO-WHOLE_SUITE/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997451c30>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
   - [#  50] CRP queue4: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
-  75:         self._length += 1
+  75:         self._length += 2
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.07609 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
        var_2 = queue_0.size()
>       assert var_2 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:54: AssertionError
   - [#  51] CRP queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
-  80:         if self._length < 1:
+  80:         if self._length < 2:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.07856 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
        var_2 = double_linked_list_0.remove(double_linked_list_0)
        none_type_1 = None
>       var_3 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09974a4eb0>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
   - [#  52] CRP queue4: 
--------------------------------------------------------------------------------
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
-  81:             raise IndexError('Cannot shift from an empty list.')
+  81:             raise IndexError('mutpy')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
--------------------------------------------------------------------------------
[0.06965 s] survived
   - [#  53] CRP queue4: 
--------------------------------------------------------------------------------
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
-  81:             raise IndexError('Cannot shift from an empty list.')
+  81:             raise IndexError('')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
--------------------------------------------------------------------------------
[0.06991 s] survived
   - [#  54] CRP queue4: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
-  87:         self._length -= 1
+  87:         self._length -= 2
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.06807 s] survived
   - [#  55] CRP queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
-  88:         if self._length < 1:
+  88:         if self._length < 2:
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.07003 s] survived
   - [#  56] CRP queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
-  97:                 if self._length == 1:
+  97:                 if self._length == 2:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.07745 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09976f9ab0>
val = <queue4.DoubleLinkedList object at 0x7f09976f9ab0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
   - [#  57] CRP queue4: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
- 105:                 self._length -= 1
+ 105:                 self._length -= 2
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.07950 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
        var_2 = double_linked_list_0.remove(double_linked_list_0)
        none_type_1 = None
>       var_3 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09971f2aa0>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
   - [#  58] CRP queue4: 
--------------------------------------------------------------------------------
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
- 109:         raise ValueError('{} is not in the list'.format(val))
+ 109:         raise ValueError('mutpy'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
--------------------------------------------------------------------------------
[0.06925 s] survived
   - [#  59] CRP queue4: 
--------------------------------------------------------------------------------
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
- 109:         raise ValueError('{} is not in the list'.format(val))
+ 109:         raise ValueError(''.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
--------------------------------------------------------------------------------
[0.06968 s] survived
   - [#  60] EHD queue4: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
-  39:             if data:
-  40:                 self.push(data)
+  39:             raise
+  40:     
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.07342 s] incompetent

TypeError: queue4:36: TypeError: 'NoneType' object is not iterable

   - [#  61] EHD queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
- 119:                 break
+ 119:                 raise
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.07163 s] survived
   - [#  62] EHD queue4: 
--------------------------------------------------------------------------------
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
  151:         except AttributeError:
- 152:             return None
+ 152:             raise
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.07327 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_0

def test_case_0():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.peek()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f0997384670>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

queue4:150: AttributeError
   - [#  63] EXS queue4: 
--------------------------------------------------------------------------------
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
-  39:             if data:
-  40:                 self.push(data)
+  39:             pass
+  40:     
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.07927 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_10

def test_case_10():
        int_0 = -2937
        double_linked_list_0 = module_0.DoubleLinkedList(int_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:115: AssertionError
   - [#  64] EXS queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
- 119:                 break
+ 119:                 pass
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.06939 s] survived
   - [#  65] EXS queue4: 
--------------------------------------------------------------------------------
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
  151:         except AttributeError:
- 152:             return None
+ 152:             pass
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.09045 s] survived
   - [#  66] LCR queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
+  99:                 elif (curr is not self.head or curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.07800 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997384af0>
val = <queue4.DoubleLinkedList object at 0x7f0997384af0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:100: AttributeError
   - [#  67] OIL queue4: 
--------------------------------------------------------------------------------
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
-  38:         except TypeError:
+  38:                 breakexcept TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
--------------------------------------------------------------------------------
[0.07774 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
>       assert var_0 == 189
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:79: AssertionError
   - [#  68] OIL queue4: 
--------------------------------------------------------------------------------
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
- 108:         
+ 108:             break
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
--------------------------------------------------------------------------------
[0.07968 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_11

def test_case_11():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(var_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09970897e0>
val = <queue4.DoubleLinkedList object at 0x7f09970897e0>

>   ???
E   ValueError: <queue4.DoubleLinkedList object at 0x7f09970897e0> is not in the list

queue4:109: ValueError
   - [#  69] OIL queue4: 
--------------------------------------------------------------------------------
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
- 119:                 break
+ 119:                 breakbreak
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.07011 s] survived
   - [#  70] RIL queue4: 
--------------------------------------------------------------------------------
   32:         self.head = None
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
-  36:             for val in data:
+  36:             for val in reversed(data):
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
--------------------------------------------------------------------------------
[0.07791 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
>       assert var_0 == 189
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:79: AssertionError
   - [#  71] ROR queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
-  55:         if self._length < 1:
+  55:         if self._length > 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.07734 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
>       var_0 = double_linked_list_0.pop()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997336e90>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [#  72] ROR queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
-  55:         if self._length < 1:
+  55:         if self._length <= 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.09760 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09970e0c10>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [#  73] ROR queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
-  63:         if self._length < 1:
+  63:         if self._length > 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.07809 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09974a5570>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:83: AttributeError
   - [#  74] ROR queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
-  63:         if self._length < 1:
+  63:         if self._length <= 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.07097 s] survived
   - [#  75] ROR queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
-  73:         if self._length < 1:
+  73:         if self._length > 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.07648 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997303ca0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:58: AttributeError
   - [#  76] ROR queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
-  73:         if self._length < 1:
+  73:         if self._length <= 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.09451 s] killed by MIO-WHOLE_SUITE/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO-WHOLE_SUITE/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09975e4280>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
   - [#  77] ROR queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
-  80:         if self._length < 1:
+  80:         if self._length > 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.07805 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_2

def test_case_2():
        none_type_0 = None
        double_linked_list_0 = module_0.DoubleLinkedList(none_type_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        double_linked_list_1 = module_0.DoubleLinkedList(none_type_0)
        assert double_linked_list_1.head is None
        assert double_linked_list_1.tail is None
        with pytest.raises(IndexError):
>           double_linked_list_1.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099703b2b0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:83: AttributeError
   - [#  78] ROR queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
-  80:         if self._length < 1:
+  80:         if self._length <= 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.07917 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
        var_2 = double_linked_list_0.remove(double_linked_list_0)
        none_type_1 = None
>       var_3 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:108: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099751dff0>

>   ???
E   IndexError: Cannot shift from an empty list.

queue4:81: IndexError
   - [#  79] ROR queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
-  88:         if self._length < 1:
+  88:         if self._length > 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.06905 s] survived
   - [#  80] ROR queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
-  88:         if self._length < 1:
+  88:         if self._length <= 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.07027 s] survived
   - [#  81] ROR queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
-  97:                 if self._length == 1:
+  97:                 if self._length != 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.07771 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997502740>
val = <queue4.DoubleLinkedList object at 0x7f0997502740>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue4:102: AttributeError
   - [#  82] SDI queue4: 
--------------------------------------------------------------------------------
    3: 
    4: class Node(object):
    5:     '''Node class for data storage.'''
    6:     
-   7:     def __init__(self, data=None, next_node=None, prev=None):
-   8:         '''Initialize Node.'''
-   9:         self.data = data
-  10:         self.next = next_node
-  11:         self.prev = prev
-  12:     
+   7:     @staticmethod
+   8:     def __init__(self, data=None, next_node=None, prev=None):
+   9:         '''Initialize Node.'''
+  10:         self.data = data
+  11:         self.next = next_node
+  12:         self.prev = prev
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
   16: 
--------------------------------------------------------------------------------
[0.07321 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:45: in push
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = b'\x0c\x9f*\xec', data = None, next_node = None, prev = None

>   ???
E   AttributeError: 'bytes' object has no attribute 'data'

queue4:10: AttributeError
   - [#  83] SDI queue4: 
--------------------------------------------------------------------------------
    9:         self.data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
-  13:     def __repr__(self):
-  14:         '''String representation.'''
-  15:         return 'Value: {}'.format(self.data)
-  16: 
+  13:     @staticmethod
+  14:     def __repr__(self):
+  15:         '''String representation.'''
+  16:         return 'Value: {}'.format(self.data)
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
   20: 
--------------------------------------------------------------------------------
[0.07605 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:43: TypeError: Node.__repr__() missing 1 required positional argument: 'self'

   - [#  84] SDI queue4: 
--------------------------------------------------------------------------------
   26:     remove(val) - will remove the first instance of (val) found in the list,
   27:     starting from the head.
   28:     '''
   29:     
-  30:     def __init__(self, data=None):
-  31:         '''Initialize list.'''
-  32:         self.head = None
-  33:         self.tail = None
-  34:         self._length = 0
-  35:         try:
-  36:             for val in data:
-  37:                 self.push(val)
-  38:         except TypeError:
-  39:             if data:
-  40:                 self.push(data)
-  41:     
+  30:     @staticmethod
+  31:     def __init__(self, data=None):
+  32:         '''Initialize list.'''
+  33:         self.head = None
+  34:         self.tail = None
+  35:         self._length = 0
+  36:         try:
+  37:             for val in data:
+  38:                 self.push(val)
+  39:         except TypeError:
+  40:             if data:
+  41:                 self.push(data)
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
--------------------------------------------------------------------------------
[0.07391 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_0

def test_case_0():
>       queue_0 = module_0.Queue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:137: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = None, data = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'head'

queue4:33: AttributeError
   - [#  85] SDI queue4: 
--------------------------------------------------------------------------------
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
-  42:     def push(self, val):
-  43:         '''Add val to the head of the list.'''
-  44:         old_head = self.head
-  45:         self.head = Node(val, next_node=old_head)
-  46:         if old_head:
-  47:             old_head.prev = self.head
-  48:         if not (self.tail):
-  49:             self.tail = self.head
-  50:         self._length += 1
-  51:     
+  42:     @staticmethod
+  43:     def push(self, val):
+  44:         '''Add val to the head of the list.'''
+  45:         old_head = self.head
+  46:         self.head = Node(val, next_node=old_head)
+  47:         if old_head:
+  48:             old_head.prev = self.head
+  49:         if not (self.tail):
+  50:             self.tail = self.head
+  51:         self._length += 1
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
   55:         if self._length < 1:
--------------------------------------------------------------------------------
[0.07399 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: TypeError: DoubleLinkedList.push() missing 1 required positional argument: 'val'

   - [#  86] SDI queue4: 
--------------------------------------------------------------------------------
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
-  52:     def pop(self):
-  53:         '''Remove the val from the head of the list.'''
-  54:         to_return = self.head
-  55:         if self._length < 1:
-  56:             raise IndexError('Cannot pop from an empty list.')
-  57:         
-  58:         new_head = self.head.next
-  59:         if new_head:
-  60:             new_head.prev = None
-  61:         self.head = new_head
-  62:         self._length -= 1
-  63:         if self._length < 1:
-  64:             self.tail = None
-  65:         return to_return.data
-  66:     
+  52:     @staticmethod
+  53:     def pop(self):
+  54:         '''Remove the val from the head of the list.'''
+  55:         to_return = self.head
+  56:         if self._length < 1:
+  57:             raise IndexError('Cannot pop from an empty list.')
+  58:         
+  59:         new_head = self.head.next
+  60:         if new_head:
+  61:             new_head.prev = None
+  62:         self.head = new_head
+  63:         self._length -= 1
+  64:         if self._length < 1:
+  65:             self.tail = None
+  66:         return to_return.data
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
--------------------------------------------------------------------------------
[0.09632 s] incompetent

TypeError: queue4:145: TypeError: DoubleLinkedList.pop() missing 1 required positional argument: 'self'

   - [#  87] SDI queue4: 
--------------------------------------------------------------------------------
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
-  67:     def append(self, val):
-  68:         '''Add val to the tail of the list.'''
-  69:         old_tail = self.tail
-  70:         self.tail = Node(val, prev=old_tail)
-  71:         if old_tail:
-  72:             old_tail.next = self.tail
-  73:         if self._length < 1:
-  74:             self.head = self.tail
-  75:         self._length += 1
-  76:     
+  67:     @staticmethod
+  68:     def append(self, val):
+  69:         '''Add val to the tail of the list.'''
+  70:         old_tail = self.tail
+  71:         self.tail = Node(val, prev=old_tail)
+  72:         if old_tail:
+  73:             old_tail.next = self.tail
+  74:         if self._length < 1:
+  75:             self.head = self.tail
+  76:         self._length += 1
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
   80:         if self._length < 1:
--------------------------------------------------------------------------------
[0.07685 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:19: TypeError: DoubleLinkedList.append() missing 1 required positional argument: 'val'

   - [#  88] SDI queue4: 
--------------------------------------------------------------------------------
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
-  77:     def shift(self):
-  78:         '''Remove the val from the tail of the list.'''
-  79:         to_return = self.tail
-  80:         if self._length < 1:
-  81:             raise IndexError('Cannot shift from an empty list.')
-  82:         
-  83:         new_tail = self.tail.prev
-  84:         if new_tail:
-  85:             new_tail.next = None
-  86:         self.tail = new_tail
-  87:         self._length -= 1
-  88:         if self._length < 1:
-  89:             self.tail = None
-  90:         return to_return.data
-  91:     
+  77:     @staticmethod
+  78:     def shift(self):
+  79:         '''Remove the val from the tail of the list.'''
+  80:         to_return = self.tail
+  81:         if self._length < 1:
+  82:             raise IndexError('Cannot shift from an empty list.')
+  83:         
+  84:         new_tail = self.tail.prev
+  85:         if new_tail:
+  86:             new_tail.next = None
+  87:         self.tail = new_tail
+  88:         self._length -= 1
+  89:         if self._length < 1:
+  90:             self.tail = None
+  91:         return to_return.data
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
--------------------------------------------------------------------------------
[0.07698 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: TypeError: DoubleLinkedList.shift() missing 1 required positional argument: 'self'

   - [#  89] SDI queue4: 
--------------------------------------------------------------------------------
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
-  92:     def remove(self, val):
-  93:         '''Remove first occurance of val from list.'''
-  94:         curr = self.head
-  95:         while curr:
-  96:             if curr.data is val:
-  97:                 if self._length == 1:
-  98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
- 101:                 elif curr is self.head:
- 102:                     (self.head, curr.next.prev) = (curr.next, None)
- 103:                 elif curr is self.tail:
- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)
- 105:                 self._length -= 1
- 106:                 return
- 107:             curr = curr.next
- 108:         
- 109:         raise ValueError('{} is not in the list'.format(val))
- 110:     
+  92:     @staticmethod
+  93:     def remove(self, val):
+  94:         '''Remove first occurance of val from list.'''
+  95:         curr = self.head
+  96:         while curr:
+  97:             if curr.data is val:
+  98:                 if self._length == 1:
+  99:                     (self.head, self.tail) = (None, None)
+ 100:                 elif (curr is not self.head and curr is not self.tail):
+ 101:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
+ 102:                 elif curr is self.head:
+ 103:                     (self.head, curr.next.prev) = (curr.next, None)
+ 104:                 elif curr is self.tail:
+ 105:                     (self.tail, curr.prev.next) = (curr.prev, None)
+ 106:                 self._length -= 1
+ 107:                 return
+ 108:             curr = curr.next
+ 109:         
+ 110:         raise ValueError('{} is not in the list'.format(val))
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
--------------------------------------------------------------------------------
[0.07904 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:67: TypeError: DoubleLinkedList.remove() missing 1 required positional argument: 'val'

   - [#  90] SDI queue4: 
--------------------------------------------------------------------------------
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
- 111:     def _repr(self):
- 112:         '''Return list representation of dll.'''
- 113:         l = []
- 114:         while True:
- 115:             try:
- 116:                 popped_data = self.pop()
- 117:                 l.append(popped_data)
- 118:             except IndexError:
- 119:                 break
- 120:         return l
- 121: 
+ 111:     @staticmethod
+ 112:     def _repr(self):
+ 113:         '''Return list representation of dll.'''
+ 114:         l = []
+ 115:         while True:
+ 116:             try:
+ 117:                 popped_data = self.pop()
+ 118:                 l.append(popped_data)
+ 119:             except IndexError:
+ 120:                 break
+ 121:         return l
  122: 
  123: class Queue(object):
  124:     '''Implementation of Queue.
  125: 
--------------------------------------------------------------------------------
[0.07142 s] survived
   - [#  91] SDI queue4: 
--------------------------------------------------------------------------------
  131:     If the queue is empty, returns None
  132:     size(): return the size of the queue. Returns 0 if the queue is empty.
  133:     '''
  134:     
- 135:     def __init__(self, data=None):
- 136:         '''Initialize queue data structure.'''
- 137:         self._container = DoubleLinkedList(data)
- 138:     
+ 135:     @staticmethod
+ 136:     def __init__(self, data=None):
+ 137:         '''Initialize queue data structure.'''
+ 138:         self._container = DoubleLinkedList(data)
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
--------------------------------------------------------------------------------
[0.07291 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:6: TypeError: Queue.__init__() missing 1 required positional argument: 'self'

   - [#  92] SDI queue4: 
--------------------------------------------------------------------------------
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
  137:         self._container = DoubleLinkedList(data)
  138:     
- 139:     def enqueue(self, val):
- 140:         '''Add a value to the queue.'''
- 141:         self._container.append(val)
- 142:     
+ 139:     @staticmethod
+ 140:     def enqueue(self, val):
+ 141:         '''Add a value to the queue.'''
+ 142:         self._container.append(val)
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
--------------------------------------------------------------------------------
[0.07519 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:50: TypeError: Queue.enqueue() missing 1 required positional argument: 'val'

   - [#  93] SDI queue4: 
--------------------------------------------------------------------------------
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
  142:     
- 143:     def dequeue(self):
- 144:         '''Remove a value from the front of the queue.'''
- 145:         return self._container.pop()
- 146:     
+ 143:     @staticmethod
+ 144:     def dequeue(self):
+ 145:         '''Remove a value from the front of the queue.'''
+ 146:         return self._container.pop()
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
--------------------------------------------------------------------------------
[0.09422 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: TypeError: Queue.dequeue() missing 1 required positional argument: 'self'

   - [#  94] SDI queue4: 
--------------------------------------------------------------------------------
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
  146:     
- 147:     def peek(self):
- 148:         '''Return the next value in the queue without dequing it.'''
- 149:         try:
- 150:             return self._container.head.data
- 151:         except AttributeError:
- 152:             return None
- 153:     
+ 147:     @staticmethod
+ 148:     def peek(self):
+ 149:         '''Return the next value in the queue without dequing it.'''
+ 150:         try:
+ 151:             return self._container.head.data
+ 152:         except AttributeError:
+ 153:             return None
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.07383 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:8: TypeError: Queue.peek() missing 1 required positional argument: 'self'

   - [#  95] SDI queue4: 
--------------------------------------------------------------------------------
  150:             return self._container.head.data
  151:         except AttributeError:
  152:             return None
  153:     
- 154:     def size(self):
- 155:         '''Return the size of the queue.'''
- 156:         return self._container._length
+ 154:     @staticmethod
+ 155:     def size(self):
+ 156:         '''Return the size of the queue.'''
+ 157:         return self._container._length
--------------------------------------------------------------------------------
[0.07654 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue4/MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:53: TypeError: Queue.size() missing 1 required positional argument: 'self'

   - [#  96] SDL queue4: 
--------------------------------------------------------------------------------
    5:     '''Node class for data storage.'''
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
-   9:         self.data = data
+   9:         pass
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
--------------------------------------------------------------------------------
[0.07478 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_4

def test_case_4():
        node_0 = module_0.Node()
        bool_0 = False
>       var_0 = node_0.__repr__()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'Node' object has no attribute 'data'") raised in repr()] Node object at 0x7f09977079a0>

>   ???
E   AttributeError: 'Node' object has no attribute 'data'

queue4:15: AttributeError
   - [#  97] SDL queue4: 
--------------------------------------------------------------------------------
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
-  10:         self.next = next_node
+  10:         pass
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
--------------------------------------------------------------------------------
[0.07749 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997144190>

>   ???
E   AttributeError: 'Node' object has no attribute 'next'

queue4:58: AttributeError
   - [#  98] SDL queue4: 
--------------------------------------------------------------------------------
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
   10:         self.next = next_node
-  11:         self.prev = prev
+  11:         pass
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
--------------------------------------------------------------------------------
[0.08843 s] killed by MIO-WHOLE_SUITE/test_queue4_MIO.py::test_case_10

def test_case_10():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099742ce50>

>   ???
E   AttributeError: 'Node' object has no attribute 'prev'

queue4:83: AttributeError
   - [#  99] SDL queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
-  15:         return 'Value: {}'.format(self.data)
+  15:         pass
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.07850 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_4

def test_case_4():
        node_0 = module_0.Node()
        bool_0 = False
        var_0 = node_0.__repr__()
>       assert var_0 == 'Value: None'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:44: AssertionError
   - [# 100] SDL queue4: 
--------------------------------------------------------------------------------
   28:     '''
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
-  32:         self.head = None
+  32:         pass
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
--------------------------------------------------------------------------------
[0.07374 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert double_linked_list_0.head is None
E       AttributeError: 'DoubleLinkedList' object has no attribute 'head'

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:15: AttributeError
   - [# 101] SDL queue4: 
--------------------------------------------------------------------------------
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
-  33:         self.tail = None
+  33:         pass
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
--------------------------------------------------------------------------------
[0.07400 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
>       assert double_linked_list_0.tail is None
E       AttributeError: 'DoubleLinkedList' object has no attribute 'tail'

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:16: AttributeError
   - [# 102] SDL queue4: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
-  34:         self._length = 0
+  34:         pass
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.07392 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997393970>
val = b'\x0c\x9f*\xec'

>   ???
E   AttributeError: 'DoubleLinkedList' object has no attribute '_length'

queue4:50: AttributeError
   - [# 103] SDL queue4: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
-  37:                 self.push(val)
+  37:                 pass
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.07711 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:75: AssertionError
   - [# 104] SDL queue4: 
--------------------------------------------------------------------------------
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
-  40:                 self.push(data)
+  40:                 pass
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.07832 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_10

def test_case_10():
        int_0 = -2937
        double_linked_list_0 = module_0.DoubleLinkedList(int_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:115: AssertionError
   - [# 105] SDL queue4: 
--------------------------------------------------------------------------------
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
-  44:         old_head = self.head
+  44:         pass
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
--------------------------------------------------------------------------------
[0.07422 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099762cd00>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'old_head' is not defined

queue4:45: NameError
   - [# 106] SDL queue4: 
--------------------------------------------------------------------------------
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
-  45:         self.head = Node(val, next_node=old_head)
+  45:         pass
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
--------------------------------------------------------------------------------
[0.07354 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:18: AssertionError
   - [# 107] SDL queue4: 
--------------------------------------------------------------------------------
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
-  47:             old_head.prev = self.head
+  47:             pass
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
--------------------------------------------------------------------------------
[0.07999 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_11

def test_case_11():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(var_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09971468c0>
val = <queue4.DoubleLinkedList object at 0x7f09971468c0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:104: AttributeError
   - [# 108] SDL queue4: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
-  49:             self.tail = self.head
+  49:             pass
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.08961 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
>       assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:18: AssertionError
   - [# 109] SDL queue4: 
--------------------------------------------------------------------------------
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
-  54:         to_return = self.head
+  54:         pass
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
--------------------------------------------------------------------------------
[0.07634 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099716eda0>

>   ???
E   NameError: name 'to_return' is not defined

queue4:65: NameError
   - [# 110] SDL queue4: 
--------------------------------------------------------------------------------
   54:         to_return = self.head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
-  58:         new_head = self.head.next
+  58:         pass
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
--------------------------------------------------------------------------------
[0.07674 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099737e290>

>   ???
E   NameError: name 'new_head' is not defined

queue4:59: NameError
   - [# 111] SDL queue4: 
--------------------------------------------------------------------------------
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
-  60:             new_head.prev = None
+  60:             pass
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
--------------------------------------------------------------------------------
[0.06938 s] survived
   - [# 112] SDL queue4: 
--------------------------------------------------------------------------------
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
-  61:         self.head = new_head
+  61:         pass
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
--------------------------------------------------------------------------------
[0.08062 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_10

def test_case_10():
        int_0 = -2937
        double_linked_list_0 = module_0.DoubleLinkedList(int_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        int_1 = -2380
        double_linked_list_1 = module_0.DoubleLinkedList(int_1)
        assert f'{type(double_linked_list_1.head).__module__}.{type(double_linked_list_1.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_1.tail).__module__}.{type(double_linked_list_1.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_1.pop()
        assert var_0 == -2380
>       assert double_linked_list_1.head is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:123: AssertionError
   - [# 113] SDL queue4: 
--------------------------------------------------------------------------------
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
-  64:             self.tail = None
+  64:             pass
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
--------------------------------------------------------------------------------
[0.07907 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_10

def test_case_10():
        int_0 = -2937
        double_linked_list_0 = module_0.DoubleLinkedList(int_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        int_1 = -2380
        double_linked_list_1 = module_0.DoubleLinkedList(int_1)
        assert f'{type(double_linked_list_1.head).__module__}.{type(double_linked_list_1.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_1.tail).__module__}.{type(double_linked_list_1.tail).__qualname__}' == 'queue4.Node'
        var_0 = double_linked_list_1.pop()
        assert var_0 == -2380
        assert double_linked_list_1.head is None
>       assert double_linked_list_1.tail is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:124: AssertionError
   - [# 114] SDL queue4: 
--------------------------------------------------------------------------------
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
-  65:         return to_return.data
+  65:         pass
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
--------------------------------------------------------------------------------
[0.07669 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:52: AssertionError
   - [# 115] SDL queue4: 
--------------------------------------------------------------------------------
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
-  69:         old_tail = self.tail
+  69:         pass
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
--------------------------------------------------------------------------------
[0.09765 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.append(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997098220>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'old_tail' is not defined

queue4:70: NameError
   - [# 116] SDL queue4: 
--------------------------------------------------------------------------------
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
-  70:         self.tail = Node(val, prev=old_tail)
+  70:         pass
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
--------------------------------------------------------------------------------
[0.07719 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099742d8a0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:58: AttributeError
   - [# 117] SDL queue4: 
--------------------------------------------------------------------------------
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
-  72:             old_tail.next = self.tail
+  72:             pass
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
--------------------------------------------------------------------------------
[0.09247 s] killed by MIO-WHOLE_SUITE/test_queue4_MIO.py::test_case_14

def test_case_14():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.append(var_0)
>       var_2 = double_linked_list_0.remove(var_1)

MIO-WHOLE_SUITE/test_queue4_MIO.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099737e8f0>, val = None

>   ???
E   ValueError: None is not in the list

queue4:109: ValueError
   - [# 118] SDL queue4: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
-  74:             self.head = self.tail
+  74:             pass
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.07733 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09975018d0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue4:58: AttributeError
   - [# 119] SDL queue4: 
--------------------------------------------------------------------------------
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
-  79:         to_return = self.tail
+  79:         pass
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
--------------------------------------------------------------------------------
[0.07677 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09970e39d0>

>   ???
E   NameError: name 'to_return' is not defined

queue4:90: NameError
   - [# 120] SDL queue4: 
--------------------------------------------------------------------------------
   79:         to_return = self.tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
-  83:         new_tail = self.tail.prev
+  83:         pass
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
--------------------------------------------------------------------------------
[0.07814 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099742e4d0>

>   ???
E   NameError: name 'new_tail' is not defined

queue4:84: NameError
   - [# 121] SDL queue4: 
--------------------------------------------------------------------------------
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
-  85:             new_tail.next = None
+  85:             pass
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
--------------------------------------------------------------------------------
[0.06932 s] survived
   - [# 122] SDL queue4: 
--------------------------------------------------------------------------------
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
-  86:         self.tail = new_tail
+  86:         pass
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
--------------------------------------------------------------------------------
[0.07215 s] survived
   - [# 123] SDL queue4: 
--------------------------------------------------------------------------------
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
-  89:             self.tail = None
+  89:             pass
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
--------------------------------------------------------------------------------
[0.06913 s] survived
   - [# 124] SDL queue4: 
--------------------------------------------------------------------------------
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
-  90:         return to_return.data
+  90:         pass
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
--------------------------------------------------------------------------------
[0.07948 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
        var_1 = double_linked_list_0.shift()
>       assert var_1 == 232
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:82: AssertionError
   - [# 125] SDL queue4: 
--------------------------------------------------------------------------------
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
-  94:         curr = self.head
+  94:         pass
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
--------------------------------------------------------------------------------
[0.07907 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_6

def test_case_6():
        bool_0 = True
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(bool_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        with pytest.raises(ValueError):
>           double_linked_list_0.remove(none_type_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997422c20>, val = None

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

queue4:95: UnboundLocalError
   - [# 126] SDL queue4: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
-  98:                     (self.head, self.tail) = (None, None)
+  98:                     pass
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.07783 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.remove(double_linked_list_0)
>       assert double_linked_list_0.head is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:92: AssertionError
   - [# 127] SDL queue4: 
--------------------------------------------------------------------------------
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
+ 100:                     pass
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
--------------------------------------------------------------------------------
[0.06957 s] survived
   - [# 128] SDL queue4: 
--------------------------------------------------------------------------------
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
- 102:                     (self.head, curr.next.prev) = (curr.next, None)
+ 102:                     pass
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
--------------------------------------------------------------------------------
[0.06982 s] survived
   - [# 129] SDL queue4: 
--------------------------------------------------------------------------------
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)
+ 104:                     pass
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
--------------------------------------------------------------------------------
[0.06944 s] survived
   - [# 130] SDL queue4: 
--------------------------------------------------------------------------------
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
- 106:                 return
+ 106:                 pass
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
--------------------------------------------------------------------------------
[0.09439 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997500700>
val = <queue4.DoubleLinkedList object at 0x7f0997500700>

>   ???
E   ValueError: <queue4.DoubleLinkedList object at 0x7f0997500700> is not in the list

queue4:109: ValueError
   - [# 131] SDL queue4: 
--------------------------------------------------------------------------------
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
- 107:             curr = curr.next
+ 107:             pass
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
--------------------------------------------------------------------------------
[5.00641 s] timeout
   - [# 132] SDL queue4: 
--------------------------------------------------------------------------------
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
- 113:         l = []
+ 113:         pass
  114:         while True:
  115:             try:
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
--------------------------------------------------------------------------------
[0.06936 s] survived
   - [# 133] SDL queue4: 
--------------------------------------------------------------------------------
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
  115:             try:
- 116:                 popped_data = self.pop()
+ 116:                 pass
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.07014 s] survived
   - [# 134] SDL queue4: 
--------------------------------------------------------------------------------
  113:         l = []
  114:         while True:
  115:             try:
  116:                 popped_data = self.pop()
- 117:                 l.append(popped_data)
+ 117:                 pass
  118:             except IndexError:
  119:                 break
  120:         return l
  121: 
--------------------------------------------------------------------------------
[0.06914 s] survived
   - [# 135] SDL queue4: 
--------------------------------------------------------------------------------
  116:                 popped_data = self.pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
- 120:         return l
+ 120:         pass
  121: 
  122: 
  123: class Queue(object):
  124:     '''Implementation of Queue.
--------------------------------------------------------------------------------
[0.07020 s] survived
   - [# 136] SDL queue4: 
--------------------------------------------------------------------------------
  133:     '''
  134:     
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
- 137:         self._container = DoubleLinkedList(data)
+ 137:         pass
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
--------------------------------------------------------------------------------
[0.07702 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f0997146800>
val = <queue4.Queue object at 0x7f0997146800>

>   ???
E   AttributeError: 'Queue' object has no attribute '_container'

queue4:141: AttributeError
   - [# 137] SDL queue4: 
--------------------------------------------------------------------------------
  137:         self._container = DoubleLinkedList(data)
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
- 141:         self._container.append(val)
+ 141:         pass
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
--------------------------------------------------------------------------------
[0.07711 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09972843d0>

>   ???
E   IndexError: Cannot pop from an empty list.

queue4:56: IndexError
   - [# 138] SDL queue4: 
--------------------------------------------------------------------------------
  141:         self._container.append(val)
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
- 145:         return self._container.pop()
+ 145:         pass
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
--------------------------------------------------------------------------------
[0.07551 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:52: AssertionError
   - [# 139] SDL queue4: 
--------------------------------------------------------------------------------
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
- 150:             return self._container.head.data
+ 150:             pass
  151:         except AttributeError:
  152:             return None
  153:     
  154:     def size(self):
--------------------------------------------------------------------------------
[0.07103 s] survived
   - [# 140] SDL queue4: 
--------------------------------------------------------------------------------
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
  150:             return self._container.head.data
  151:         except AttributeError:
- 152:             return None
+ 152:             pass
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
  156:         return self._container._length
--------------------------------------------------------------------------------
[0.06915 s] survived
   - [# 141] SDL queue4: 
--------------------------------------------------------------------------------
  152:             return None
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
- 156:         return self._container._length
+ 156:         pass
--------------------------------------------------------------------------------
[0.07738 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
        var_2 = queue_0.size()
>       assert var_2 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:54: AssertionError
   - [# 142] SVD queue4: 
--------------------------------------------------------------------------------
    5:     '''Node class for data storage.'''
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
-   9:         self.data = data
+   9:         data = data
   10:         self.next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 143] SVD queue4: 
--------------------------------------------------------------------------------
    6:     
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
-  10:         self.next = next_node
+  10:         next = next_node
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 144] SVD queue4: 
--------------------------------------------------------------------------------
    7:     def __init__(self, data=None, next_node=None, prev=None):
    8:         '''Initialize Node.'''
    9:         self.data = data
   10:         self.next = next_node
-  11:         self.prev = prev
+  11:         prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
   15:         return 'Value: {}'.format(self.data)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 145] SVD queue4: 
--------------------------------------------------------------------------------
   11:         self.prev = prev
   12:     
   13:     def __repr__(self):
   14:         '''String representation.'''
-  15:         return 'Value: {}'.format(self.data)
+  15:         return 'Value: {}'.format(data)
   16: 
   17: 
   18: class DoubleLinkedList(object):
   19:     '''Double linked list impplementation.
--------------------------------------------------------------------------------
[0.09493 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_4

def test_case_4():
        node_0 = module_0.Node()
        bool_0 = False
>       var_0 = node_0.__repr__()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[NameError("name 'data' is not defined") raised in repr()] Node object at 0x7f09972114b0>

>   ???
E   NameError: name 'data' is not defined

queue4:15: NameError
   - [# 146] SVD queue4: 
--------------------------------------------------------------------------------
   28:     '''
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
-  32:         self.head = None
+  32:         head = None
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 147] SVD queue4: 
--------------------------------------------------------------------------------
   29:     
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
-  33:         self.tail = None
+  33:         tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 148] SVD queue4: 
--------------------------------------------------------------------------------
   30:     def __init__(self, data=None):
   31:         '''Initialize list.'''
   32:         self.head = None
   33:         self.tail = None
-  34:         self._length = 0
+  34:         _length = 0
   35:         try:
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 149] SVD queue4: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
-  37:                 self.push(val)
+  37:                 push(val)
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.07666 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997375e10>
data = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'

>   ???
E   NameError: name 'push' is not defined

queue4:37: NameError
   - [# 150] SVD queue4: 
--------------------------------------------------------------------------------
   36:             for val in data:
   37:                 self.push(val)
   38:         except TypeError:
   39:             if data:
-  40:                 self.push(data)
+  40:                 push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
--------------------------------------------------------------------------------
[0.07877 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_10

self = <queue4.DoubleLinkedList object at 0x7f09972cd540>, data = -2937

>   ???
E   TypeError: 'int' object is not iterable

queue4:36: TypeError

During handling of the above exception, another exception occurred:

    def test_case_10():
        int_0 = -2937
>       double_linked_list_0 = module_0.DoubleLinkedList(int_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09972cd540>, data = -2937

>   ???
E   NameError: name 'push' is not defined

queue4:40: NameError
   - [# 151] SVD queue4: 
--------------------------------------------------------------------------------
   40:                 self.push(data)
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
-  44:         old_head = self.head
+  44:         old_head = head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
--------------------------------------------------------------------------------
[0.07433 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09973bb3a0>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'head' is not defined

queue4:44: NameError
   - [# 152] SVD queue4: 
--------------------------------------------------------------------------------
   41:     
   42:     def push(self, val):
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
-  45:         self.head = Node(val, next_node=old_head)
+  45:         head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 153] SVD queue4: 
--------------------------------------------------------------------------------
   43:         '''Add val to the head of the list.'''
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
-  47:             old_head.prev = self.head
+  47:             old_head.prev = head
   48:         if not (self.tail):
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
--------------------------------------------------------------------------------
[0.08115 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
>       double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:37: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09974a4a90>, val = 214

>   ???
E   NameError: name 'head' is not defined

queue4:47: NameError
   - [# 154] SVD queue4: 
--------------------------------------------------------------------------------
   44:         old_head = self.head
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
-  48:         if not (self.tail):
+  48:         if not tail:
   49:             self.tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
--------------------------------------------------------------------------------
[0.07475 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09974a75b0>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'tail' is not defined

queue4:48: NameError
   - [# 155] SVD queue4: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
-  49:             self.tail = self.head
+  49:             tail = self.head
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 156] SVD queue4: 
--------------------------------------------------------------------------------
   45:         self.head = Node(val, next_node=old_head)
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
-  49:             self.tail = self.head
+  49:             self.tail = head
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
--------------------------------------------------------------------------------
[0.07461 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
>       var_0 = double_linked_list_0.push(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09971f8670>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'head' is not defined

queue4:49: NameError
   - [# 157] SVD queue4: 
--------------------------------------------------------------------------------
   46:         if old_head:
   47:             old_head.prev = self.head
   48:         if not (self.tail):
   49:             self.tail = self.head
-  50:         self._length += 1
+  50:         _length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 158] SVD queue4: 
--------------------------------------------------------------------------------
   50:         self._length += 1
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
-  54:         to_return = self.head
+  54:         to_return = head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
--------------------------------------------------------------------------------
[0.07740 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09971f20e0>

>   ???
E   NameError: name 'head' is not defined

queue4:54: NameError
   - [# 159] SVD queue4: 
--------------------------------------------------------------------------------
   51:     
   52:     def pop(self):
   53:         '''Remove the val from the head of the list.'''
   54:         to_return = self.head
-  55:         if self._length < 1:
+  55:         if _length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
--------------------------------------------------------------------------------
[0.07695 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997337d00>

>   ???
E   NameError: name '_length' is not defined

queue4:55: NameError
   - [# 160] SVD queue4: 
--------------------------------------------------------------------------------
   54:         to_return = self.head
   55:         if self._length < 1:
   56:             raise IndexError('Cannot pop from an empty list.')
   57:         
-  58:         new_head = self.head.next
+  58:         new_head = head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
--------------------------------------------------------------------------------
[0.09686 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099737cdc0>

>   ???
E   NameError: name 'head' is not defined

queue4:58: NameError
   - [# 161] SVD queue4: 
--------------------------------------------------------------------------------
   57:         
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
-  61:         self.head = new_head
+  61:         head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 162] SVD queue4: 
--------------------------------------------------------------------------------
   58:         new_head = self.head.next
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
-  62:         self._length -= 1
+  62:         _length -= 1
   63:         if self._length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 163] SVD queue4: 
--------------------------------------------------------------------------------
   59:         if new_head:
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
-  63:         if self._length < 1:
+  63:         if _length < 1:
   64:             self.tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
--------------------------------------------------------------------------------
[0.07623 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:145: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997707400>

>   ???
E   NameError: name '_length' is not defined

queue4:63: NameError
   - [# 164] SVD queue4: 
--------------------------------------------------------------------------------
   60:             new_head.prev = None
   61:         self.head = new_head
   62:         self._length -= 1
   63:         if self._length < 1:
-  64:             self.tail = None
+  64:             tail = None
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 165] SVD queue4: 
--------------------------------------------------------------------------------
   65:         return to_return.data
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
-  69:         old_tail = self.tail
+  69:         old_tail = tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
--------------------------------------------------------------------------------
[0.07677 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.append(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099726ed40>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'tail' is not defined

queue4:69: NameError
   - [# 166] SVD queue4: 
--------------------------------------------------------------------------------
   66:     
   67:     def append(self, val):
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
-  70:         self.tail = Node(val, prev=old_tail)
+  70:         tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 167] SVD queue4: 
--------------------------------------------------------------------------------
   68:         '''Add val to the tail of the list.'''
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
-  72:             old_tail.next = self.tail
+  72:             old_tail.next = tail
   73:         if self._length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
--------------------------------------------------------------------------------
[0.09729 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.append(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09972533d0>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name 'tail' is not defined

queue4:72: NameError
   - [# 168] SVD queue4: 
--------------------------------------------------------------------------------
   69:         old_tail = self.tail
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
-  73:         if self._length < 1:
+  73:         if _length < 1:
   74:             self.head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
--------------------------------------------------------------------------------
[0.07755 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bytes_0 = b'\x0c\x9f*\xec'
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(bytes_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.append(bytes_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997423f40>
val = b'\x0c\x9f*\xec'

>   ???
E   NameError: name '_length' is not defined

queue4:73: NameError
   - [# 169] SVD queue4: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
-  74:             self.head = self.tail
+  74:             head = self.tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 170] SVD queue4: 
--------------------------------------------------------------------------------
   70:         self.tail = Node(val, prev=old_tail)
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
-  74:             self.head = self.tail
+  74:             self.head = tail
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
--------------------------------------------------------------------------------
[0.07769 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue4:141: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09974a1b10>
val = <queue4.Queue object at 0x7f09974a3d30>

>   ???
E   NameError: name 'tail' is not defined

queue4:74: NameError
   - [# 171] SVD queue4: 
--------------------------------------------------------------------------------
   71:         if old_tail:
   72:             old_tail.next = self.tail
   73:         if self._length < 1:
   74:             self.head = self.tail
-  75:         self._length += 1
+  75:         _length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 172] SVD queue4: 
--------------------------------------------------------------------------------
   75:         self._length += 1
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
-  79:         to_return = self.tail
+  79:         to_return = tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
--------------------------------------------------------------------------------
[0.07716 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_2

def test_case_2():
        none_type_0 = None
        double_linked_list_0 = module_0.DoubleLinkedList(none_type_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        double_linked_list_1 = module_0.DoubleLinkedList(none_type_0)
        assert double_linked_list_1.head is None
        assert double_linked_list_1.tail is None
        with pytest.raises(IndexError):
>           double_linked_list_1.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997301390>

>   ???
E   NameError: name 'tail' is not defined

queue4:79: NameError
   - [# 173] SVD queue4: 
--------------------------------------------------------------------------------
   76:     
   77:     def shift(self):
   78:         '''Remove the val from the tail of the list.'''
   79:         to_return = self.tail
-  80:         if self._length < 1:
+  80:         if _length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
--------------------------------------------------------------------------------
[0.07663 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_2

def test_case_2():
        none_type_0 = None
        double_linked_list_0 = module_0.DoubleLinkedList(none_type_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        double_linked_list_1 = module_0.DoubleLinkedList(none_type_0)
        assert double_linked_list_1.head is None
        assert double_linked_list_1.tail is None
        with pytest.raises(IndexError):
>           double_linked_list_1.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09976f38e0>

>   ???
E   NameError: name '_length' is not defined

queue4:80: NameError
   - [# 174] SVD queue4: 
--------------------------------------------------------------------------------
   79:         to_return = self.tail
   80:         if self._length < 1:
   81:             raise IndexError('Cannot shift from an empty list.')
   82:         
-  83:         new_tail = self.tail.prev
+  83:         new_tail = tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
--------------------------------------------------------------------------------
[0.07850 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09973b6980>

>   ???
E   NameError: name 'tail' is not defined

queue4:83: NameError
   - [# 175] SVD queue4: 
--------------------------------------------------------------------------------
   82:         
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
-  86:         self.tail = new_tail
+  86:         tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 176] SVD queue4: 
--------------------------------------------------------------------------------
   83:         new_tail = self.tail.prev
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
-  87:         self._length -= 1
+  87:         _length -= 1
   88:         if self._length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 177] SVD queue4: 
--------------------------------------------------------------------------------
   84:         if new_tail:
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
-  88:         if self._length < 1:
+  88:         if _length < 1:
   89:             self.tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
--------------------------------------------------------------------------------
[0.07630 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        node_0 = module_0.Node(dict_0, tuple_0)
        var_0 = double_linked_list_0.pop()
        assert var_0 == 189
        queue_0 = module_0.Queue(tuple_0)
>       var_1 = double_linked_list_0.shift()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f099762d870>

>   ???
E   NameError: name '_length' is not defined

queue4:88: NameError
   - [# 178] SVD queue4: 
--------------------------------------------------------------------------------
   85:             new_tail.next = None
   86:         self.tail = new_tail
   87:         self._length -= 1
   88:         if self._length < 1:
-  89:             self.tail = None
+  89:             tail = None
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 179] SVD queue4: 
--------------------------------------------------------------------------------
   90:         return to_return.data
   91:     
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
-  94:         curr = self.head
+  94:         curr = head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
--------------------------------------------------------------------------------
[0.07877 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_6

def test_case_6():
        bool_0 = True
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(bool_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        with pytest.raises(ValueError):
>           double_linked_list_0.remove(none_type_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997391d80>, val = None

>   ???
E   NameError: name 'head' is not defined

queue4:94: NameError
   - [# 180] SVD queue4: 
--------------------------------------------------------------------------------
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
-  97:                 if self._length == 1:
+  97:                 if _length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
--------------------------------------------------------------------------------
[0.07744 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997287370>
val = <queue4.DoubleLinkedList object at 0x7f0997287370>

>   ???
E   NameError: name '_length' is not defined

queue4:97: NameError
   - [# 181] SVD queue4: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
-  98:                     (self.head, self.tail) = (None, None)
+  98:                     (head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 182] SVD queue4: 
--------------------------------------------------------------------------------
   94:         curr = self.head
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
-  98:                     (self.head, self.tail) = (None, None)
+  98:                     (self.head, tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 183] SVD queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
+  99:                 elif (curr is not head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.07911 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09972861a0>
val = <queue4.DoubleLinkedList object at 0x7f09972861a0>

>   ???
E   NameError: name 'head' is not defined

queue4:99: NameError
   - [# 184] SVD queue4: 
--------------------------------------------------------------------------------
   95:         while curr:
   96:             if curr.data is val:
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
+  99:                 elif (curr is not self.head and curr is not tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
--------------------------------------------------------------------------------
[0.07894 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_11

def test_case_11():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(var_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997501030>
val = <queue4.DoubleLinkedList object at 0x7f0997501030>

>   ???
E   NameError: name 'tail' is not defined

queue4:99: NameError
   - [# 185] SVD queue4: 
--------------------------------------------------------------------------------
   97:                 if self._length == 1:
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
- 101:                 elif curr is self.head:
+ 101:                 elif curr is head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
--------------------------------------------------------------------------------
[0.07854 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_9

def test_case_9():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        none_type_0 = None
        var_0 = double_linked_list_0.push(none_type_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(double_linked_list_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f0997503be0>
val = <queue4.DoubleLinkedList object at 0x7f0997503be0>

>   ???
E   NameError: name 'head' is not defined

queue4:101: NameError
   - [# 186] SVD queue4: 
--------------------------------------------------------------------------------
   98:                     (self.head, self.tail) = (None, None)
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
- 102:                     (self.head, curr.next.prev) = (curr.next, None)
+ 102:                     (head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 187] SVD queue4: 
--------------------------------------------------------------------------------
   99:                 elif (curr is not self.head and curr is not self.tail):
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
- 103:                 elif curr is self.tail:
+ 103:                 elif curr is tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
--------------------------------------------------------------------------------
[0.08011 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_11

def test_case_11():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.push(double_linked_list_0)
        assert f'{type(double_linked_list_0.tail).__module__}.{type(double_linked_list_0.tail).__qualname__}' == 'queue4.Node'
        var_1 = double_linked_list_0.push(var_0)
>       var_2 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09970d4f40>
val = <queue4.DoubleLinkedList object at 0x7f09970d4f40>

>   ???
E   NameError: name 'tail' is not defined

queue4:103: NameError
   - [# 188] SVD queue4: 
--------------------------------------------------------------------------------
  100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)
+ 104:                     (tail, curr.prev.next) = (curr.prev, None)
  105:                 self._length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 189] SVD queue4: 
--------------------------------------------------------------------------------
  101:                 elif curr is self.head:
  102:                     (self.head, curr.next.prev) = (curr.next, None)
  103:                 elif curr is self.tail:
  104:                     (self.tail, curr.prev.next) = (curr.prev, None)
- 105:                 self._length -= 1
+ 105:                 _length -= 1
  106:                 return
  107:             curr = curr.next
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 190] SVD queue4: 
--------------------------------------------------------------------------------
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
  115:             try:
- 116:                 popped_data = self.pop()
+ 116:                 popped_data = pop()
  117:                 l.append(popped_data)
  118:             except IndexError:
  119:                 break
  120:         return l
--------------------------------------------------------------------------------
[0.06917 s] survived
   - [# 191] SVD queue4: 
--------------------------------------------------------------------------------
  133:     '''
  134:     
  135:     def __init__(self, data=None):
  136:         '''Initialize queue data structure.'''
- 137:         self._container = DoubleLinkedList(data)
+ 137:         _container = DoubleLinkedList(data)
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
  141:         self._container.append(val)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 192] SVD queue4: 
--------------------------------------------------------------------------------
  137:         self._container = DoubleLinkedList(data)
  138:     
  139:     def enqueue(self, val):
  140:         '''Add a value to the queue.'''
- 141:         self._container.append(val)
+ 141:         _container.append(val)
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
  145:         return self._container.pop()
--------------------------------------------------------------------------------
[0.07577 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.enqueue(queue_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f099720cc70>
val = <queue4.Queue object at 0x7f099720cc70>

>   ???
E   NameError: name '_container' is not defined

queue4:141: NameError
   - [# 193] SVD queue4: 
--------------------------------------------------------------------------------
  141:         self._container.append(val)
  142:     
  143:     def dequeue(self):
  144:         '''Remove a value from the front of the queue.'''
- 145:         return self._container.pop()
+ 145:         return _container.pop()
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
--------------------------------------------------------------------------------
[0.07737 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
>       var_1 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f09971fad70>

>   ???
E   NameError: name '_container' is not defined

queue4:145: NameError
   - [# 194] SVD queue4: 
--------------------------------------------------------------------------------
  146:     
  147:     def peek(self):
  148:         '''Return the next value in the queue without dequing it.'''
  149:         try:
- 150:             return self._container.head.data
+ 150:             return _container.head.data
  151:         except AttributeError:
  152:             return None
  153:     
  154:     def size(self):
--------------------------------------------------------------------------------
[0.07179 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_0

def test_case_0():
        queue_0 = module_0.Queue()
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
>       var_0 = queue_0.peek()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f09977077c0>

>   ???
E   NameError: name '_container' is not defined

queue4:150: NameError
   - [# 195] SVD queue4: 
--------------------------------------------------------------------------------
  152:             return None
  153:     
  154:     def size(self):
  155:         '''Return the size of the queue.'''
- 156:         return self._container._length
+ 156:         return _container._length
--------------------------------------------------------------------------------
[0.07646 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_5

def test_case_5():
        bool_0 = False
        queue_0 = module_0.Queue(bool_0)
        assert f'{type(queue_0).__module__}.{type(queue_0).__qualname__}' == 'queue4.Queue'
        var_0 = queue_0.enqueue(queue_0)
        var_1 = queue_0.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue4.Queue'
>       var_2 = queue_0.size()

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.Queue object at 0x7f09973b8160>

>   ???
E   NameError: name '_container' is not defined

queue4:156: NameError
   - [# 196] ZIL queue4: 
--------------------------------------------------------------------------------
   33:         self.tail = None
   34:         self._length = 0
   35:         try:
   36:             for val in data:
-  37:                 self.push(val)
+  37:                 break
   38:         except TypeError:
   39:             if data:
   40:                 self.push(data)
   41:     
--------------------------------------------------------------------------------
[0.07702 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_7

def test_case_7():
        tuple_0 = ()
        bytes_0 = b'\xe8\xd6\x1f\xb2\xa07\xcfn1=J\xbd'
        dict_0 = {bytes_0: tuple_0, bytes_0: bytes_0}
        double_linked_list_0 = module_0.DoubleLinkedList(bytes_0)
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
>       assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:75: AssertionError
   - [# 197] ZIL queue4: 
--------------------------------------------------------------------------------
   92:     def remove(self, val):
   93:         '''Remove first occurance of val from list.'''
   94:         curr = self.head
   95:         while curr:
-  96:             if curr.data is val:
-  97:                 if self._length == 1:
-  98:                     (self.head, self.tail) = (None, None)
-  99:                 elif (curr is not self.head and curr is not self.tail):
- 100:                     (curr.next.prev, curr.prev.next) = (curr.prev, curr.next)
- 101:                 elif curr is self.head:
- 102:                     (self.head, curr.next.prev) = (curr.next, None)
- 103:                 elif curr is self.tail:
- 104:                     (self.tail, curr.prev.next) = (curr.prev, None)
- 105:                 self._length -= 1
- 106:                 return
- 107:             curr = curr.next
+  96:             break
+  97:         
+  98:         
+  99:         
+ 100:         
+ 101:         
+ 102:         
+ 103:         
+ 104:         
+ 105:         
+ 106:         
+ 107:         
  108:         
  109:         raise ValueError('{} is not in the list'.format(val))
  110:     
  111:     def _repr(self):
--------------------------------------------------------------------------------
[0.09854 s] killed by MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py::test_case_8

def test_case_8():
        double_linked_list_0 = module_0.DoubleLinkedList()
        assert f'{type(double_linked_list_0).__module__}.{type(double_linked_list_0).__qualname__}' == 'queue4.DoubleLinkedList'
        assert double_linked_list_0.head is None
        assert double_linked_list_0.tail is None
        var_0 = double_linked_list_0.append(double_linked_list_0)
        assert f'{type(double_linked_list_0.head).__module__}.{type(double_linked_list_0.head).__qualname__}' == 'queue4.Node'
>       var_1 = double_linked_list_0.remove(double_linked_list_0)

MIO-WHOLE_SUITE/test_queue4_WHOLE_SUITE.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue4.DoubleLinkedList object at 0x7f09973035e0>
val = <queue4.DoubleLinkedList object at 0x7f09973035e0>

>   ???
E   ValueError: <queue4.DoubleLinkedList object at 0x7f09973035e0> is not in the list

queue4:109: ValueError
   - [# 198] ZIL queue4: 
--------------------------------------------------------------------------------
  111:     def _repr(self):
  112:         '''Return list representation of dll.'''
  113:         l = []
  114:         while True:
- 115:             try:
- 116:                 popped_data = self.pop()
- 117:                 l.append(popped_data)
- 118:             except IndexError:
- 119:                 break
+ 115:             break
+ 116:         
+ 117:         
+ 118:         
+ 119:         
  120:         return l
  121: 
  122: 
  123: class Queue(object):
--------------------------------------------------------------------------------
[0.06903 s] survived
[*] Mutation score [31.20361 s]: 74.5%
   - all: 198
   - killed: 119 (60.1%)
   - survived: 41 (20.7%)
   - incompetent: 37 (18.7%)
   - timeout: 1 (0.5%)
