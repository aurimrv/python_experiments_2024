# Automatically generated by Pynguin.
import pytest
import sort1 as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "b<-8."
    sort_0 = module_0.Sort()
    sort_0.selection_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'cNXD6"(t1a{i+ISu}='
    sort_0 = module_0.Sort()
    sort_0.insertion_sort(str_0)


def test_case_2():
    sort_0 = module_0.Sort()


def test_case_3():
    sort_0 = module_0.Sort()
    sort_1 = module_0.Sort()
    sort_2 = module_0.Sort()


@pytest.mark.xfail(strict=True)
def test_case_4():
    dict_0 = {}
    sort_0 = module_0.Sort(**dict_0)
    var_0 = sort_0.merge(dict_0, dict_0)
    sort_1 = module_0.Sort(**dict_0)
    var_1 = sort_1.selection_sort(dict_0)
    var_2 = sort_1.insertion_sort(var_1)
    sort_2 = module_0.Sort(**var_1)
    var_1.partition(sort_2, var_1, var_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '8;"aI\nND{uTP$*,'
    sort_0 = module_0.Sort()
    var_0 = sort_0.merge_sort(str_0)
    sort_1 = module_0.Sort()
    sort_1.merge(var_0, sort_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    sort_0 = module_0.Sort()
    bool_1 = True
    bool_2 = False
    var_0 = sort_0.quick_sort(bool_0, bool_1, bool_2)
    int_0 = -2733
    bool_3 = True
    sort_1 = module_0.Sort()
    sort_1.partition(int_0, int_0, bool_3)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    int_0 = 17
    sort_0 = module_0.Sort()
    sort_0.quick_sort(int_0, bool_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    sort_0 = module_0.Sort()
    int_0 = -2733
    bool_0 = True
    sort_1 = module_0.Sort()
    sort_1.partition(int_0, int_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    object_0 = module_1.object()
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    dict_0 = {}
    sort_0 = module_0.Sort()
    var_0 = sort_0.insertion_sort(list_0)
    var_1 = sort_0.merge_sort(var_0)
    var_1.merge_sort(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    bool_0 = False
    sort_0 = module_0.Sort()
    sort_1 = module_0.Sort()
    sort_0.partition(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = "qW)*R"
    list_0 = []
    sort_0 = module_0.Sort()
    var_0 = sort_0.merge(str_0, list_0)
    var_1 = sort_0.insertion_sort(var_0)
    bytes_0 = b"W\xe4)+\x026A\xa6u\x14J\x86k\xdc"
    module_0.Sort(*bytes_0)
