2023-03-06 00:07:05,062: Running clean trial
============================= test session starts ==============================
platform linux -- Python 3.10.10, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/auri/temp/lucca/python_experiments/sort1
collected 42 items

DYNAMOSA-MIO-MOSA/test_sort1_DYNAMOSA.py ...............                 [ 35%]
DYNAMOSA-MIO-MOSA/test_sort1_MIO.py ..................                   [ 78%]
DYNAMOSA-MIO-MOSA/test_sort1_MOSA.py .........                           [100%]

============================== 42 passed in 0.06s ==============================
2023-03-06 00:07:05,298: [92m32 mutation targets found in sort1.py AST.[0m
2023-03-06 00:07:05,298: Setting random.seed to: None
2023-03-06 00:07:05,299: Coverage file does not exist, proceeding to sample from all targets.
2023-03-06 00:07:05,299: Total sample space size: 32
2023-03-06 00:07:05,299: [92mSelecting 10 locations from 32 potentials.[0m
2023-03-06 00:07:05,299: Starting individual mutation trials!
2023-03-06 00:07:05,299: Running serial (single processor) dispatch mode.
2023-03-06 00:07:05,299: Current target location: sort1.py, LocIndex(ast_class='If', lineno=82, col_offset=8, op_type='If_Statement', end_lineno=86, end_col_offset=45)
2023-03-06 00:07:05,573: [92mResult: Detected at sort1.py: (82, 8)[0m
2023-03-06 00:07:05,810: [91mResult: Survived at sort1.py: (82, 8)[0m
2023-03-06 00:07:05,810: Current target location: sort1.py, LocIndex(ast_class='Compare', lineno=64, col_offset=15, op_type=<class 'ast.LtE'>, end_lineno=64, end_col_offset=55)
2023-03-06 00:07:06,046: [91mResult: Survived at sort1.py: (64, 15)[0m
2023-03-06 00:07:06,283: [91mResult: Survived at sort1.py: (64, 15)[0m
2023-03-06 00:07:06,519: [91mResult: Survived at sort1.py: (64, 15)[0m
2023-03-06 00:07:06,754: [91mResult: Survived at sort1.py: (64, 15)[0m
2023-03-06 00:07:06,981: [91mResult: Survived at sort1.py: (64, 15)[0m
2023-03-06 00:07:06,981: Current target location: sort1.py, LocIndex(ast_class='Compare', lineno=47, col_offset=11, op_type=<class 'ast.LtE'>, end_lineno=47, end_col_offset=20)
2023-03-06 00:07:07,243: [92mResult: Detected at sort1.py: (47, 11)[0m
2023-03-06 00:07:07,506: [92mResult: Detected at sort1.py: (47, 11)[0m
2023-03-06 00:07:07,731: [91mResult: Survived at sort1.py: (47, 11)[0m
2023-03-06 00:07:08,021: [92mResult: Detected at sort1.py: (47, 11)[0m
2023-03-06 00:07:08,276: [92mResult: Detected at sort1.py: (47, 11)[0m
2023-03-06 00:07:08,276: Current target location: sort1.py, LocIndex(ast_class='SliceUS', lineno=50, col_offset=38, op_type='Slice_UnboundUpper', end_lineno=50, end_col_offset=48)
2023-03-06 00:07:08,562: [92mResult: Detected at sort1.py: (50, 38)[0m
2023-03-06 00:07:08,791: [91mResult: Survived at sort1.py: (50, 38)[0m
2023-03-06 00:07:08,791: Current target location: sort1.py, LocIndex(ast_class='If', lineno=17, col_offset=16, op_type='If_Statement', end_lineno=18, end_col_offset=31)
2023-03-06 00:07:09,017: [91mResult: Survived at sort1.py: (17, 16)[0m
2023-03-06 00:07:09,243: [91mResult: Survived at sort1.py: (17, 16)[0m
2023-03-06 00:07:09,243: Current target location: sort1.py, LocIndex(ast_class='BinOp', lineno=33, col_offset=31, op_type=<class 'ast.Sub'>, end_lineno=33, end_col_offset=36)
2023-03-06 00:07:09,475: [91mResult: Survived at sort1.py: (33, 31)[0m
2023-03-06 00:07:09,736: [92mResult: Detected at sort1.py: (33, 31)[0m
2023-03-06 00:07:09,972: [91mResult: Survived at sort1.py: (33, 31)[0m
2023-03-06 00:07:10,240: [92mResult: Detected at sort1.py: (33, 31)[0m
2023-03-06 00:07:10,476: [91mResult: Survived at sort1.py: (33, 31)[0m
2023-03-06 00:07:10,699: [91mResult: Survived at sort1.py: (33, 31)[0m
2023-03-06 00:07:10,699: Current target location: sort1.py, LocIndex(ast_class='If', lineno=92, col_offset=12, op_type='If_Statement', end_lineno=94, end_col_offset=26)
2023-03-06 00:07:10,931: [91mResult: Survived at sort1.py: (92, 12)[0m
2023-03-06 00:07:11,182: [91mResult: Survived at sort1.py: (92, 12)[0m
2023-03-06 00:07:11,182: Current target location: sort1.py, LocIndex(ast_class='Compare', lineno=62, col_offset=14, op_type=<class 'ast.Lt'>, end_lineno=62, end_col_offset=37)
2023-03-06 00:07:11,471: [92mResult: Detected at sort1.py: (62, 14)[0m
2023-03-06 00:07:11,729: [92mResult: Detected at sort1.py: (62, 14)[0m
2023-03-06 00:07:11,966: [91mResult: Survived at sort1.py: (62, 14)[0m
2023-03-06 00:07:12,224: [92mResult: Detected at sort1.py: (62, 14)[0m
2023-03-06 00:07:12,449: [91mResult: Survived at sort1.py: (62, 14)[0m
2023-03-06 00:07:12,449: Current target location: sort1.py, LocIndex(ast_class='SliceUS', lineno=72, col_offset=23, op_type='Slice_UnboundUpper', end_lineno=72, end_col_offset=41)
2023-03-06 00:07:12,682: [91mResult: Survived at sort1.py: (72, 23)[0m
2023-03-06 00:07:12,907: [91mResult: Survived at sort1.py: (72, 23)[0m
2023-03-06 00:07:12,907: Current target location: sort1.py, LocIndex(ast_class='BinOp', lineno=85, col_offset=40, op_type=<class 'ast.Sub'>, end_lineno=85, end_col_offset=45)
2023-03-06 00:07:13,133: [91mResult: Survived at sort1.py: (85, 40)[0m
2023-03-06 00:07:13,359: [91mResult: Survived at sort1.py: (85, 40)[0m
2023-03-06 00:07:13,589: [91mResult: Survived at sort1.py: (85, 40)[0m
2023-03-06 00:07:13,816: [91mResult: Survived at sort1.py: (85, 40)[0m
2023-03-06 00:07:14,040: [91mResult: Survived at sort1.py: (85, 40)[0m
2023-03-06 00:07:14,294: [92mResult: Detected at sort1.py: (85, 40)[0m
2023-03-06 00:07:14,294: Running clean trial
============================= test session starts ==============================
platform linux -- Python 3.10.10, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/auri/temp/lucca/python_experiments/sort1
collected 42 items

DYNAMOSA-MIO-MOSA/test_sort1_DYNAMOSA.py ...............                 [ 35%]
DYNAMOSA-MIO-MOSA/test_sort1_MIO.py ..................                   [ 78%]
DYNAMOSA-MIO-MOSA/test_sort1_MOSA.py .........                           [100%]

============================== 42 passed in 0.05s ==============================
2023-03-06 00:07:14,513: CLI Report:

Mutatest diagnostic summary
===========================
 - Source location: /home/auri/temp/lucca/python_experiments/sort1/sort1.py
 - Test commands: ['python', '-m', 'pytest', './DYNAMOSA-MIO-MOSA']
 - Mode: f
 - Excluded files: []
 - N locations input: 10
 - Random seed: None

Random sample details
---------------------
 - Total locations mutated: 10
 - Total locations identified: 32
 - Location sample coverage: 31.25 %


Running time details
--------------------
 - Clean trial 1 run time: 0:00:00.233672
 - Clean trial 2 run time: 0:00:00.218385
 - Mutation trials total run time: 0:00:08.998019

2023-03-06 00:07:14,513: Trial Summary Report:

Overall mutation trial summary
==============================
 - DETECTED: 12
 - SURVIVED: 25
 - TOTAL RUNS: 37
 - RUN DATETIME: 2023-03-06 00:07:14.513233

2023-03-06 00:07:14,513: Detected mutations:[92m

DETECTED
--------
 - sort1.py: (l: 33, c: 31) - mutation from <class 'ast.Sub'> to <class 'ast.Add'>
 - sort1.py: (l: 33, c: 31) - mutation from <class 'ast.Sub'> to <class 'ast.Div'>
 - sort1.py: (l: 47, c: 11) - mutation from <class 'ast.LtE'> to <class 'ast.GtE'>
 - sort1.py: (l: 47, c: 11) - mutation from <class 'ast.LtE'> to <class 'ast.Gt'>
 - sort1.py: (l: 47, c: 11) - mutation from <class 'ast.LtE'> to <class 'ast.Lt'>
 - sort1.py: (l: 47, c: 11) - mutation from <class 'ast.LtE'> to <class 'ast.Eq'>
 - sort1.py: (l: 50, c: 38) - mutation from Slice_UnboundUpper to Slice_Unbounded
 - sort1.py: (l: 62, c: 14) - mutation from <class 'ast.Lt'> to <class 'ast.LtE'>
 - sort1.py: (l: 62, c: 14) - mutation from <class 'ast.Lt'> to <class 'ast.Eq'>
 - sort1.py: (l: 62, c: 14) - mutation from <class 'ast.Lt'> to <class 'ast.GtE'>
 - sort1.py: (l: 82, c: 8) - mutation from If_Statement to If_True
 - sort1.py: (l: 85, c: 40) - mutation from <class 'ast.Sub'> to <class 'ast.Add'>[0m

2023-03-06 00:07:14,513: Timedout mutations:

2023-03-06 00:07:14,513: Surviving mutations:[91m

SURVIVED
--------
 - sort1.py: (l: 17, c: 16) - mutation from If_Statement to If_False
 - sort1.py: (l: 17, c: 16) - mutation from If_Statement to If_True
 - sort1.py: (l: 33, c: 31) - mutation from <class 'ast.Sub'> to <class 'ast.FloorDiv'>
 - sort1.py: (l: 33, c: 31) - mutation from <class 'ast.Sub'> to <class 'ast.Mod'>
 - sort1.py: (l: 33, c: 31) - mutation from <class 'ast.Sub'> to <class 'ast.Pow'>
 - sort1.py: (l: 33, c: 31) - mutation from <class 'ast.Sub'> to <class 'ast.Mult'>
 - sort1.py: (l: 47, c: 11) - mutation from <class 'ast.LtE'> to <class 'ast.NotEq'>
 - sort1.py: (l: 50, c: 38) - mutation from Slice_UnboundUpper to Slice_UnboundLower
 - sort1.py: (l: 62, c: 14) - mutation from <class 'ast.Lt'> to <class 'ast.NotEq'>
 - sort1.py: (l: 62, c: 14) - mutation from <class 'ast.Lt'> to <class 'ast.Gt'>
 - sort1.py: (l: 64, c: 15) - mutation from <class 'ast.LtE'> to <class 'ast.Eq'>
 - sort1.py: (l: 64, c: 15) - mutation from <class 'ast.LtE'> to <class 'ast.GtE'>
 - sort1.py: (l: 64, c: 15) - mutation from <class 'ast.LtE'> to <class 'ast.Gt'>
 - sort1.py: (l: 64, c: 15) - mutation from <class 'ast.LtE'> to <class 'ast.Lt'>
 - sort1.py: (l: 64, c: 15) - mutation from <class 'ast.LtE'> to <class 'ast.NotEq'>
 - sort1.py: (l: 72, c: 23) - mutation from Slice_UnboundUpper to Slice_UnboundLower
 - sort1.py: (l: 72, c: 23) - mutation from Slice_UnboundUpper to Slice_Unbounded
 - sort1.py: (l: 82, c: 8) - mutation from If_Statement to If_False
 - sort1.py: (l: 85, c: 40) - mutation from <class 'ast.Sub'> to <class 'ast.Mult'>
 - sort1.py: (l: 85, c: 40) - mutation from <class 'ast.Sub'> to <class 'ast.Pow'>
 - sort1.py: (l: 85, c: 40) - mutation from <class 'ast.Sub'> to <class 'ast.Mod'>
 - sort1.py: (l: 85, c: 40) - mutation from <class 'ast.Sub'> to <class 'ast.Div'>
 - sort1.py: (l: 85, c: 40) - mutation from <class 'ast.Sub'> to <class 'ast.FloorDiv'>
 - sort1.py: (l: 92, c: 12) - mutation from If_Statement to If_True
 - sort1.py: (l: 92, c: 12) - mutation from If_Statement to If_False[0m

2023-03-06 00:07:14,513: Writing output report to: /home/auri/temp/lucca/python_experiments/sort1/DYNAMOSA-MIO-MOSA/mutatest/DYNAMOSA-MIO-MOSA-report.rst
