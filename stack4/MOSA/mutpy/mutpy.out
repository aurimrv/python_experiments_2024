[34m[*][0m Start mutation process:
[36m   -[0m targets: stack4.py
[36m   -[0m tests: ./MOSA
[34m[*][0m 17 tests passed:
[36m   -[0m test_stack4_MOSA [0.27921 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOD stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:2] + ')'[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.17850 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#   2] AOR stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
[34m-  84:             display += str(curr.data) + ', '[0m
[32m+  84:             display += str(curr.data) - ', '[0m
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.17436 s] [36mincompetent[0m

TypeError: stack4:84: TypeError: unsupported operand type(s) for -: 'str' and 'str'

[36m   -[0m [#   3] AOR stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:+2] + ')'[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.17779 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#   4] AOR stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:-2] - ')'[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.15986 s] [36mincompetent[0m

TypeError: stack4:86: TypeError: unsupported operand type(s) for -: 'str' and 'str'

[36m   -[0m [#   5] ASR stack4: 
--------------------------------------------------------------------------------
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
[34m-  44:         self._length += 1[0m
[32m+  44:         self._length -= 1[0m
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
--------------------------------------------------------------------------------
[0.15676 s] [31msurvived[0m
[36m   -[0m [#   6] ASR stack4: 
--------------------------------------------------------------------------------
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
[34m-  52:         self._length -= 1[0m
[32m+  52:         self._length += 1[0m
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
--------------------------------------------------------------------------------
[0.14045 s] [31msurvived[0m
[36m   -[0m [#   7] ASR stack4: 
--------------------------------------------------------------------------------
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
[34m-  72:             self._length -= 1[0m
[32m+  72:             self._length += 1[0m
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
--------------------------------------------------------------------------------
[0.15835 s] [31msurvived[0m
[36m   -[0m [#   8] ASR stack4: 
--------------------------------------------------------------------------------
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
[34m-  76:                 self._length -= 1[0m
[32m+  76:                 self._length += 1[0m
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
--------------------------------------------------------------------------------
[0.15153 s] [31msurvived[0m
[36m   -[0m [#   9] ASR stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
[34m-  84:             display += str(curr.data) + ', '[0m
[32m+  84:             display -= str(curr.data) + ', '[0m
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.15725 s] [36mincompetent[0m

TypeError: stack4:84: TypeError: unsupported operand type(s) for -=: 'str' and 'str'

[36m   -[0m [#  10] CDI stack4: 
--------------------------------------------------------------------------------
    5: 
    6:     Data attribute for data storage and Next for pointer to next node.
    7:     '''
    8:     
[34m-   9:     def __init__(self, data, next_node=None):[0m
[34m-  10:         '''Attribute data and next_node.'''[0m
[34m-  11:         self.data = data[0m
[34m-  12:         self.next = next_node[0m
[34m-  13: [0m
[32m+   9:     @classmethod[0m
[32m+  10:     def __init__(self, data, next_node=None):[0m
[32m+  11:         '''Attribute data and next_node.'''[0m
[32m+  12:         self.data = data[0m
[32m+  13:         self.next = next_node[0m
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
   17: 
--------------------------------------------------------------------------------
[5.00795 s] [33mtimeout[0m
[36m   -[0m [#  11] CDI stack4: 
--------------------------------------------------------------------------------
   25:     display() - will return a unicode string representing the list as
   26:     if it were a Python tuple literal: "(12, \'sam\', 37, \'tango\')"
   27:     '''
   28:     
[34m-  29:     def __init__(self, data=None):[0m
[34m-  30:         '''Linked list initialized with head.'''[0m
[34m-  31:         self._length = 0[0m
[34m-  32:         self.head = None[0m
[34m-  33:         try:[0m
[34m-  34:             for val in data:[0m
[34m-  35:                 self.push(val)[0m
[34m-  36:         except TypeError:[0m
[34m-  37:             if data:[0m
[34m-  38:                 self.push(data)[0m
[34m-  39:     [0m
[32m+  29:     @classmethod[0m
[32m+  30:     def __init__(self, data=None):[0m
[32m+  31:         '''Linked list initialized with head.'''[0m
[32m+  32:         self._length = 0[0m
[32m+  33:         self.head = None[0m
[32m+  34:         try:[0m
[32m+  35:             for val in data:[0m
[32m+  36:                 self.push(val)[0m
[32m+  37:         except TypeError:[0m
[32m+  38:             if data:[0m
[32m+  39:                 self.push(data)[0m
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
--------------------------------------------------------------------------------
[0.17979 s] [36mincompetent[0m

TypeError: stack4:39: TypeError: LinkedList.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  12] CDI stack4: 
--------------------------------------------------------------------------------
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
[34m-  40:     def push(self, val):[0m
[34m-  41:         '''Insert a value at the head of the list.'''[0m
[34m-  42:         old_head = self.head[0m
[34m-  43:         self.head = Node(val, old_head)[0m
[34m-  44:         self._length += 1[0m
[34m-  45:     [0m
[32m+  40:     @classmethod[0m
[32m+  41:     def push(self, val):[0m
[32m+  42:         '''Insert a value at the head of the list.'''[0m
[32m+  43:         old_head = self.head[0m
[32m+  44:         self.head = Node(val, old_head)[0m
[32m+  45:         self._length += 1[0m
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
--------------------------------------------------------------------------------
[0.22231 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>, val = '/'

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:43: AttributeError
[36m   -[0m [#  13] CDI stack4: 
--------------------------------------------------------------------------------
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
[34m-  46:     def pop(self):[0m
[34m-  47:         '''Remove the first value and return it.'''[0m
[34m-  48:         if not (self.head):[0m
[34m-  49:             raise IndexError('Cannot pop from an empty list')[0m
[34m-  50:         to_return = self.head[0m
[34m-  51:         self.head = self.head.next[0m
[34m-  52:         self._length -= 1[0m
[34m-  53:         return to_return.data[0m
[34m-  54:     [0m
[32m+  46:     @classmethod[0m
[32m+  47:     def pop(self):[0m
[32m+  48:         '''Remove the first value and return it.'''[0m
[32m+  49:         if not (self.head):[0m
[32m+  50:             raise IndexError('Cannot pop from an empty list')[0m
[32m+  51:         to_return = self.head[0m
[32m+  52:         self.head = self.head.next[0m
[32m+  53:         self._length -= 1[0m
[32m+  54:         return to_return.data[0m
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
--------------------------------------------------------------------------------
[0.20659 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:49: AttributeError
[36m   -[0m [#  14] CDI stack4: 
--------------------------------------------------------------------------------
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
[34m-  55:     def size(self):[0m
[34m-  56:         '''Return the length of the list.'''[0m
[34m-  57:         return self._length[0m
[34m-  58:     [0m
[32m+  55:     @classmethod[0m
[32m+  56:     def size(self):[0m
[32m+  57:         '''Return the length of the list.'''[0m
[32m+  58:         return self._length[0m
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
--------------------------------------------------------------------------------
[0.18002 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_12

def test_case_12():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.remove(linked_list_0)
>       var_1 = linked_list_0.size()

MOSA/test_stack4_MOSA.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute '_length'

stack4:58: AttributeError
[36m   -[0m [#  15] CDI stack4: 
--------------------------------------------------------------------------------
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
[34m-  59:     def search(self, val):[0m
[34m-  60:         '''Return the node containing val.'''[0m
[34m-  61:         curr = self.head[0m
[34m-  62:         while curr:[0m
[34m-  63:             if curr.data == val:[0m
[34m-  64:                 return curr[0m
[34m-  65:             curr = curr.next[0m
[34m-  66:     [0m
[32m+  59:     @classmethod[0m
[32m+  60:     def search(self, val):[0m
[32m+  61:         '''Return the node containing val.'''[0m
[32m+  62:         curr = self.head[0m
[32m+  63:         while curr:[0m
[32m+  64:             if curr.data == val:[0m
[32m+  65:                 return curr[0m
[32m+  66:             curr = curr.next[0m
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
--------------------------------------------------------------------------------
[0.17891 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_5

def test_case_5():
        none_type_0 = None
        node_0 = module_0.Node(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
        assert var_0 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_1 = module_0.Node(var_0)
        assert node_1.data == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        linked_list_1 = module_0.LinkedList(var_0)
        assert f'{type(linked_list_1.head).__module__}.{type(linked_list_1.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_1.remove(var_0)
        var_2 = linked_list_1.push(var_1)
        var_3 = linked_list_1.remove(node_1)
        bool_0 = False
>       var_4 = linked_list_1.search(bool_0)

MOSA/test_stack4_MOSA.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>, val = False

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:62: AttributeError
[36m   -[0m [#  16] CDI stack4: 
--------------------------------------------------------------------------------
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
   66:     
[34m-  67:     def remove(self, val):[0m
[34m-  68:         '''Remove node from list if exists.'''[0m
[34m-  69:         curr = self.head[0m
[34m-  70:         if (curr and val is self.head.data):[0m
[34m-  71:             self.head = self.head.next[0m
[34m-  72:             self._length -= 1[0m
[34m-  73:         while curr:[0m
[34m-  74:             if (curr.next and curr.next.data == val):[0m
[34m-  75:                 curr.next = curr.next.next[0m
[34m-  76:                 self._length -= 1[0m
[34m-  77:             curr = curr.next[0m
[34m-  78:     [0m
[32m+  67:     @classmethod[0m
[32m+  68:     def remove(self, val):[0m
[32m+  69:         '''Remove node from list if exists.'''[0m
[32m+  70:         curr = self.head[0m
[32m+  71:         if (curr and val is self.head.data):[0m
[32m+  72:             self.head = self.head.next[0m
[32m+  73:             self._length -= 1[0m
[32m+  74:         while curr:[0m
[32m+  75:             if (curr.next and curr.next.data == val):[0m
[32m+  76:                 curr.next = curr.next.next[0m
[32m+  77:                 self._length -= 1[0m
[32m+  78:             curr = curr.next[0m
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
--------------------------------------------------------------------------------
[0.16056 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
>       var_2 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>, val = None

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:70: AttributeError
[36m   -[0m [#  17] CDI stack4: 
--------------------------------------------------------------------------------
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
[34m-  79:     def display(self):[0m
[34m-  80:         '''Display list as a tuple.'''[0m
[34m-  81:         curr = self.head[0m
[34m-  82:         display = '('[0m
[34m-  83:         while curr:[0m
[34m-  84:             display += str(curr.data) + ', '[0m
[34m-  85:             curr = curr.next[0m
[34m-  86:         return display[:-2] + ')'[0m
[34m-  87: [0m
[32m+  79:     @classmethod[0m
[32m+  80:     def display(self):[0m
[32m+  81:         '''Display list as a tuple.'''[0m
[32m+  82:         curr = self.head[0m
[32m+  83:         display = '('[0m
[32m+  84:         while curr:[0m
[32m+  85:             display += str(curr.data) + ', '[0m
[32m+  86:             curr = curr.next[0m
[32m+  87:         return display[:-2] + ')'[0m
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
   91: 
--------------------------------------------------------------------------------
[0.16057 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MOSA/test_stack4_MOSA.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:82: AttributeError
[36m   -[0m [#  18] CDI stack4: 
--------------------------------------------------------------------------------
   97:     If the stack is empty, attempts to call pop should raise an exception.
   98: 
   99:     '''
  100:     
[34m- 101:     def __init__(self, data=None):[0m
[34m- 102:         '''Initialization.'''[0m
[34m- 103:         self._stack = LinkedList(data)[0m
[34m- 104:     [0m
[32m+ 101:     @classmethod[0m
[32m+ 102:     def __init__(self, data=None):[0m
[32m+ 103:         '''Initialization.'''[0m
[32m+ 104:         self._stack = LinkedList(data)[0m
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
--------------------------------------------------------------------------------
[0.16002 s] [31msurvived[0m
[36m   -[0m [#  19] CDI stack4: 
--------------------------------------------------------------------------------
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
  103:         self._stack = LinkedList(data)
  104:     
[34m- 105:     def push(self, val):[0m
[34m- 106:         '''Add val to the stack.'''[0m
[34m- 107:         self._stack.push(val)[0m
[34m- 108:     [0m
[32m+ 105:     @classmethod[0m
[32m+ 106:     def push(self, val):[0m
[32m+ 107:         '''Add val to the stack.'''[0m
[32m+ 108:         self._stack.push(val)[0m
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.15821 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
        stack_0 = module_0.Stack(str_0)
>       var_0 = stack_0.push(bool_0)

MOSA/test_stack4_MOSA.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.Stack'>, val = False

>   ???
E   AttributeError: type object 'Stack' has no attribute '_stack'

stack4:108: AttributeError
[36m   -[0m [#  20] CDI stack4: 
--------------------------------------------------------------------------------
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
[34m- 109:     def pop(self):[0m
[34m- 110:         '''Remove item off the stack.'''[0m
[34m- 111:         self._stack.pop()[0m
[32m+ 109:     @classmethod[0m
[32m+ 110:     def pop(self):[0m
[32m+ 111:         '''Remove item off the stack.'''[0m
[32m+ 112:         self._stack.pop()[0m
--------------------------------------------------------------------------------
[0.14042 s] [31msurvived[0m
[36m   -[0m [#  21] COD stack4: 
--------------------------------------------------------------------------------
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
[34m-  48:         if not (self.head):[0m
[32m+  48:         if self.head:[0m
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
--------------------------------------------------------------------------------
[0.17808 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4481e7c10>

>   ???
E   IndexError: Cannot pop from an empty list

stack4:49: IndexError
[36m   -[0m [#  22] COI stack4: 
--------------------------------------------------------------------------------
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
[34m-  37:             if data:[0m
[32m+  37:             if not data:[0m
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
--------------------------------------------------------------------------------
[0.16846 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
        stack_0 = module_0.Stack(str_0)
        var_0 = stack_0.push(bool_0)
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
>       assert linked_list_0.head is None
E       AssertionError

MOSA/test_stack4_MOSA.py:12: AssertionError
[36m   -[0m [#  23] COI stack4: 
--------------------------------------------------------------------------------
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
[34m-  48:         if not (self.head):[0m
[32m+  48:         if not ((not (self.head))):[0m
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
--------------------------------------------------------------------------------
[0.17898 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448175450>

>   ???
E   IndexError: Cannot pop from an empty list

stack4:49: IndexError
[36m   -[0m [#  24] COI stack4: 
--------------------------------------------------------------------------------
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
[34m-  62:         while curr:[0m
[32m+  62:         while not curr:[0m
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
   66:     
--------------------------------------------------------------------------------
[0.18142 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        bool_0 = False
        var_0 = linked_list_0.push(bool_0)
        var_1 = linked_list_0.search(bool_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:80: AssertionError
[36m   -[0m [#  25] COI stack4: 
--------------------------------------------------------------------------------
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
[34m-  63:             if curr.data == val:[0m
[32m+  63:             if not (curr.data == val):[0m
   64:                 return curr
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
--------------------------------------------------------------------------------
[0.23449 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        bool_0 = False
        var_0 = linked_list_0.push(bool_0)
        var_1 = linked_list_0.search(bool_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:80: AssertionError
[36m   -[0m [#  26] COI stack4: 
--------------------------------------------------------------------------------
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
[34m-  70:         if (curr and val is self.head.data):[0m
[32m+  70:         if not ((curr and val is self.head.data)):[0m
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
--------------------------------------------------------------------------------
[0.21638 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
        var_3 = linked_list_0.pop()
>       assert var_3 == '+'
E       AssertionError

MOSA/test_stack4_MOSA.py:41: AssertionError
[36m   -[0m [#  27] COI stack4: 
--------------------------------------------------------------------------------
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
[34m-  73:         while curr:[0m
[32m+  73:         while not curr:[0m
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
--------------------------------------------------------------------------------
[0.18425 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_7

def test_case_7():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
>       var_0 = linked_list_0.remove(linked_list_0)

MOSA/test_stack4_MOSA.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448010940>
val = <stack4.LinkedList object at 0x7fc448010940>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

stack4:74: AttributeError
[36m   -[0m [#  28] COI stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
[34m-  74:             if (curr.next and curr.next.data == val):[0m
[32m+  74:             if not ((curr.next and curr.next.data == val)):[0m
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
--------------------------------------------------------------------------------
[0.16048 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
>       var_2 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448090430>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

stack4:75: AttributeError
[36m   -[0m [#  29] COI stack4: 
--------------------------------------------------------------------------------
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
[34m-  83:         while curr:[0m
[32m+  83:         while not curr:[0m
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
--------------------------------------------------------------------------------
[0.18036 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  30] CRP stack4: 
--------------------------------------------------------------------------------
   27:     '''
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
[34m-  31:         self._length = 0[0m
[32m+  31:         self._length = 1[0m
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
--------------------------------------------------------------------------------
[0.19459 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_12

def test_case_12():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.remove(linked_list_0)
        var_1 = linked_list_0.size()
>       assert var_1 == 0
E       AssertionError

MOSA/test_stack4_MOSA.py:131: AssertionError
[36m   -[0m [#  31] CRP stack4: 
--------------------------------------------------------------------------------
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
[34m-  44:         self._length += 1[0m
[32m+  44:         self._length += 2[0m
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
--------------------------------------------------------------------------------
[0.15758 s] [31msurvived[0m
[36m   -[0m [#  32] CRP stack4: 
--------------------------------------------------------------------------------
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
[34m-  49:             raise IndexError('Cannot pop from an empty list')[0m
[32m+  49:             raise IndexError('mutpy')[0m
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
--------------------------------------------------------------------------------
[0.15157 s] [31msurvived[0m
[36m   -[0m [#  33] CRP stack4: 
--------------------------------------------------------------------------------
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
[34m-  49:             raise IndexError('Cannot pop from an empty list')[0m
[32m+  49:             raise IndexError('')[0m
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
--------------------------------------------------------------------------------
[0.15746 s] [31msurvived[0m
[36m   -[0m [#  34] CRP stack4: 
--------------------------------------------------------------------------------
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
[34m-  52:         self._length -= 1[0m
[32m+  52:         self._length -= 2[0m
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
--------------------------------------------------------------------------------
[0.15374 s] [31msurvived[0m
[36m   -[0m [#  35] CRP stack4: 
--------------------------------------------------------------------------------
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
[34m-  72:             self._length -= 1[0m
[32m+  72:             self._length -= 2[0m
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
--------------------------------------------------------------------------------
[0.15882 s] [31msurvived[0m
[36m   -[0m [#  36] CRP stack4: 
--------------------------------------------------------------------------------
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
[34m-  76:                 self._length -= 1[0m
[32m+  76:                 self._length -= 2[0m
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
--------------------------------------------------------------------------------
[0.15863 s] [31msurvived[0m
[36m   -[0m [#  37] CRP stack4: 
--------------------------------------------------------------------------------
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
[34m-  82:         display = '('[0m
[32m+  82:         display = 'mutpy'[0m
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
--------------------------------------------------------------------------------
[0.18086 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  38] CRP stack4: 
--------------------------------------------------------------------------------
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
[34m-  82:         display = '('[0m
[32m+  82:         display = ''[0m
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
--------------------------------------------------------------------------------
[0.18074 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  39] CRP stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
[34m-  84:             display += str(curr.data) + ', '[0m
[32m+  84:             display += str(curr.data) + 'mutpy'[0m
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.23453 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  40] CRP stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
[34m-  84:             display += str(curr.data) + ', '[0m
[32m+  84:             display += str(curr.data) + ''[0m
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.23640 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  41] CRP stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:-3] + ')'[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.16506 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  42] CRP stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:-2] + 'mutpy'[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.18067 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  43] CRP stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:-2] + ''[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.17863 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  44] EHD stack4: 
--------------------------------------------------------------------------------
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
[34m-  37:             if data:[0m
[34m-  38:                 self.push(data)[0m
[32m+  37:             raise[0m
[32m+  38:     [0m
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.17766 s] [36mincompetent[0m

TypeError: stack4:34: TypeError: 'NoneType' object is not iterable

[36m   -[0m [#  45] EXS stack4: 
--------------------------------------------------------------------------------
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
[34m-  37:             if data:[0m
[34m-  38:                 self.push(data)[0m
[32m+  37:             pass[0m
[32m+  38:     [0m
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.17701 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:18: AssertionError
[36m   -[0m [#  46] LCR stack4: 
--------------------------------------------------------------------------------
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
[34m-  70:         if (curr and val is self.head.data):[0m
[32m+  70:         if (curr or val is self.head.data):[0m
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
--------------------------------------------------------------------------------
[0.18536 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
        var_3 = linked_list_0.pop()
>       assert var_3 == '+'
E       AssertionError

MOSA/test_stack4_MOSA.py:41: AssertionError
[36m   -[0m [#  47] LCR stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
[34m-  74:             if (curr.next and curr.next.data == val):[0m
[32m+  74:             if (curr.next or curr.next.data == val):[0m
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
--------------------------------------------------------------------------------
[0.17942 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
>       var_2 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc44822d600>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack4:74: AttributeError
[36m   -[0m [#  48] OIL stack4: 
--------------------------------------------------------------------------------
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
[34m-  36:         except TypeError:[0m
[32m+  36:                 breakexcept TypeError:[0m
   37:             if data:
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
--------------------------------------------------------------------------------
[0.18011 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
>       assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
E       AssertionError

MOSA/test_stack4_MOSA.py:36: AssertionError
[36m   -[0m [#  49] OIL stack4: 
--------------------------------------------------------------------------------
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
[34m-  66:     [0m
[32m+  66:             break[0m
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
--------------------------------------------------------------------------------
[0.15760 s] [31msurvived[0m
[36m   -[0m [#  50] OIL stack4: 
--------------------------------------------------------------------------------
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
[34m-  78:     [0m
[32m+  78:             break[0m
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
--------------------------------------------------------------------------------
[0.15791 s] [31msurvived[0m
[36m   -[0m [#  51] OIL stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[34m-  87: [0m
[32m+  86:             break[0m
[32m+  87:         return display[:-2] + ')'[0m
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
   91: 
--------------------------------------------------------------------------------
[0.18000 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
>       assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
E       AssertionError

MOSA/test_stack4_MOSA.py:36: AssertionError
[36m   -[0m [#  52] RIL stack4: 
--------------------------------------------------------------------------------
   30:         '''Linked list initialized with head.'''
   31:         self._length = 0
   32:         self.head = None
   33:         try:
[34m-  34:             for val in data:[0m
[32m+  34:             for val in reversed(data):[0m
   35:                 self.push(val)
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
--------------------------------------------------------------------------------
[0.23264 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
>       assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
E       AssertionError

MOSA/test_stack4_MOSA.py:36: AssertionError
[36m   -[0m [#  53] ROR stack4: 
--------------------------------------------------------------------------------
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
[34m-  63:             if curr.data == val:[0m
[32m+  63:             if curr.data != val:[0m
   64:                 return curr
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
--------------------------------------------------------------------------------
[0.23319 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        bool_0 = False
        var_0 = linked_list_0.push(bool_0)
        var_1 = linked_list_0.search(bool_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:80: AssertionError
[36m   -[0m [#  54] ROR stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
[34m-  74:             if (curr.next and curr.next.data == val):[0m
[32m+  74:             if (curr.next and curr.next.data != val):[0m
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
--------------------------------------------------------------------------------
[0.15958 s] [31msurvived[0m
[36m   -[0m [#  55] SDI stack4: 
--------------------------------------------------------------------------------
    5: 
    6:     Data attribute for data storage and Next for pointer to next node.
    7:     '''
    8:     
[34m-   9:     def __init__(self, data, next_node=None):[0m
[34m-  10:         '''Attribute data and next_node.'''[0m
[34m-  11:         self.data = data[0m
[34m-  12:         self.next = next_node[0m
[34m-  13: [0m
[32m+   9:     @staticmethod[0m
[32m+  10:     def __init__(self, data, next_node=None):[0m
[32m+  11:         '''Attribute data and next_node.'''[0m
[32m+  12:         self.data = data[0m
[32m+  13:         self.next = next_node[0m
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
   17: 
--------------------------------------------------------------------------------
[0.17342 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
stack4:43: in push
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = '/', data = None, next_node = None

>   ???
E   AttributeError: 'str' object has no attribute 'data'

stack4:12: AttributeError
[36m   -[0m [#  56] SDI stack4: 
--------------------------------------------------------------------------------
   25:     display() - will return a unicode string representing the list as
   26:     if it were a Python tuple literal: "(12, \'sam\', 37, \'tango\')"
   27:     '''
   28:     
[34m-  29:     def __init__(self, data=None):[0m
[34m-  30:         '''Linked list initialized with head.'''[0m
[34m-  31:         self._length = 0[0m
[34m-  32:         self.head = None[0m
[34m-  33:         try:[0m
[34m-  34:             for val in data:[0m
[34m-  35:                 self.push(val)[0m
[34m-  36:         except TypeError:[0m
[34m-  37:             if data:[0m
[34m-  38:                 self.push(data)[0m
[34m-  39:     [0m
[32m+  29:     @staticmethod[0m
[32m+  30:     def __init__(self, data=None):[0m
[32m+  31:         '''Linked list initialized with head.'''[0m
[32m+  32:         self._length = 0[0m
[32m+  33:         self.head = None[0m
[32m+  34:         try:[0m
[32m+  35:             for val in data:[0m
[32m+  36:                 self.push(val)[0m
[32m+  37:         except TypeError:[0m
[32m+  38:             if data:[0m
[32m+  39:                 self.push(data)[0m
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
--------------------------------------------------------------------------------
[0.17520 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = '/A\n', data = None

>   ???
E   AttributeError: 'str' object has no attribute '_length'

stack4:32: AttributeError
[36m   -[0m [#  57] SDI stack4: 
--------------------------------------------------------------------------------
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
[34m-  40:     def push(self, val):[0m
[34m-  41:         '''Insert a value at the head of the list.'''[0m
[34m-  42:         old_head = self.head[0m
[34m-  43:         self.head = Node(val, old_head)[0m
[34m-  44:         self._length += 1[0m
[34m-  45:     [0m
[32m+  40:     @staticmethod[0m
[32m+  41:     def push(self, val):[0m
[32m+  42:         '''Insert a value at the head of the list.'''[0m
[32m+  43:         old_head = self.head[0m
[32m+  44:         self.head = Node(val, old_head)[0m
[32m+  45:         self._length += 1[0m
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
--------------------------------------------------------------------------------
[0.17696 s] [36mincompetent[0m

TypeError: stack4:38: TypeError: LinkedList.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  58] SDI stack4: 
--------------------------------------------------------------------------------
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
[34m-  46:     def pop(self):[0m
[34m-  47:         '''Remove the first value and return it.'''[0m
[34m-  48:         if not (self.head):[0m
[34m-  49:             raise IndexError('Cannot pop from an empty list')[0m
[34m-  50:         to_return = self.head[0m
[34m-  51:         self.head = self.head.next[0m
[34m-  52:         self._length -= 1[0m
[34m-  53:         return to_return.data[0m
[34m-  54:     [0m
[32m+  46:     @staticmethod[0m
[32m+  47:     def pop(self):[0m
[32m+  48:         '''Remove the first value and return it.'''[0m
[32m+  49:         if not (self.head):[0m
[32m+  50:             raise IndexError('Cannot pop from an empty list')[0m
[32m+  51:         to_return = self.head[0m
[32m+  52:         self.head = self.head.next[0m
[32m+  53:         self._length -= 1[0m
[32m+  54:         return to_return.data[0m
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
--------------------------------------------------------------------------------
[0.18393 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack4/MOSA/test_stack4_MOSA.py:40: TypeError: LinkedList.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  59] SDI stack4: 
--------------------------------------------------------------------------------
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
[34m-  55:     def size(self):[0m
[34m-  56:         '''Return the length of the list.'''[0m
[34m-  57:         return self._length[0m
[34m-  58:     [0m
[32m+  55:     @staticmethod[0m
[32m+  56:     def size(self):[0m
[32m+  57:         '''Return the length of the list.'''[0m
[32m+  58:         return self._length[0m
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
--------------------------------------------------------------------------------
[0.18906 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack4/MOSA/test_stack4_MOSA.py:130: TypeError: LinkedList.size() missing 1 required positional argument: 'self'

[36m   -[0m [#  60] SDI stack4: 
--------------------------------------------------------------------------------
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
[34m-  59:     def search(self, val):[0m
[34m-  60:         '''Return the node containing val.'''[0m
[34m-  61:         curr = self.head[0m
[34m-  62:         while curr:[0m
[34m-  63:             if curr.data == val:[0m
[34m-  64:                 return curr[0m
[34m-  65:             curr = curr.next[0m
[34m-  66:     [0m
[32m+  59:     @staticmethod[0m
[32m+  60:     def search(self, val):[0m
[32m+  61:         '''Return the node containing val.'''[0m
[32m+  62:         curr = self.head[0m
[32m+  63:         while curr:[0m
[32m+  64:             if curr.data == val:[0m
[32m+  65:                 return curr[0m
[32m+  66:             curr = curr.next[0m
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
--------------------------------------------------------------------------------
[0.18787 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack4/MOSA/test_stack4_MOSA.py:71: TypeError: LinkedList.search() missing 1 required positional argument: 'val'

[36m   -[0m [#  61] SDI stack4: 
--------------------------------------------------------------------------------
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
   66:     
[34m-  67:     def remove(self, val):[0m
[34m-  68:         '''Remove node from list if exists.'''[0m
[34m-  69:         curr = self.head[0m
[34m-  70:         if (curr and val is self.head.data):[0m
[34m-  71:             self.head = self.head.next[0m
[34m-  72:             self._length -= 1[0m
[34m-  73:         while curr:[0m
[34m-  74:             if (curr.next and curr.next.data == val):[0m
[34m-  75:                 curr.next = curr.next.next[0m
[34m-  76:                 self._length -= 1[0m
[34m-  77:             curr = curr.next[0m
[34m-  78:     [0m
[32m+  67:     @staticmethod[0m
[32m+  68:     def remove(self, val):[0m
[32m+  69:         '''Remove node from list if exists.'''[0m
[32m+  70:         curr = self.head[0m
[32m+  71:         if (curr and val is self.head.data):[0m
[32m+  72:             self.head = self.head.next[0m
[32m+  73:             self._length -= 1[0m
[32m+  74:         while curr:[0m
[32m+  75:             if (curr.next and curr.next.data == val):[0m
[32m+  76:                 curr.next = curr.next.next[0m
[32m+  77:                 self._length -= 1[0m
[32m+  78:             curr = curr.next[0m
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
--------------------------------------------------------------------------------
[0.17942 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack4/MOSA/test_stack4_MOSA.py:39: TypeError: LinkedList.remove() missing 1 required positional argument: 'val'

[36m   -[0m [#  62] SDI stack4: 
--------------------------------------------------------------------------------
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
[34m-  79:     def display(self):[0m
[34m-  80:         '''Display list as a tuple.'''[0m
[34m-  81:         curr = self.head[0m
[34m-  82:         display = '('[0m
[34m-  83:         while curr:[0m
[34m-  84:             display += str(curr.data) + ', '[0m
[34m-  85:             curr = curr.next[0m
[34m-  86:         return display[:-2] + ')'[0m
[34m-  87: [0m
[32m+  79:     @staticmethod[0m
[32m+  80:     def display(self):[0m
[32m+  81:         '''Display list as a tuple.'''[0m
[32m+  82:         curr = self.head[0m
[32m+  83:         display = '('[0m
[32m+  84:         while curr:[0m
[32m+  85:             display += str(curr.data) + ', '[0m
[32m+  86:             curr = curr.next[0m
[32m+  87:         return display[:-2] + ')'[0m
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
   91: 
--------------------------------------------------------------------------------
[0.17880 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack4/MOSA/test_stack4_MOSA.py:19: TypeError: LinkedList.display() missing 1 required positional argument: 'self'

[36m   -[0m [#  63] SDI stack4: 
--------------------------------------------------------------------------------
   97:     If the stack is empty, attempts to call pop should raise an exception.
   98: 
   99:     '''
  100:     
[34m- 101:     def __init__(self, data=None):[0m
[34m- 102:         '''Initialization.'''[0m
[34m- 103:         self._stack = LinkedList(data)[0m
[34m- 104:     [0m
[32m+ 101:     @staticmethod[0m
[32m+ 102:     def __init__(self, data=None):[0m
[32m+ 103:         '''Initialization.'''[0m
[32m+ 104:         self._stack = LinkedList(data)[0m
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
--------------------------------------------------------------------------------
[0.17104 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = '/A\n', data = None

>   ???
E   AttributeError: 'str' object has no attribute '_stack'

stack4:104: AttributeError
[36m   -[0m [#  64] SDI stack4: 
--------------------------------------------------------------------------------
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
  103:         self._stack = LinkedList(data)
  104:     
[34m- 105:     def push(self, val):[0m
[34m- 106:         '''Add val to the stack.'''[0m
[34m- 107:         self._stack.push(val)[0m
[34m- 108:     [0m
[32m+ 105:     @staticmethod[0m
[32m+ 106:     def push(self, val):[0m
[32m+ 107:         '''Add val to the stack.'''[0m
[32m+ 108:         self._stack.push(val)[0m
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.17664 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack4/MOSA/test_stack4_MOSA.py:9: TypeError: Stack.push() missing 1 required positional argument: 'val'

[36m   -[0m [#  65] SDI stack4: 
--------------------------------------------------------------------------------
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
[34m- 109:     def pop(self):[0m
[34m- 110:         '''Remove item off the stack.'''[0m
[34m- 111:         self._stack.pop()[0m
[32m+ 109:     @staticmethod[0m
[32m+ 110:     def pop(self):[0m
[32m+ 111:         '''Remove item off the stack.'''[0m
[32m+ 112:         self._stack.pop()[0m
--------------------------------------------------------------------------------
[0.16064 s] [31msurvived[0m
[36m   -[0m [#  66] SDL stack4: 
--------------------------------------------------------------------------------
    7:     '''
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
[34m-  11:         self.data = data[0m
[32m+  11:         pass[0m
   12:         self.next = next_node
   13: 
   14: 
   15: class LinkedList(object):
--------------------------------------------------------------------------------
[0.23345 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MOSA/test_stack4_MOSA.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4480a8070>

>   ???
E   AttributeError: 'Node' object has no attribute 'data'

stack4:84: AttributeError
[36m   -[0m [#  67] SDL stack4: 
--------------------------------------------------------------------------------
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
   11:         self.data = data
[34m-  12:         self.next = next_node[0m
[32m+  12:         pass[0m
   13: 
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
--------------------------------------------------------------------------------
[0.18014 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MOSA/test_stack4_MOSA.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448215b10>

>   ???
E   AttributeError: 'Node' object has no attribute 'next'

stack4:85: AttributeError
[36m   -[0m [#  68] SDL stack4: 
--------------------------------------------------------------------------------
   27:     '''
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
[34m-  31:         self._length = 0[0m
[32m+  31:         pass[0m
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
--------------------------------------------------------------------------------
[0.17252 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc447f60940>, val = '/'

>   ???
E   AttributeError: 'LinkedList' object has no attribute '_length'

stack4:44: AttributeError
[36m   -[0m [#  69] SDL stack4: 
--------------------------------------------------------------------------------
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
   31:         self._length = 0
[34m-  32:         self.head = None[0m
[32m+  32:         pass[0m
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
--------------------------------------------------------------------------------
[0.17815 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4480136d0>, val = '/'

>   ???
E   AttributeError: 'LinkedList' object has no attribute 'head'

stack4:42: AttributeError
[36m   -[0m [#  70] SDL stack4: 
--------------------------------------------------------------------------------
   31:         self._length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
[34m-  35:                 self.push(val)[0m
[32m+  35:                 pass[0m
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
--------------------------------------------------------------------------------
[0.18050 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:34: AssertionError
[36m   -[0m [#  71] SDL stack4: 
--------------------------------------------------------------------------------
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
   37:             if data:
[34m-  38:                 self.push(data)[0m
[32m+  38:                 pass[0m
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.17750 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:18: AssertionError
[36m   -[0m [#  72] SDL stack4: 
--------------------------------------------------------------------------------
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
[34m-  42:         old_head = self.head[0m
[32m+  42:         pass[0m
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
   46:     def pop(self):
--------------------------------------------------------------------------------
[0.17620 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4482a5750>, val = '/'

>   ???
E   NameError: name 'old_head' is not defined

stack4:43: NameError
[36m   -[0m [#  73] SDL stack4: 
--------------------------------------------------------------------------------
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
[34m-  43:         self.head = Node(val, old_head)[0m
[32m+  43:         pass[0m
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
--------------------------------------------------------------------------------
[0.17169 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:18: AssertionError
[36m   -[0m [#  74] SDL stack4: 
--------------------------------------------------------------------------------
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
[34m-  50:         to_return = self.head[0m
[32m+  50:         pass[0m
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
--------------------------------------------------------------------------------
[0.18043 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4481e9c60>

>   ???
E   NameError: name 'to_return' is not defined

stack4:53: NameError
[36m   -[0m [#  75] SDL stack4: 
--------------------------------------------------------------------------------
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
[34m-  51:         self.head = self.head.next[0m
[32m+  51:         pass[0m
   52:         self._length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
--------------------------------------------------------------------------------
[0.16114 s] [31msurvived[0m
[36m   -[0m [#  76] SDL stack4: 
--------------------------------------------------------------------------------
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
[34m-  53:         return to_return.data[0m
[32m+  53:         pass[0m
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
--------------------------------------------------------------------------------
[0.17981 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
        var_3 = linked_list_0.pop()
>       assert var_3 == '+'
E       AssertionError

MOSA/test_stack4_MOSA.py:41: AssertionError
[36m   -[0m [#  77] SDL stack4: 
--------------------------------------------------------------------------------
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
[34m-  57:         return self._length[0m
[32m+  57:         pass[0m
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
--------------------------------------------------------------------------------
[0.19404 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_12

def test_case_12():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.remove(linked_list_0)
        var_1 = linked_list_0.size()
>       assert var_1 == 0
E       AssertionError

MOSA/test_stack4_MOSA.py:131: AssertionError
[36m   -[0m [#  78] SDL stack4: 
--------------------------------------------------------------------------------
   57:         return self._length
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
[34m-  61:         curr = self.head[0m
[32m+  61:         pass[0m
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
--------------------------------------------------------------------------------
[0.17326 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_5

def test_case_5():
        none_type_0 = None
        node_0 = module_0.Node(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
        assert var_0 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_1 = module_0.Node(var_0)
        assert node_1.data == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        linked_list_1 = module_0.LinkedList(var_0)
        assert f'{type(linked_list_1.head).__module__}.{type(linked_list_1.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_1.remove(var_0)
        var_2 = linked_list_1.push(var_1)
        var_3 = linked_list_1.remove(node_1)
        bool_0 = False
>       var_4 = linked_list_1.search(bool_0)

MOSA/test_stack4_MOSA.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc447f50fa0>, val = False

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

stack4:62: UnboundLocalError
[36m   -[0m [#  79] SDL stack4: 
--------------------------------------------------------------------------------
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
   63:             if curr.data == val:
[34m-  64:                 return curr[0m
[32m+  64:                 pass[0m
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
--------------------------------------------------------------------------------
[0.23892 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        bool_0 = False
        var_0 = linked_list_0.push(bool_0)
        var_1 = linked_list_0.search(bool_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:80: AssertionError
[36m   -[0m [#  80] SDL stack4: 
--------------------------------------------------------------------------------
   61:         curr = self.head
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
[34m-  65:             curr = curr.next[0m
[32m+  65:             pass[0m
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
--------------------------------------------------------------------------------
[5.00762 s] [33mtimeout[0m
[36m   -[0m [#  81] SDL stack4: 
--------------------------------------------------------------------------------
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
[34m-  69:         curr = self.head[0m
[32m+  69:         pass[0m
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
--------------------------------------------------------------------------------
[0.17378 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
>       var_2 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448214190>, val = None

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

stack4:70: UnboundLocalError
[36m   -[0m [#  82] SDL stack4: 
--------------------------------------------------------------------------------
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
[34m-  71:             self.head = self.head.next[0m
[32m+  71:             pass[0m
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
--------------------------------------------------------------------------------
[0.15305 s] [31msurvived[0m
[36m   -[0m [#  83] SDL stack4: 
--------------------------------------------------------------------------------
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
[34m-  75:                 curr.next = curr.next.next[0m
[32m+  75:                 pass[0m
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
   79:     def display(self):
--------------------------------------------------------------------------------
[0.15954 s] [31msurvived[0m
[36m   -[0m [#  84] SDL stack4: 
--------------------------------------------------------------------------------
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
[34m-  77:             curr = curr.next[0m
[32m+  77:             pass[0m
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
--------------------------------------------------------------------------------
[5.00796 s] [33mtimeout[0m
[36m   -[0m [#  85] SDL stack4: 
--------------------------------------------------------------------------------
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
[34m-  81:         curr = self.head[0m
[32m+  81:         pass[0m
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
--------------------------------------------------------------------------------
[0.17909 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MOSA/test_stack4_MOSA.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448243fd0>

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

stack4:83: UnboundLocalError
[36m   -[0m [#  86] SDL stack4: 
--------------------------------------------------------------------------------
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
[34m-  82:         display = '('[0m
[32m+  82:         pass[0m
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
--------------------------------------------------------------------------------
[0.17534 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MOSA/test_stack4_MOSA.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc44822c6d0>

>   ???
E   UnboundLocalError: local variable 'display' referenced before assignment

stack4:84: UnboundLocalError
[36m   -[0m [#  87] SDL stack4: 
--------------------------------------------------------------------------------
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
[34m-  85:             curr = curr.next[0m
[32m+  85:             pass[0m
   86:         return display[:-2] + ')'
   87: 
   88: 
   89: class Stack(object):
--------------------------------------------------------------------------------
[5.00802 s] [33mtimeout[0m
[36m   -[0m [#  88] SDL stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         pass[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.14513 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  89] SDL stack4: 
--------------------------------------------------------------------------------
   99:     '''
  100:     
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
[34m- 103:         self._stack = LinkedList(data)[0m
[32m+ 103:         pass[0m
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
--------------------------------------------------------------------------------
[0.13940 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
        stack_0 = module_0.Stack(str_0)
>       var_0 = stack_0.push(bool_0)

MOSA/test_stack4_MOSA.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.Stack object at 0x7fc4480b06a0>, val = False

>   ???
E   AttributeError: 'Stack' object has no attribute '_stack'

stack4:107: AttributeError
[36m   -[0m [#  90] SDL stack4: 
--------------------------------------------------------------------------------
  103:         self._stack = LinkedList(data)
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
[34m- 107:         self._stack.push(val)[0m
[32m+ 107:         pass[0m
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.12591 s] [31msurvived[0m
[36m   -[0m [#  91] SDL stack4: 
--------------------------------------------------------------------------------
  107:         self._stack.push(val)
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
[34m- 111:         self._stack.pop()[0m
[32m+ 111:         pass[0m
--------------------------------------------------------------------------------
[0.13018 s] [31msurvived[0m
[36m   -[0m [#  92] SIR stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
[34m-  86:         return display[:-2] + ')'[0m
[32m+  86:         return display[:] + ')'[0m
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.15279 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[36m   -[0m [#  93] SVD stack4: 
--------------------------------------------------------------------------------
    7:     '''
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
[34m-  11:         self.data = data[0m
[32m+  11:         data = data[0m
   12:         self.next = next_node
   13: 
   14: 
   15: class LinkedList(object):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  94] SVD stack4: 
--------------------------------------------------------------------------------
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
   11:         self.data = data
[34m-  12:         self.next = next_node[0m
[32m+  12:         next = next_node[0m
   13: 
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  95] SVD stack4: 
--------------------------------------------------------------------------------
   27:     '''
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
[34m-  31:         self._length = 0[0m
[32m+  31:         _length = 0[0m
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  96] SVD stack4: 
--------------------------------------------------------------------------------
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
   31:         self._length = 0
[34m-  32:         self.head = None[0m
[32m+  32:         head = None[0m
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [#  97] SVD stack4: 
--------------------------------------------------------------------------------
   31:         self._length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
[34m-  35:                 self.push(val)[0m
[32m+  35:                 push(val)[0m
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
--------------------------------------------------------------------------------
[0.17528 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc44836cfa0>, data = '/A\n'

>   ???
E   NameError: name 'push' is not defined

stack4:35: NameError
[36m   -[0m [#  98] SVD stack4: 
--------------------------------------------------------------------------------
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
   37:             if data:
[34m-  38:                 self.push(data)[0m
[32m+  38:                 push(data)[0m
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.17978 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

self = <stack4.LinkedList object at 0x7fc4482b9840>, data = True

>   ???
E   TypeError: 'bool' object is not iterable

stack4:34: TypeError

During handling of the above exception, another exception occurred:

    def test_case_1():
        bool_0 = True
>       linked_list_0 = module_0.LinkedList(bool_0)

MOSA/test_stack4_MOSA.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4482b9840>, data = True

>   ???
E   NameError: name 'push' is not defined

stack4:38: NameError
[36m   -[0m [#  99] SVD stack4: 
--------------------------------------------------------------------------------
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
[34m-  42:         old_head = self.head[0m
[32m+  42:         old_head = head[0m
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
   46:     def pop(self):
--------------------------------------------------------------------------------
[0.18140 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
>       stack_0 = module_0.Stack(str_0)

MOSA/test_stack4_MOSA.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448241c90>, val = '/'

>   ???
E   NameError: name 'head' is not defined

stack4:42: NameError
[36m   -[0m [# 100] SVD stack4: 
--------------------------------------------------------------------------------
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
[34m-  43:         self.head = Node(val, old_head)[0m
[32m+  43:         head = Node(val, old_head)[0m
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 101] SVD stack4: 
--------------------------------------------------------------------------------
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
[34m-  44:         self._length += 1[0m
[32m+  44:         _length += 1[0m
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 102] SVD stack4: 
--------------------------------------------------------------------------------
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
[34m-  48:         if not (self.head):[0m
[32m+  48:         if not head:[0m
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
--------------------------------------------------------------------------------
[0.17971 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448240880>

>   ???
E   NameError: name 'head' is not defined

stack4:48: NameError
[36m   -[0m [# 103] SVD stack4: 
--------------------------------------------------------------------------------
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
[34m-  50:         to_return = self.head[0m
[32m+  50:         to_return = head[0m
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
--------------------------------------------------------------------------------
[0.18139 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448241c90>

>   ???
E   NameError: name 'head' is not defined

stack4:50: NameError
[36m   -[0m [# 104] SVD stack4: 
--------------------------------------------------------------------------------
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
[34m-  51:         self.head = self.head.next[0m
[32m+  51:         head = self.head.next[0m
   52:         self._length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 105] SVD stack4: 
--------------------------------------------------------------------------------
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
[34m-  51:         self.head = self.head.next[0m
[32m+  51:         self.head = head.next[0m
   52:         self._length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
--------------------------------------------------------------------------------
[0.17962 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
        var_2 = linked_list_0.remove(none_type_0)
>       var_3 = linked_list_0.pop()

MOSA/test_stack4_MOSA.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448384550>

>   ???
E   NameError: name 'head' is not defined

stack4:51: NameError
[36m   -[0m [# 106] SVD stack4: 
--------------------------------------------------------------------------------
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
[34m-  52:         self._length -= 1[0m
[32m+  52:         _length -= 1[0m
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 107] SVD stack4: 
--------------------------------------------------------------------------------
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
[34m-  57:         return self._length[0m
[32m+  57:         return _length[0m
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
--------------------------------------------------------------------------------
[0.22434 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_12

def test_case_12():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.remove(linked_list_0)
>       var_1 = linked_list_0.size()

MOSA/test_stack4_MOSA.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448264220>

>   ???
E   NameError: name '_length' is not defined

stack4:57: NameError
[36m   -[0m [# 108] SVD stack4: 
--------------------------------------------------------------------------------
   57:         return self._length
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
[34m-  61:         curr = self.head[0m
[32m+  61:         curr = head[0m
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
--------------------------------------------------------------------------------
[0.23654 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_5

def test_case_5():
        none_type_0 = None
        node_0 = module_0.Node(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
        assert var_0 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_1 = module_0.Node(var_0)
        assert node_1.data == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        linked_list_1 = module_0.LinkedList(var_0)
        assert f'{type(linked_list_1.head).__module__}.{type(linked_list_1.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_1.remove(var_0)
        var_2 = linked_list_1.push(var_1)
        var_3 = linked_list_1.remove(node_1)
        bool_0 = False
>       var_4 = linked_list_1.search(bool_0)

MOSA/test_stack4_MOSA.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc448269600>, val = False

>   ???
E   NameError: name 'head' is not defined

stack4:61: NameError
[36m   -[0m [# 109] SVD stack4: 
--------------------------------------------------------------------------------
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
[34m-  69:         curr = self.head[0m
[32m+  69:         curr = head[0m
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
--------------------------------------------------------------------------------
[0.17874 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
>       var_2 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4482157e0>, val = None

>   ???
E   NameError: name 'head' is not defined

stack4:69: NameError
[36m   -[0m [# 110] SVD stack4: 
--------------------------------------------------------------------------------
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
[34m-  70:         if (curr and val is self.head.data):[0m
[32m+  70:         if (curr and val is head.data):[0m
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
--------------------------------------------------------------------------------
[0.17815 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_1 = linked_list_0.display()
        assert var_1 == '(+, O, k, \n, #, f, 4, 4, T, ?, ~, c, \\)'
        node_0 = module_0.Node(stack_0)
        stack_1 = module_0.Stack()
>       var_2 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc44836c490>, val = None

>   ???
E   NameError: name 'head' is not defined

stack4:70: NameError
[36m   -[0m [# 111] SVD stack4: 
--------------------------------------------------------------------------------
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
[34m-  71:             self.head = self.head.next[0m
[32m+  71:             head = self.head.next[0m
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 112] SVD stack4: 
--------------------------------------------------------------------------------
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
[34m-  71:             self.head = self.head.next[0m
[32m+  71:             self.head = head.next[0m
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
--------------------------------------------------------------------------------
[0.19762 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_15

def test_case_15():
        none_type_0 = None
        str_0 = "4'8tA-a"
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.pop()
        assert var_0 == 'a'
        var_1 = linked_list_0.remove(str_0)
        var_2 = linked_list_0.push(var_1)
>       var_3 = linked_list_0.remove(none_type_0)

MOSA/test_stack4_MOSA.py:155: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4482a4490>, val = None

>   ???
E   NameError: name 'head' is not defined

stack4:71: NameError
[36m   -[0m [# 113] SVD stack4: 
--------------------------------------------------------------------------------
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
[34m-  72:             self._length -= 1[0m
[32m+  72:             _length -= 1[0m
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 114] SVD stack4: 
--------------------------------------------------------------------------------
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
[34m-  76:                 self._length -= 1[0m
[32m+  76:                 _length -= 1[0m
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 115] SVD stack4: 
--------------------------------------------------------------------------------
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
[34m-  81:         curr = self.head[0m
[32m+  81:         curr = head[0m
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
--------------------------------------------------------------------------------
[0.17777 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MOSA/test_stack4_MOSA.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7fc4480342e0>

>   ???
E   NameError: name 'head' is not defined

stack4:81: NameError
[36m   -[0m [# 116] SVD stack4: 
--------------------------------------------------------------------------------
   99:     '''
  100:     
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
[34m- 103:         self._stack = LinkedList(data)[0m
[32m+ 103:         _stack = LinkedList(data)[0m
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 117] SVD stack4: 
--------------------------------------------------------------------------------
  103:         self._stack = LinkedList(data)
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
[34m- 107:         self._stack.push(val)[0m
[32m+ 107:         _stack.push(val)[0m
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.17718 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_0

def test_case_0():
        bool_0 = False
        str_0 = '/A\n'
        stack_0 = module_0.Stack(str_0)
>       var_0 = stack_0.push(bool_0)

MOSA/test_stack4_MOSA.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.Stack object at 0x7fc4480111e0>, val = False

>   ???
E   NameError: name '_stack' is not defined

stack4:107: NameError
[36m   -[0m [# 118] SVD stack4: 
--------------------------------------------------------------------------------
  107:         self._stack.push(val)
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
[34m- 111:         self._stack.pop()[0m
[32m+ 111:         _stack.pop()[0m
--------------------------------------------------------------------------------
[0.15883 s] [31msurvived[0m
[36m   -[0m [# 119] ZIL stack4: 
--------------------------------------------------------------------------------
   31:         self._length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
[34m-  35:                 self.push(val)[0m
[32m+  35:                 break[0m
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
--------------------------------------------------------------------------------
[0.17914 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_3

def test_case_3():
        none_type_0 = None
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(none_type_0)
        str_0 = '\\c~?T44f#\nkO+'
        linked_list_0 = module_0.LinkedList(str_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:34: AssertionError
[36m   -[0m [# 120] ZIL stack4: 
--------------------------------------------------------------------------------
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
[34m-  63:             if curr.data == val:[0m
[34m-  64:                 return curr[0m
[34m-  65:             curr = curr.next[0m
[32m+  63:             break[0m
[32m+  64:     [0m
[32m+  65:     [0m
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
--------------------------------------------------------------------------------
[0.17623 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        bool_0 = False
        var_0 = linked_list_0.push(bool_0)
        var_1 = linked_list_0.search(bool_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MOSA/test_stack4_MOSA.py:80: AssertionError
[36m   -[0m [# 121] ZIL stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
[34m-  74:             if (curr.next and curr.next.data == val):[0m
[34m-  75:                 curr.next = curr.next.next[0m
[34m-  76:                 self._length -= 1[0m
[34m-  77:             curr = curr.next[0m
[32m+  74:             break[0m
[32m+  75:     [0m
[32m+  76:     [0m
[32m+  77:     [0m
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
--------------------------------------------------------------------------------
[0.20455 s] [31msurvived[0m
[36m   -[0m [# 122] ZIL stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
[34m-  84:             display += str(curr.data) + ', '[0m
[34m-  85:             curr = curr.next[0m
[32m+  84:             break[0m
[32m+  85:         [0m
   86:         return display[:-2] + ')'
   87: 
   88: 
   89: class Stack(object):
--------------------------------------------------------------------------------
[0.23419 s] [32mkilled[0m by MOSA/test_stack4_MOSA.py::test_case_1

def test_case_1():
        bool_0 = True
        linked_list_0 = module_0.LinkedList(bool_0)
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(True)'
E       AssertionError

MOSA/test_stack4_MOSA.py:20: AssertionError
[34m[*][0m Mutation score [47.46981 s]: [1m[34m76.5%[0m
[36m   -[0m all: 122
[36m   -[0m killed: 71 (58.2%)
[36m   -[0m survived: 23 (18.9%)
[36m   -[0m incompetent: 24 (19.7%)
[36m   -[0m timeout: 4 (3.3%)
