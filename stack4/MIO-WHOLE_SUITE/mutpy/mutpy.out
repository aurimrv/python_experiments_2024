[*] Start mutation process:
   - targets: stack4.py
   - tests: ./MIO-WHOLE_SUITE
[*] 29 tests passed:
   - test_stack4_WHOLE_SUITE [0.05160 s]
   - test_stack4_MIO [0.04648 s]
[*] Start mutants generation and execution:
   - [#   1] AOD stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:2] + ')'
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.09212 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#   2] AOR stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
-  84:             display += str(curr.data) + ', '
+  84:             display += str(curr.data) - ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.07865 s] incompetent

TypeError: stack4:84: TypeError: unsupported operand type(s) for -: 'str' and 'str'

   - [#   3] AOR stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:+2] + ')'
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.08123 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#   4] AOR stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:-2] - ')'
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.07819 s] incompetent

TypeError: stack4:86: TypeError: unsupported operand type(s) for -: 'str' and 'str'

   - [#   5] ASR stack4: 
--------------------------------------------------------------------------------
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
-  44:         self._length += 1
+  44:         self._length -= 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
--------------------------------------------------------------------------------
[0.06239 s] survived
   - [#   6] ASR stack4: 
--------------------------------------------------------------------------------
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
-  52:         self._length -= 1
+  52:         self._length += 1
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
--------------------------------------------------------------------------------
[0.06250 s] survived
   - [#   7] ASR stack4: 
--------------------------------------------------------------------------------
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
-  72:             self._length -= 1
+  72:             self._length += 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
--------------------------------------------------------------------------------
[0.06481 s] survived
   - [#   8] ASR stack4: 
--------------------------------------------------------------------------------
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
-  76:                 self._length -= 1
+  76:                 self._length += 1
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
--------------------------------------------------------------------------------
[0.06452 s] survived
   - [#   9] ASR stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
-  84:             display += str(curr.data) + ', '
+  84:             display -= str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.07876 s] incompetent

TypeError: stack4:84: TypeError: unsupported operand type(s) for -=: 'str' and 'str'

   - [#  10] CDI stack4: 
--------------------------------------------------------------------------------
    5: 
    6:     Data attribute for data storage and Next for pointer to next node.
    7:     '''
    8:     
-   9:     def __init__(self, data, next_node=None):
-  10:         '''Attribute data and next_node.'''
-  11:         self.data = data
-  12:         self.next = next_node
-  13: 
+   9:     @classmethod
+  10:     def __init__(self, data, next_node=None):
+  11:         '''Attribute data and next_node.'''
+  12:         self.data = data
+  13:         self.next = next_node
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
   17: 
--------------------------------------------------------------------------------
[5.00631 s] timeout
   - [#  11] CDI stack4: 
--------------------------------------------------------------------------------
   25:     display() - will return a unicode string representing the list as
   26:     if it were a Python tuple literal: "(12, \'sam\', 37, \'tango\')"
   27:     '''
   28:     
-  29:     def __init__(self, data=None):
-  30:         '''Linked list initialized with head.'''
-  31:         self._length = 0
-  32:         self.head = None
-  33:         try:
-  34:             for val in data:
-  35:                 self.push(val)
-  36:         except TypeError:
-  37:             if data:
-  38:                 self.push(data)
-  39:     
+  29:     @classmethod
+  30:     def __init__(self, data=None):
+  31:         '''Linked list initialized with head.'''
+  32:         self._length = 0
+  33:         self.head = None
+  34:         try:
+  35:             for val in data:
+  36:                 self.push(val)
+  37:         except TypeError:
+  38:             if data:
+  39:                 self.push(data)
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
--------------------------------------------------------------------------------
[0.07359 s] incompetent

TypeError: stack4:39: TypeError: LinkedList.push() missing 1 required positional argument: 'val'

   - [#  12] CDI stack4: 
--------------------------------------------------------------------------------
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
-  40:     def push(self, val):
-  41:         '''Insert a value at the head of the list.'''
-  42:         old_head = self.head
-  43:         self.head = Node(val, old_head)
-  44:         self._length += 1
-  45:     
+  40:     @classmethod
+  41:     def push(self, val):
+  42:         '''Insert a value at the head of the list.'''
+  43:         old_head = self.head
+  44:         self.head = Node(val, old_head)
+  45:         self._length += 1
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
--------------------------------------------------------------------------------
[0.07422 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>, val = 'G'

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:43: AttributeError
   - [#  13] CDI stack4: 
--------------------------------------------------------------------------------
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
-  46:     def pop(self):
-  47:         '''Remove the first value and return it.'''
-  48:         if not (self.head):
-  49:             raise IndexError('Cannot pop from an empty list')
-  50:         to_return = self.head
-  51:         self.head = self.head.next
-  52:         self._length -= 1
-  53:         return to_return.data
-  54:     
+  46:     @classmethod
+  47:     def pop(self):
+  48:         '''Remove the first value and return it.'''
+  49:         if not (self.head):
+  50:             raise IndexError('Cannot pop from an empty list')
+  51:         to_return = self.head
+  52:         self.head = self.head.next
+  53:         self._length -= 1
+  54:         return to_return.data
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
--------------------------------------------------------------------------------
[0.07951 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:49: AttributeError
   - [#  14] CDI stack4: 
--------------------------------------------------------------------------------
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
-  55:     def size(self):
-  56:         '''Return the length of the list.'''
-  57:         return self._length
-  58:     
+  55:     @classmethod
+  56:     def size(self):
+  57:         '''Return the length of the list.'''
+  58:         return self._length
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
--------------------------------------------------------------------------------
[0.09862 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_19

def test_case_19():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
>       var_0 = linked_list_0.size()

MIO-WHOLE_SUITE/test_stack4_MIO.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute '_length'

stack4:58: AttributeError
   - [#  15] CDI stack4: 
--------------------------------------------------------------------------------
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
-  59:     def search(self, val):
-  60:         '''Return the node containing val.'''
-  61:         curr = self.head
-  62:         while curr:
-  63:             if curr.data == val:
-  64:                 return curr
-  65:             curr = curr.next
-  66:     
+  59:     @classmethod
+  60:     def search(self, val):
+  61:         '''Return the node containing val.'''
+  62:         curr = self.head
+  63:         while curr:
+  64:             if curr.data == val:
+  65:                 return curr
+  66:             curr = curr.next
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
--------------------------------------------------------------------------------
[0.07596 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
>       var_1 = linked_list_0.search(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>
val = <stack4.LinkedList object at 0x7f420c440700>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:62: AttributeError
   - [#  16] CDI stack4: 
--------------------------------------------------------------------------------
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
   66:     
-  67:     def remove(self, val):
-  68:         '''Remove node from list if exists.'''
-  69:         curr = self.head
-  70:         if (curr and val is self.head.data):
-  71:             self.head = self.head.next
-  72:             self._length -= 1
-  73:         while curr:
-  74:             if (curr.next and curr.next.data == val):
-  75:                 curr.next = curr.next.next
-  76:                 self._length -= 1
-  77:             curr = curr.next
-  78:     
+  67:     @classmethod
+  68:     def remove(self, val):
+  69:         '''Remove node from list if exists.'''
+  70:         curr = self.head
+  71:         if (curr and val is self.head.data):
+  72:             self.head = self.head.next
+  73:             self._length -= 1
+  74:         while curr:
+  75:             if (curr.next and curr.next.data == val):
+  76:                 curr.next = curr.next.next
+  77:                 self._length -= 1
+  78:             curr = curr.next
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
--------------------------------------------------------------------------------
[0.08145 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_10

def test_case_10():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.push(linked_list_0)
>       var_2 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>
val = <stack4.LinkedList object at 0x7f420c1fcb20>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:70: AttributeError
   - [#  17] CDI stack4: 
--------------------------------------------------------------------------------
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
-  79:     def display(self):
-  80:         '''Display list as a tuple.'''
-  81:         curr = self.head
-  82:         display = '('
-  83:         while curr:
-  84:             display += str(curr.data) + ', '
-  85:             curr = curr.next
-  86:         return display[:-2] + ')'
-  87: 
+  79:     @classmethod
+  80:     def display(self):
+  81:         '''Display list as a tuple.'''
+  82:         curr = self.head
+  83:         display = '('
+  84:         while curr:
+  85:             display += str(curr.data) + ', '
+  86:             curr = curr.next
+  87:         return display[:-2] + ')'
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
   91: 
--------------------------------------------------------------------------------
[0.08144 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MIO-WHOLE_SUITE/test_stack4_MIO.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.LinkedList'>

>   ???
E   AttributeError: type object 'LinkedList' has no attribute 'head'

stack4:82: AttributeError
   - [#  18] CDI stack4: 
--------------------------------------------------------------------------------
   97:     If the stack is empty, attempts to call pop should raise an exception.
   98: 
   99:     '''
  100:     
- 101:     def __init__(self, data=None):
- 102:         '''Initialization.'''
- 103:         self._stack = LinkedList(data)
- 104:     
+ 101:     @classmethod
+ 102:     def __init__(self, data=None):
+ 103:         '''Initialization.'''
+ 104:         self._stack = LinkedList(data)
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
--------------------------------------------------------------------------------
[0.06337 s] survived
   - [#  19] CDI stack4: 
--------------------------------------------------------------------------------
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
  103:         self._stack = LinkedList(data)
  104:     
- 105:     def push(self, val):
- 106:         '''Add val to the stack.'''
- 107:         self._stack.push(val)
- 108:     
+ 105:     @classmethod
+ 106:     def push(self, val):
+ 107:         '''Add val to the stack.'''
+ 108:         self._stack.push(val)
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.07599 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
>       var_0 = stack_0.push(stack_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.Stack'>, val = <stack4.Stack object at 0x7f420c2d2e60>

>   ???
E   AttributeError: type object 'Stack' has no attribute '_stack'

stack4:108: AttributeError
   - [#  20] CDI stack4: 
--------------------------------------------------------------------------------
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
- 109:     def pop(self):
- 110:         '''Remove item off the stack.'''
- 111:         self._stack.pop()
+ 109:     @classmethod
+ 110:     def pop(self):
+ 111:         '''Remove item off the stack.'''
+ 112:         self._stack.pop()
--------------------------------------------------------------------------------
[0.07832 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack4.Stack'>

>   ???
E   AttributeError: type object 'Stack' has no attribute '_stack'

stack4:112: AttributeError
   - [#  21] COD stack4: 
--------------------------------------------------------------------------------
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
-  48:         if not (self.head):
+  48:         if self.head:
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
--------------------------------------------------------------------------------
[0.07813 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c2d35e0>

>   ???
E   IndexError: Cannot pop from an empty list

stack4:49: IndexError
   - [#  22] COI stack4: 
--------------------------------------------------------------------------------
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
-  37:             if data:
+  37:             if not data:
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
--------------------------------------------------------------------------------
[0.07636 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_2

def test_case_2():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        linked_list_0 = module_0.LinkedList(stack_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:17: AssertionError
   - [#  23] COI stack4: 
--------------------------------------------------------------------------------
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
-  48:         if not (self.head):
+  48:         if not ((not (self.head))):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
--------------------------------------------------------------------------------
[0.07843 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c161420>

>   ???
E   IndexError: Cannot pop from an empty list

stack4:49: IndexError
   - [#  24] COI stack4: 
--------------------------------------------------------------------------------
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
-  62:         while curr:
+  62:         while not curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
   66:     
--------------------------------------------------------------------------------
[0.07471 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.search(linked_list_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:39: AssertionError
   - [#  25] COI stack4: 
--------------------------------------------------------------------------------
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
-  63:             if curr.data == val:
+  63:             if not (curr.data == val):
   64:                 return curr
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
--------------------------------------------------------------------------------
[0.07631 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.search(linked_list_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:39: AssertionError
   - [#  26] COI stack4: 
--------------------------------------------------------------------------------
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
-  70:         if (curr and val is self.head.data):
+  70:         if not ((curr and val is self.head.data)):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
--------------------------------------------------------------------------------
[0.08248 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_12

def test_case_12():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        linked_list_1 = module_0.LinkedList(linked_list_0)
        assert f'{type(linked_list_1.head).__module__}.{type(linked_list_1.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_1.remove(linked_list_0)
>       assert linked_list_1.head is None
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:84: AssertionError
   - [#  27] COI stack4: 
--------------------------------------------------------------------------------
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
-  73:         while curr:
+  73:         while not curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
--------------------------------------------------------------------------------
[0.09843 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_13

def test_case_13():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
>       var_0 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bea31c0>
val = <stack4.LinkedList object at 0x7f420bea31c0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

stack4:74: AttributeError
   - [#  28] COI stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
-  74:             if (curr.next and curr.next.data == val):
+  74:             if not ((curr.next and curr.next.data == val)):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
--------------------------------------------------------------------------------
[0.08197 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_10

def test_case_10():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.push(linked_list_0)
>       var_2 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c085240>
val = <stack4.LinkedList object at 0x7f420c085240>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

stack4:75: AttributeError
   - [#  29] COI stack4: 
--------------------------------------------------------------------------------
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
-  83:         while curr:
+  83:         while not curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
--------------------------------------------------------------------------------
[0.08047 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  30] CRP stack4: 
--------------------------------------------------------------------------------
   27:     '''
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
-  31:         self._length = 0
+  31:         self._length = 1
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
--------------------------------------------------------------------------------
[0.08307 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_19

def test_case_19():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.size()
>       assert var_0 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:131: AssertionError
   - [#  31] CRP stack4: 
--------------------------------------------------------------------------------
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
-  44:         self._length += 1
+  44:         self._length += 2
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
--------------------------------------------------------------------------------
[0.06469 s] survived
   - [#  32] CRP stack4: 
--------------------------------------------------------------------------------
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
-  49:             raise IndexError('Cannot pop from an empty list')
+  49:             raise IndexError('mutpy')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
--------------------------------------------------------------------------------
[0.06480 s] survived
   - [#  33] CRP stack4: 
--------------------------------------------------------------------------------
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
-  49:             raise IndexError('Cannot pop from an empty list')
+  49:             raise IndexError('')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
--------------------------------------------------------------------------------
[0.06371 s] survived
   - [#  34] CRP stack4: 
--------------------------------------------------------------------------------
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
-  52:         self._length -= 1
+  52:         self._length -= 2
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
--------------------------------------------------------------------------------
[0.06395 s] survived
   - [#  35] CRP stack4: 
--------------------------------------------------------------------------------
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
-  72:             self._length -= 1
+  72:             self._length -= 2
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
--------------------------------------------------------------------------------
[0.06544 s] survived
   - [#  36] CRP stack4: 
--------------------------------------------------------------------------------
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
-  76:                 self._length -= 1
+  76:                 self._length -= 2
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
--------------------------------------------------------------------------------
[0.06490 s] survived
   - [#  37] CRP stack4: 
--------------------------------------------------------------------------------
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
-  82:         display = '('
+  82:         display = 'mutpy'
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
--------------------------------------------------------------------------------
[0.08164 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  38] CRP stack4: 
--------------------------------------------------------------------------------
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
-  82:         display = '('
+  82:         display = ''
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
--------------------------------------------------------------------------------
[0.08325 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  39] CRP stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
-  84:             display += str(curr.data) + ', '
+  84:             display += str(curr.data) + 'mutpy'
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.08397 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  40] CRP stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
-  84:             display += str(curr.data) + ', '
+  84:             display += str(curr.data) + ''
   85:             curr = curr.next
   86:         return display[:-2] + ')'
   87: 
   88: 
--------------------------------------------------------------------------------
[0.08322 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  41] CRP stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:-3] + ')'
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.09885 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  42] CRP stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:-2] + 'mutpy'
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.08496 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  43] CRP stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:-2] + ''
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.08123 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  44] EHD stack4: 
--------------------------------------------------------------------------------
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
-  37:             if data:
-  38:                 self.push(data)
+  37:             raise
+  38:     
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.07382 s] incompetent

TypeError: stack4:34: TypeError: 'NoneType' object is not iterable

   - [#  45] EXS stack4: 
--------------------------------------------------------------------------------
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
-  37:             if data:
-  38:                 self.push(data)
+  37:             pass
+  38:     
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.07513 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_2

def test_case_2():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        linked_list_0 = module_0.LinkedList(stack_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:17: AssertionError
   - [#  46] LCR stack4: 
--------------------------------------------------------------------------------
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
-  70:         if (curr and val is self.head.data):
+  70:         if (curr or val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
--------------------------------------------------------------------------------
[0.08155 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_13

def test_case_13():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
>       var_0 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c025390>
val = <stack4.LinkedList object at 0x7f420c025390>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack4:70: AttributeError
   - [#  47] LCR stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
-  74:             if (curr.next and curr.next.data == val):
+  74:             if (curr.next or curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
--------------------------------------------------------------------------------
[0.08243 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_11

def test_case_11():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
>       var_1 = linked_list_0.remove(var_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c425f00>, val = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack4:74: AttributeError
   - [#  48] OIL stack4: 
--------------------------------------------------------------------------------
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
-  36:         except TypeError:
+  36:                 breakexcept TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
--------------------------------------------------------------------------------
[0.08177 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  49] OIL stack4: 
--------------------------------------------------------------------------------
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
-  66:     
+  66:             break
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
--------------------------------------------------------------------------------
[0.06537 s] survived
   - [#  50] OIL stack4: 
--------------------------------------------------------------------------------
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
-  78:     
+  78:             break
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
--------------------------------------------------------------------------------
[0.06209 s] survived
   - [#  51] OIL stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
-  87: 
+  86:             break
+  87:         return display[:-2] + ')'
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
   91: 
--------------------------------------------------------------------------------
[0.08269 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  52] RIL stack4: 
--------------------------------------------------------------------------------
   30:         '''Linked list initialized with head.'''
   31:         self._length = 0
   32:         self.head = None
   33:         try:
-  34:             for val in data:
+  34:             for val in reversed(data):
   35:                 self.push(val)
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
--------------------------------------------------------------------------------
[0.08258 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  53] ROR stack4: 
--------------------------------------------------------------------------------
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
-  63:             if curr.data == val:
+  63:             if curr.data != val:
   64:                 return curr
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
--------------------------------------------------------------------------------
[0.07655 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.search(linked_list_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:39: AssertionError
   - [#  54] ROR stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
-  74:             if (curr.next and curr.next.data == val):
+  74:             if (curr.next and curr.next.data != val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
--------------------------------------------------------------------------------
[0.08146 s] survived
   - [#  55] SDI stack4: 
--------------------------------------------------------------------------------
    5: 
    6:     Data attribute for data storage and Next for pointer to next node.
    7:     '''
    8:     
-   9:     def __init__(self, data, next_node=None):
-  10:         '''Attribute data and next_node.'''
-  11:         self.data = data
-  12:         self.next = next_node
-  13: 
+   9:     @staticmethod
+  10:     def __init__(self, data, next_node=None):
+  11:         '''Attribute data and next_node.'''
+  12:         self.data = data
+  13:         self.next = next_node
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
   17: 
--------------------------------------------------------------------------------
[0.07621 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
stack4:43: in push
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 'G', data = None, next_node = None

>   ???
E   AttributeError: 'str' object has no attribute 'data'

stack4:12: AttributeError
   - [#  56] SDI stack4: 
--------------------------------------------------------------------------------
   25:     display() - will return a unicode string representing the list as
   26:     if it were a Python tuple literal: "(12, \'sam\', 37, \'tango\')"
   27:     '''
   28:     
-  29:     def __init__(self, data=None):
-  30:         '''Linked list initialized with head.'''
-  31:         self._length = 0
-  32:         self.head = None
-  33:         try:
-  34:             for val in data:
-  35:                 self.push(val)
-  36:         except TypeError:
-  37:             if data:
-  38:                 self.push(data)
-  39:     
+  29:     @staticmethod
+  30:     def __init__(self, data=None):
+  31:         '''Linked list initialized with head.'''
+  32:         self._length = 0
+  33:         self.head = None
+  34:         try:
+  35:             for val in data:
+  36:                 self.push(val)
+  37:         except TypeError:
+  38:             if data:
+  39:                 self.push(data)
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
--------------------------------------------------------------------------------
[0.07379 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 'G0BByujKc^c[c+', data = None

>   ???
E   AttributeError: 'str' object has no attribute '_length'

stack4:32: AttributeError
   - [#  57] SDI stack4: 
--------------------------------------------------------------------------------
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
-  40:     def push(self, val):
-  41:         '''Insert a value at the head of the list.'''
-  42:         old_head = self.head
-  43:         self.head = Node(val, old_head)
-  44:         self._length += 1
-  45:     
+  40:     @staticmethod
+  41:     def push(self, val):
+  42:         '''Insert a value at the head of the list.'''
+  43:         old_head = self.head
+  44:         self.head = Node(val, old_head)
+  45:         self._length += 1
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
--------------------------------------------------------------------------------
[0.07405 s] incompetent

TypeError: stack4:38: TypeError: LinkedList.push() missing 1 required positional argument: 'val'

   - [#  58] SDI stack4: 
--------------------------------------------------------------------------------
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
-  46:     def pop(self):
-  47:         '''Remove the first value and return it.'''
-  48:         if not (self.head):
-  49:             raise IndexError('Cannot pop from an empty list')
-  50:         to_return = self.head
-  51:         self.head = self.head.next
-  52:         self._length -= 1
-  53:         return to_return.data
-  54:     
+  46:     @staticmethod
+  47:     def pop(self):
+  48:         '''Remove the first value and return it.'''
+  49:         if not (self.head):
+  50:             raise IndexError('Cannot pop from an empty list')
+  51:         to_return = self.head
+  52:         self.head = self.head.next
+  53:         self._length -= 1
+  54:         return to_return.data
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
--------------------------------------------------------------------------------
[0.07601 s] incompetent

TypeError: stack4:111: TypeError: LinkedList.pop() missing 1 required positional argument: 'self'

   - [#  59] SDI stack4: 
--------------------------------------------------------------------------------
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
-  55:     def size(self):
-  56:         '''Return the length of the list.'''
-  57:         return self._length
-  58:     
+  55:     @staticmethod
+  56:     def size(self):
+  57:         '''Return the length of the list.'''
+  58:         return self._length
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
--------------------------------------------------------------------------------
[0.08266 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack4/MIO-WHOLE_SUITE/test_stack4_MIO.py:130: TypeError: LinkedList.size() missing 1 required positional argument: 'self'

   - [#  60] SDI stack4: 
--------------------------------------------------------------------------------
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
   58:     
-  59:     def search(self, val):
-  60:         '''Return the node containing val.'''
-  61:         curr = self.head
-  62:         while curr:
-  63:             if curr.data == val:
-  64:                 return curr
-  65:             curr = curr.next
-  66:     
+  59:     @staticmethod
+  60:     def search(self, val):
+  61:         '''Return the node containing val.'''
+  62:         curr = self.head
+  63:         while curr:
+  64:             if curr.data == val:
+  65:                 return curr
+  66:             curr = curr.next
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
--------------------------------------------------------------------------------
[0.07621 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack4/MIO-WHOLE_SUITE/test_stack4_MIO.py:38: TypeError: LinkedList.search() missing 1 required positional argument: 'val'

   - [#  61] SDI stack4: 
--------------------------------------------------------------------------------
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
   66:     
-  67:     def remove(self, val):
-  68:         '''Remove node from list if exists.'''
-  69:         curr = self.head
-  70:         if (curr and val is self.head.data):
-  71:             self.head = self.head.next
-  72:             self._length -= 1
-  73:         while curr:
-  74:             if (curr.next and curr.next.data == val):
-  75:                 curr.next = curr.next.next
-  76:                 self._length -= 1
-  77:             curr = curr.next
-  78:     
+  67:     @staticmethod
+  68:     def remove(self, val):
+  69:         '''Remove node from list if exists.'''
+  70:         curr = self.head
+  71:         if (curr and val is self.head.data):
+  72:             self.head = self.head.next
+  73:             self._length -= 1
+  74:         while curr:
+  75:             if (curr.next and curr.next.data == val):
+  76:                 curr.next = curr.next.next
+  77:                 self._length -= 1
+  78:             curr = curr.next
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
--------------------------------------------------------------------------------
[0.08144 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack4/MIO-WHOLE_SUITE/test_stack4_MIO.py:68: TypeError: LinkedList.remove() missing 1 required positional argument: 'val'

   - [#  62] SDI stack4: 
--------------------------------------------------------------------------------
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
-  79:     def display(self):
-  80:         '''Display list as a tuple.'''
-  81:         curr = self.head
-  82:         display = '('
-  83:         while curr:
-  84:             display += str(curr.data) + ', '
-  85:             curr = curr.next
-  86:         return display[:-2] + ')'
-  87: 
+  79:     @staticmethod
+  80:     def display(self):
+  81:         '''Display list as a tuple.'''
+  82:         curr = self.head
+  83:         display = '('
+  84:         while curr:
+  85:             display += str(curr.data) + ', '
+  86:             curr = curr.next
+  87:         return display[:-2] + ')'
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
   91: 
--------------------------------------------------------------------------------
[0.08139 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack4/MIO-WHOLE_SUITE/test_stack4_MIO.py:104: TypeError: LinkedList.display() missing 1 required positional argument: 'self'

   - [#  63] SDI stack4: 
--------------------------------------------------------------------------------
   97:     If the stack is empty, attempts to call pop should raise an exception.
   98: 
   99:     '''
  100:     
- 101:     def __init__(self, data=None):
- 102:         '''Initialization.'''
- 103:         self._stack = LinkedList(data)
- 104:     
+ 101:     @staticmethod
+ 102:     def __init__(self, data=None):
+ 103:         '''Initialization.'''
+ 104:         self._stack = LinkedList(data)
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
--------------------------------------------------------------------------------
[0.07578 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 'G0BByujKc^c[c+', data = None

>   ???
E   AttributeError: 'str' object has no attribute '_stack'

stack4:104: AttributeError
   - [#  64] SDI stack4: 
--------------------------------------------------------------------------------
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
  103:         self._stack = LinkedList(data)
  104:     
- 105:     def push(self, val):
- 106:         '''Add val to the stack.'''
- 107:         self._stack.push(val)
- 108:     
+ 105:     @staticmethod
+ 106:     def push(self, val):
+ 107:         '''Add val to the stack.'''
+ 108:         self._stack.push(val)
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.07480 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack4/MIO-WHOLE_SUITE/test_stack4_MIO.py:26: TypeError: Stack.push() missing 1 required positional argument: 'val'

   - [#  65] SDI stack4: 
--------------------------------------------------------------------------------
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
  108:     
- 109:     def pop(self):
- 110:         '''Remove item off the stack.'''
- 111:         self._stack.pop()
+ 109:     @staticmethod
+ 110:     def pop(self):
+ 111:         '''Remove item off the stack.'''
+ 112:         self._stack.pop()
--------------------------------------------------------------------------------
[0.07476 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack4/MIO-WHOLE_SUITE/test_stack4_MIO.py:27: TypeError: Stack.pop() missing 1 required positional argument: 'self'

   - [#  66] SDL stack4: 
--------------------------------------------------------------------------------
    7:     '''
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
-  11:         self.data = data
+  11:         pass
   12:         self.next = next_node
   13: 
   14: 
   15: class LinkedList(object):
--------------------------------------------------------------------------------
[0.07603 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c142b90>

>   ???
E   AttributeError: 'Node' object has no attribute 'data'

stack4:53: AttributeError
   - [#  67] SDL stack4: 
--------------------------------------------------------------------------------
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
   11:         self.data = data
-  12:         self.next = next_node
+  12:         pass
   13: 
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
--------------------------------------------------------------------------------
[0.09294 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bf95150>

>   ???
E   AttributeError: 'Node' object has no attribute 'next'

stack4:51: AttributeError
   - [#  68] SDL stack4: 
--------------------------------------------------------------------------------
   27:     '''
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
-  31:         self._length = 0
+  31:         pass
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
--------------------------------------------------------------------------------
[0.07666 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c441510>, val = 'G'

>   ???
E   AttributeError: 'LinkedList' object has no attribute '_length'

stack4:44: AttributeError
   - [#  69] SDL stack4: 
--------------------------------------------------------------------------------
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
   31:         self._length = 0
-  32:         self.head = None
+  32:         pass
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
--------------------------------------------------------------------------------
[0.07568 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c12bb50>, val = 'G'

>   ???
E   AttributeError: 'LinkedList' object has no attribute 'head'

stack4:42: AttributeError
   - [#  70] SDL stack4: 
--------------------------------------------------------------------------------
   31:         self._length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
-  35:                 self.push(val)
+  35:                 pass
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
--------------------------------------------------------------------------------
[0.07399 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_8

def test_case_8():
        str_0 = 'bn\tyARa`$?WRR@6]n@'
        linked_list_0 = module_0.LinkedList(str_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:53: AssertionError
   - [#  71] SDL stack4: 
--------------------------------------------------------------------------------
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
   37:             if data:
-  38:                 self.push(data)
+  38:                 pass
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.07613 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_2

def test_case_2():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        linked_list_0 = module_0.LinkedList(stack_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:17: AssertionError
   - [#  72] SDL stack4: 
--------------------------------------------------------------------------------
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
-  42:         old_head = self.head
+  42:         pass
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
   46:     def pop(self):
--------------------------------------------------------------------------------
[0.07609 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c127940>, val = 'G'

>   ???
E   NameError: name 'old_head' is not defined

stack4:43: NameError
   - [#  73] SDL stack4: 
--------------------------------------------------------------------------------
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
-  43:         self.head = Node(val, old_head)
+  43:         pass
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
--------------------------------------------------------------------------------
[0.07654 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_2

def test_case_2():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        linked_list_0 = module_0.LinkedList(stack_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:17: AssertionError
   - [#  74] SDL stack4: 
--------------------------------------------------------------------------------
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
-  50:         to_return = self.head
+  50:         pass
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
--------------------------------------------------------------------------------
[0.07766 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bf60ca0>

>   ???
E   NameError: name 'to_return' is not defined

stack4:53: NameError
   - [#  75] SDL stack4: 
--------------------------------------------------------------------------------
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
-  51:         self.head = self.head.next
+  51:         pass
   52:         self._length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
--------------------------------------------------------------------------------
[0.06475 s] survived
   - [#  76] SDL stack4: 
--------------------------------------------------------------------------------
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
-  53:         return to_return.data
+  53:         pass
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
   57:         return self._length
--------------------------------------------------------------------------------
[0.06564 s] survived
   - [#  77] SDL stack4: 
--------------------------------------------------------------------------------
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
-  57:         return self._length
+  57:         pass
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
--------------------------------------------------------------------------------
[0.08422 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_19

def test_case_19():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.size()
>       assert var_0 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:131: AssertionError
   - [#  78] SDL stack4: 
--------------------------------------------------------------------------------
   57:         return self._length
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
-  61:         curr = self.head
+  61:         pass
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
--------------------------------------------------------------------------------
[0.07683 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
>       var_1 = linked_list_0.search(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c128b50>
val = <stack4.LinkedList object at 0x7f420c128b50>

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

stack4:62: UnboundLocalError
   - [#  79] SDL stack4: 
--------------------------------------------------------------------------------
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
   63:             if curr.data == val:
-  64:                 return curr
+  64:                 pass
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
--------------------------------------------------------------------------------
[0.07596 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.search(linked_list_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:39: AssertionError
   - [#  80] SDL stack4: 
--------------------------------------------------------------------------------
   61:         curr = self.head
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
-  65:             curr = curr.next
+  65:             pass
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
--------------------------------------------------------------------------------
[5.00631 s] timeout
   - [#  81] SDL stack4: 
--------------------------------------------------------------------------------
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
-  69:         curr = self.head
+  69:         pass
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
--------------------------------------------------------------------------------
[0.09607 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_10

def test_case_10():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.push(linked_list_0)
>       var_2 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c36e6b0>
val = <stack4.LinkedList object at 0x7f420c36e6b0>

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

stack4:70: UnboundLocalError
   - [#  82] SDL stack4: 
--------------------------------------------------------------------------------
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
-  71:             self.head = self.head.next
+  71:             pass
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
--------------------------------------------------------------------------------
[0.08205 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_12

def test_case_12():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        linked_list_1 = module_0.LinkedList(linked_list_0)
        assert f'{type(linked_list_1.head).__module__}.{type(linked_list_1.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_1.remove(linked_list_0)
>       assert linked_list_1.head is None
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:84: AssertionError
   - [#  83] SDL stack4: 
--------------------------------------------------------------------------------
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
-  75:                 curr.next = curr.next.next
+  75:                 pass
   76:                 self._length -= 1
   77:             curr = curr.next
   78:     
   79:     def display(self):
--------------------------------------------------------------------------------
[0.06371 s] survived
   - [#  84] SDL stack4: 
--------------------------------------------------------------------------------
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
-  77:             curr = curr.next
+  77:             pass
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
--------------------------------------------------------------------------------
[5.00592 s] timeout
   - [#  85] SDL stack4: 
--------------------------------------------------------------------------------
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
-  81:         curr = self.head
+  81:         pass
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
--------------------------------------------------------------------------------
[0.07918 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MIO-WHOLE_SUITE/test_stack4_MIO.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bea2fe0>

>   ???
E   UnboundLocalError: local variable 'curr' referenced before assignment

stack4:83: UnboundLocalError
   - [#  86] SDL stack4: 
--------------------------------------------------------------------------------
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
-  82:         display = '('
+  82:         pass
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
   86:         return display[:-2] + ')'
--------------------------------------------------------------------------------
[0.08109 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MIO-WHOLE_SUITE/test_stack4_MIO.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c36f280>

>   ???
E   UnboundLocalError: local variable 'display' referenced before assignment

stack4:84: UnboundLocalError
   - [#  87] SDL stack4: 
--------------------------------------------------------------------------------
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
-  85:             curr = curr.next
+  85:             pass
   86:         return display[:-2] + ')'
   87: 
   88: 
   89: class Stack(object):
--------------------------------------------------------------------------------
[5.00628 s] timeout
   - [#  88] SDL stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         pass
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.08528 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  89] SDL stack4: 
--------------------------------------------------------------------------------
   99:     '''
  100:     
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
- 103:         self._stack = LinkedList(data)
+ 103:         pass
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
--------------------------------------------------------------------------------
[0.07495 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
>       var_0 = stack_0.push(stack_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.Stack object at 0x7f420c31ff70>
val = <stack4.Stack object at 0x7f420c31ff70>

>   ???
E   AttributeError: 'Stack' object has no attribute '_stack'

stack4:107: AttributeError
   - [#  90] SDL stack4: 
--------------------------------------------------------------------------------
  103:         self._stack = LinkedList(data)
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
- 107:         self._stack.push(val)
+ 107:         pass
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.07825 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c2d33a0>

>   ???
E   IndexError: Cannot pop from an empty list

stack4:49: IndexError
   - [#  91] SDL stack4: 
--------------------------------------------------------------------------------
  107:         self._stack.push(val)
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
- 111:         self._stack.pop()
+ 111:         pass
--------------------------------------------------------------------------------
[0.07156 s] survived
   - [#  92] SIR stack4: 
--------------------------------------------------------------------------------
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
-  86:         return display[:-2] + ')'
+  86:         return display[:] + ')'
   87: 
   88: 
   89: class Stack(object):
   90:     '''Implementation of Stack.
--------------------------------------------------------------------------------
[0.08216 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
   - [#  93] SVD stack4: 
--------------------------------------------------------------------------------
    7:     '''
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
-  11:         self.data = data
+  11:         data = data
   12:         self.next = next_node
   13: 
   14: 
   15: class LinkedList(object):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  94] SVD stack4: 
--------------------------------------------------------------------------------
    8:     
    9:     def __init__(self, data, next_node=None):
   10:         '''Attribute data and next_node.'''
   11:         self.data = data
-  12:         self.next = next_node
+  12:         next = next_node
   13: 
   14: 
   15: class LinkedList(object):
   16:     '''Method for linked list.
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  95] SVD stack4: 
--------------------------------------------------------------------------------
   27:     '''
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
-  31:         self._length = 0
+  31:         _length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  96] SVD stack4: 
--------------------------------------------------------------------------------
   28:     
   29:     def __init__(self, data=None):
   30:         '''Linked list initialized with head.'''
   31:         self._length = 0
-  32:         self.head = None
+  32:         head = None
   33:         try:
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  97] SVD stack4: 
--------------------------------------------------------------------------------
   31:         self._length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
-  35:                 self.push(val)
+  35:                 push(val)
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
--------------------------------------------------------------------------------
[0.07291 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bf878e0>, data = 'G0BByujKc^c[c+'

>   ???
E   NameError: name 'push' is not defined

stack4:35: NameError
   - [#  98] SVD stack4: 
--------------------------------------------------------------------------------
   34:             for val in data:
   35:                 self.push(val)
   36:         except TypeError:
   37:             if data:
-  38:                 self.push(data)
+  38:                 push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
--------------------------------------------------------------------------------
[0.07222 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_2

self = <stack4.LinkedList object at 0x7f420c196080>
data = <stack4.Stack object at 0x7f420c1961a0>

>   ???
E   TypeError: 'Stack' object is not iterable

stack4:34: TypeError

During handling of the above exception, another exception occurred:

    def test_case_2():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
>       linked_list_0 = module_0.LinkedList(stack_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c196080>
data = <stack4.Stack object at 0x7f420c1961a0>

>   ???
E   NameError: name 'push' is not defined

stack4:38: NameError
   - [#  99] SVD stack4: 
--------------------------------------------------------------------------------
   38:                 self.push(data)
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
-  42:         old_head = self.head
+  42:         old_head = head
   43:         self.head = Node(val, old_head)
   44:         self._length += 1
   45:     
   46:     def pop(self):
--------------------------------------------------------------------------------
[0.07481 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_0

def test_case_0():
        str_0 = 'G0BByujKc^c[c+'
>       stack_0 = module_0.Stack(str_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:103: in __init__
    ???
stack4:35: in __init__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bea0160>, val = 'G'

>   ???
E   NameError: name 'head' is not defined

stack4:42: NameError
   - [# 100] SVD stack4: 
--------------------------------------------------------------------------------
   39:     
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
-  43:         self.head = Node(val, old_head)
+  43:         head = Node(val, old_head)
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 101] SVD stack4: 
--------------------------------------------------------------------------------
   40:     def push(self, val):
   41:         '''Insert a value at the head of the list.'''
   42:         old_head = self.head
   43:         self.head = Node(val, old_head)
-  44:         self._length += 1
+  44:         _length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 102] SVD stack4: 
--------------------------------------------------------------------------------
   44:         self._length += 1
   45:     
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
-  48:         if not (self.head):
+  48:         if not head:
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
   52:         self._length -= 1
--------------------------------------------------------------------------------
[0.07584 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bf87040>

>   ???
E   NameError: name 'head' is not defined

stack4:48: NameError
   - [# 103] SVD stack4: 
--------------------------------------------------------------------------------
   46:     def pop(self):
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
-  50:         to_return = self.head
+  50:         to_return = head
   51:         self.head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
--------------------------------------------------------------------------------
[0.07636 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c128e80>

>   ???
E   NameError: name 'head' is not defined

stack4:50: NameError
   - [# 104] SVD stack4: 
--------------------------------------------------------------------------------
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
-  51:         self.head = self.head.next
+  51:         head = self.head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 105] SVD stack4: 
--------------------------------------------------------------------------------
   47:         '''Remove the first value and return it.'''
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
-  51:         self.head = self.head.next
+  51:         self.head = head.next
   52:         self._length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
--------------------------------------------------------------------------------
[0.07647 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack4:111: in pop
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c2d2470>

>   ???
E   NameError: name 'head' is not defined

stack4:51: NameError
   - [# 106] SVD stack4: 
--------------------------------------------------------------------------------
   48:         if not (self.head):
   49:             raise IndexError('Cannot pop from an empty list')
   50:         to_return = self.head
   51:         self.head = self.head.next
-  52:         self._length -= 1
+  52:         _length -= 1
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 107] SVD stack4: 
--------------------------------------------------------------------------------
   53:         return to_return.data
   54:     
   55:     def size(self):
   56:         '''Return the length of the list.'''
-  57:         return self._length
+  57:         return _length
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
--------------------------------------------------------------------------------
[0.08102 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_19

def test_case_19():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
>       var_0 = linked_list_0.size()

MIO-WHOLE_SUITE/test_stack4_MIO.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c0e3df0>

>   ???
E   NameError: name '_length' is not defined

stack4:57: NameError
   - [# 108] SVD stack4: 
--------------------------------------------------------------------------------
   57:         return self._length
   58:     
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
-  61:         curr = self.head
+  61:         curr = head
   62:         while curr:
   63:             if curr.data == val:
   64:                 return curr
   65:             curr = curr.next
--------------------------------------------------------------------------------
[0.07577 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
>       var_1 = linked_list_0.search(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c1961d0>
val = <stack4.LinkedList object at 0x7f420c1961d0>

>   ???
E   NameError: name 'head' is not defined

stack4:61: NameError
   - [# 109] SVD stack4: 
--------------------------------------------------------------------------------
   65:             curr = curr.next
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
-  69:         curr = self.head
+  69:         curr = head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
--------------------------------------------------------------------------------
[0.09501 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_10

def test_case_10():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.push(linked_list_0)
>       var_2 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420bea3310>
val = <stack4.LinkedList object at 0x7f420bea3310>

>   ???
E   NameError: name 'head' is not defined

stack4:69: NameError
   - [# 110] SVD stack4: 
--------------------------------------------------------------------------------
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
-  70:         if (curr and val is self.head.data):
+  70:         if (curr and val is head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
--------------------------------------------------------------------------------
[0.08160 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_10

def test_case_10():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.push(linked_list_0)
>       var_2 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c086140>
val = <stack4.LinkedList object at 0x7f420c086140>

>   ???
E   NameError: name 'head' is not defined

stack4:70: NameError
   - [# 111] SVD stack4: 
--------------------------------------------------------------------------------
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
-  71:             self.head = self.head.next
+  71:             head = self.head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 112] SVD stack4: 
--------------------------------------------------------------------------------
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
-  71:             self.head = self.head.next
+  71:             self.head = head.next
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
--------------------------------------------------------------------------------
[0.07899 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_10

def test_case_10():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.push(linked_list_0)
>       var_2 = linked_list_0.remove(linked_list_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c1162c0>
val = <stack4.LinkedList object at 0x7f420c1162c0>

>   ???
E   NameError: name 'head' is not defined

stack4:71: NameError
   - [# 113] SVD stack4: 
--------------------------------------------------------------------------------
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
-  72:             self._length -= 1
+  72:             _length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
   76:                 self._length -= 1
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 114] SVD stack4: 
--------------------------------------------------------------------------------
   72:             self._length -= 1
   73:         while curr:
   74:             if (curr.next and curr.next.data == val):
   75:                 curr.next = curr.next.next
-  76:                 self._length -= 1
+  76:                 _length -= 1
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 115] SVD stack4: 
--------------------------------------------------------------------------------
   77:             curr = curr.next
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
-  81:         curr = self.head
+  81:         curr = head
   82:         display = '('
   83:         while curr:
   84:             display += str(curr.data) + ', '
   85:             curr = curr.next
--------------------------------------------------------------------------------
[0.08026 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
>       var_0 = linked_list_0.display()

MIO-WHOLE_SUITE/test_stack4_MIO.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.LinkedList object at 0x7f420c1f70d0>

>   ???
E   NameError: name 'head' is not defined

stack4:81: NameError
   - [# 116] SVD stack4: 
--------------------------------------------------------------------------------
   99:     '''
  100:     
  101:     def __init__(self, data=None):
  102:         '''Initialization.'''
- 103:         self._stack = LinkedList(data)
+ 103:         _stack = LinkedList(data)
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
  107:         self._stack.push(val)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 117] SVD stack4: 
--------------------------------------------------------------------------------
  103:         self._stack = LinkedList(data)
  104:     
  105:     def push(self, val):
  106:         '''Add val to the stack.'''
- 107:         self._stack.push(val)
+ 107:         _stack.push(val)
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
  111:         self._stack.pop()
--------------------------------------------------------------------------------
[0.07320 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
>       var_0 = stack_0.push(stack_0)

MIO-WHOLE_SUITE/test_stack4_MIO.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.Stack object at 0x7f420c0d18a0>
val = <stack4.Stack object at 0x7f420c0d18a0>

>   ???
E   NameError: name '_stack' is not defined

stack4:107: NameError
   - [# 118] SVD stack4: 
--------------------------------------------------------------------------------
  107:         self._stack.push(val)
  108:     
  109:     def pop(self):
  110:         '''Remove item off the stack.'''
- 111:         self._stack.pop()
+ 111:         _stack.pop()
--------------------------------------------------------------------------------
[0.07693 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert f'{type(stack_0).__module__}.{type(stack_0).__qualname__}' == 'stack4.Stack'
        var_0 = stack_0.push(stack_0)
>       var_1 = stack_0.pop()

MIO-WHOLE_SUITE/test_stack4_MIO.py:27: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack4.Stack object at 0x7f420c0d1ed0>

>   ???
E   NameError: name '_stack' is not defined

stack4:111: NameError
   - [# 119] ZIL stack4: 
--------------------------------------------------------------------------------
   31:         self._length = 0
   32:         self.head = None
   33:         try:
   34:             for val in data:
-  35:                 self.push(val)
+  35:                 break
   36:         except TypeError:
   37:             if data:
   38:                 self.push(data)
   39:     
--------------------------------------------------------------------------------
[0.07608 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_8

def test_case_8():
        str_0 = 'bn\tyARa`$?WRR@6]n@'
        linked_list_0 = module_0.LinkedList(str_0)
>       assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:53: AssertionError
   - [# 120] ZIL stack4: 
--------------------------------------------------------------------------------
   59:     def search(self, val):
   60:         '''Return the node containing val.'''
   61:         curr = self.head
   62:         while curr:
-  63:             if curr.data == val:
-  64:                 return curr
-  65:             curr = curr.next
+  63:             break
+  64:     
+  65:     
   66:     
   67:     def remove(self, val):
   68:         '''Remove node from list if exists.'''
   69:         curr = self.head
--------------------------------------------------------------------------------
[0.07494 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_6

def test_case_6():
        linked_list_0 = module_0.LinkedList()
        assert f'{type(linked_list_0).__module__}.{type(linked_list_0).__qualname__}' == 'stack4.LinkedList'
        assert linked_list_0.head is None
        var_0 = linked_list_0.push(linked_list_0)
        var_1 = linked_list_0.search(linked_list_0)
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack4.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:39: AssertionError
   - [# 121] ZIL stack4: 
--------------------------------------------------------------------------------
   70:         if (curr and val is self.head.data):
   71:             self.head = self.head.next
   72:             self._length -= 1
   73:         while curr:
-  74:             if (curr.next and curr.next.data == val):
-  75:                 curr.next = curr.next.next
-  76:                 self._length -= 1
-  77:             curr = curr.next
+  74:             break
+  75:     
+  76:     
+  77:     
   78:     
   79:     def display(self):
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
--------------------------------------------------------------------------------
[0.06499 s] survived
   - [# 122] ZIL stack4: 
--------------------------------------------------------------------------------
   80:         '''Display list as a tuple.'''
   81:         curr = self.head
   82:         display = '('
   83:         while curr:
-  84:             display += str(curr.data) + ', '
-  85:             curr = curr.next
+  84:             break
+  85:         
   86:         return display[:-2] + ')'
   87: 
   88: 
   89: class Stack(object):
--------------------------------------------------------------------------------
[0.09981 s] killed by MIO-WHOLE_SUITE/test_stack4_MIO.py::test_case_15

def test_case_15():
        str_0 = 'j\tml:RED=@\t\r\x0c/ev'
        linked_list_0 = module_0.LinkedList(str_0)
        assert f'{type(linked_list_0.head).__module__}.{type(linked_list_0.head).__qualname__}' == 'stack4.Node'
        var_0 = linked_list_0.display()
>       assert var_0 == '(v, e, /, \x0c, \r, \t, @, =, D, E, R, :, l, m, \t, j)'
E       AssertionError

MIO-WHOLE_SUITE/test_stack4_MIO.py:105: AssertionError
[*] Mutation score [32.88270 s]: 80.4%
   - all: 122
   - killed: 74 (60.7%)
   - survived: 19 (15.6%)
   - incompetent: 25 (20.5%)
   - timeout: 4 (3.3%)
