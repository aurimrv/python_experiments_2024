[*] Start mutation process:
   - targets: queue3.py
   - tests: ./MIO-WHOLE_SUITE
[*] 32 tests passed:
   - test_queue3_MIO [0.06193 s]
   - test_queue3_WHOLE_SUITE [0.04121 s]
[*] Start mutants generation and execution:
   - [#   1] ASR queue3: 
--------------------------------------------------------------------------------
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
-  30:             self.__size += 1
+  30:             self.__size -= 1
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
--------------------------------------------------------------------------------
[0.07468 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
        none_type_0 = doubly_linked_list_0.addAtHead(var_2)
>       assert len(doubly_linked_list_0) == 1
E       ValueError: __len__() should return >= 0

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:72: ValueError
   - [#   2] ASR queue3: 
--------------------------------------------------------------------------------
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
-  38:             self.__size += 1
+  38:             self.__size -= 1
   39:     
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
--------------------------------------------------------------------------------
[0.08001 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
        none_type_3 = doubly_linked_list_1.addAtHead(str_0)
>       assert len(doubly_linked_list_1) == 2
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:215: AssertionError
   - [#   3] ASR queue3: 
--------------------------------------------------------------------------------
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
-  49:             self.__size += 1
+  49:             self.__size -= 1
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
--------------------------------------------------------------------------------
[0.07344 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [#   4] ASR queue3: 
--------------------------------------------------------------------------------
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
-  55:             self.__size += 1
+  55:             self.__size -= 1
   56:     
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
--------------------------------------------------------------------------------
[0.07418 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [#   5] ASR queue3: 
--------------------------------------------------------------------------------
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
-  67:             self.__size -= 1
+  67:             self.__size += 1
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
--------------------------------------------------------------------------------
[0.07757 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_7

def test_case_7():
        bool_0 = False
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = queue_0.enqueue(bool_0)
        str_1 = queue_0.__str__()
        assert str_1 == '[False]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_0 = doubly_linked_list_0.removeAtHead()
>       assert len(doubly_linked_list_0) == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:111: AssertionError
   - [#   6] ASR queue3: 
--------------------------------------------------------------------------------
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
-  76:             self.__size -= 1
+  76:             self.__size += 1
   77:             return nodeToRemove
   78:     
   79:     def removeAtTail(self):
   80:         
--------------------------------------------------------------------------------
[0.06458 s] survived
   - [#   7] ASR queue3: 
--------------------------------------------------------------------------------
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
-  91:             self.__size -= 1
+  91:             self.__size += 1
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
--------------------------------------------------------------------------------
[0.10044 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
        var_3 = doubly_linked_list_0.removeAtTail()
>       assert len(doubly_linked_list_0) == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:152: AssertionError
   - [#   8] ASR queue3: 
--------------------------------------------------------------------------------
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
-  99:             self.__size -= 1
+  99:             self.__size += 1
  100:             return nodeToRemove
  101:     
  102:     def isEmpty(self) -> bool:
  103:         
--------------------------------------------------------------------------------
[0.07902 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
>       assert len(doubly_linked_list_1) == 1
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:209: AssertionError
   - [#   9] CDI queue3: 
--------------------------------------------------------------------------------
    4: 
    5: T = TypeVar('T')
    6: 
    7: class Node:
-   8:     def __init__(self, value: T):
-   9:         self.value = value
-  10:         self.next = None
-  11:         self.prev = None
-  12: 
+   8:     @classmethod
+   9:     def __init__(self, value: T):
+  10:         self.value = value
+  11:         self.next = None
+  12:         self.prev = None
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
--------------------------------------------------------------------------------
[0.07469 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
        assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
>       assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'builtins.dict'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:25: AssertionError
   - [#  10] CDI queue3: 
--------------------------------------------------------------------------------
   11:         self.prev = None
   12: 
   13: 
   14: class DoublyLinkedList:
-  15:     def __init__(self):
-  16:         self.__sentinel = Node(None)
-  17:         self.__head = self.__sentinel
-  18:         self.__tail = self.__sentinel
-  19:         self.__size = 0
-  20:     
+  15:     @classmethod
+  16:     def __init__(self):
+  17:         self.__sentinel = Node(None)
+  18:         self.__head = self.__sentinel
+  19:         self.__tail = self.__sentinel
+  20:         self.__size = 0
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
   24:         
--------------------------------------------------------------------------------
[0.07658 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
        var_1 = queue_1.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
>       assert var_1.value is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:42: AssertionError
   - [#  11] CDI queue3: 
--------------------------------------------------------------------------------
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
-  21:     def addAtHead(self, value: T) -> None:
-  22:         
-  23:         '''Add node at head end.'''
-  24:         
-  25:         if self.__size == 0:
-  26:             newNode = Node(value)
-  27:             self.__sentinel.next = newNode
-  28:             newNode.prev = self.__sentinel
-  29:             self.__tail = newNode
-  30:             self.__size += 1
-  31:         else:
-  32:             newNode = Node(value)
-  33:             nextNode = self.__sentinel.next
-  34:             self.__sentinel.next = newNode
-  35:             newNode.prev = self.__sentinel
-  36:             newNode.next = nextNode
-  37:             nextNode.prev = newNode
-  38:             self.__size += 1
-  39:     
+  21:     @classmethod
+  22:     def addAtHead(self, value: T) -> None:
+  23:         
+  24:         '''Add node at head end.'''
+  25:         
+  26:         if self.__size == 0:
+  27:             newNode = Node(value)
+  28:             self.__sentinel.next = newNode
+  29:             newNode.prev = self.__sentinel
+  30:             self.__tail = newNode
+  31:             self.__size += 1
+  32:         else:
+  33:             newNode = Node(value)
+  34:             nextNode = self.__sentinel.next
+  35:             self.__sentinel.next = newNode
+  36:             newNode.prev = self.__sentinel
+  37:             newNode.next = nextNode
+  38:             nextNode.prev = newNode
+  39:             self.__size += 1
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
   43:         
--------------------------------------------------------------------------------
[0.07791 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>, value = None

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:26: AttributeError
   - [#  12] CDI queue3: 
--------------------------------------------------------------------------------
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
   38:             self.__size += 1
   39:     
-  40:     def addAtTail(self, value: T) -> None:
-  41:         
-  42:         '''Add node at tail end.'''
-  43:         
-  44:         if self.__size == 0:
-  45:             newNode = Node(value)
-  46:             self.__sentinel.next = newNode
-  47:             newNode.prev = self.__sentinel
-  48:             self.__tail = newNode
-  49:             self.__size += 1
-  50:         else:
-  51:             newNode = Node(value)
-  52:             self.__tail.next = newNode
-  53:             newNode.prev = self.__tail
-  54:             self.__tail = newNode
-  55:             self.__size += 1
-  56:     
+  40:     @classmethod
+  41:     def addAtTail(self, value: T) -> None:
+  42:         
+  43:         '''Add node at tail end.'''
+  44:         
+  45:         if self.__size == 0:
+  46:             newNode = Node(value)
+  47:             self.__sentinel.next = newNode
+  48:             newNode.prev = self.__sentinel
+  49:             self.__tail = newNode
+  50:             self.__size += 1
+  51:         else:
+  52:             newNode = Node(value)
+  53:             self.__tail.next = newNode
+  54:             newNode.prev = self.__tail
+  55:             self.__tail = newNode
+  56:             self.__size += 1
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
   60:         
--------------------------------------------------------------------------------
[0.07528 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>
value = {<queue3.Queue object at 0x7f33a3c774c0>: <queue3.Queue object at 0x7f33a3c774c0>, None: <queue3.Queue object at 0x7f33a3c774c0>, '[]': <queue3.Queue object at 0x7f33a3c774c0>}

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:45: AttributeError
   - [#  13] CDI queue3: 
--------------------------------------------------------------------------------
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
   55:             self.__size += 1
   56:     
-  57:     def removeAtHead(self):
-  58:         
-  59:         '''Remove node at head end.'''
-  60:         
-  61:         if self.__size == 0:
-  62:             return None
-  63:         elif self.__size == 1:
-  64:             nodeToRemove = self.__head.next
-  65:             self.__sentinel.next = None
-  66:             nodeToRemove.prev = None
-  67:             self.__size -= 1
-  68:             return nodeToRemove
-  69:         else:
-  70:             nodeToRemove = self.__head.next
-  71:             nextNode = nodeToRemove.next
-  72:             self.__sentinel.next = nextNode
-  73:             nextNode.prev = self.__sentinel
-  74:             nodeToRemove.next = None
-  75:             nodeToRemove.prev = None
-  76:             self.__size -= 1
-  77:             return nodeToRemove
-  78:     
+  57:     @classmethod
+  58:     def removeAtHead(self):
+  59:         
+  60:         '''Remove node at head end.'''
+  61:         
+  62:         if self.__size == 0:
+  63:             return None
+  64:         elif self.__size == 1:
+  65:             nodeToRemove = self.__head.next
+  66:             self.__sentinel.next = None
+  67:             nodeToRemove.prev = None
+  68:             self.__size -= 1
+  69:             return nodeToRemove
+  70:         else:
+  71:             nodeToRemove = self.__head.next
+  72:             nextNode = nodeToRemove.next
+  73:             self.__sentinel.next = nextNode
+  74:             nextNode.prev = self.__sentinel
+  75:             nodeToRemove.next = None
+  76:             nodeToRemove.prev = None
+  77:             self.__size -= 1
+  78:             return nodeToRemove
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
   82:         
--------------------------------------------------------------------------------
[0.09506 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:62: AttributeError
   - [#  14] CDI queue3: 
--------------------------------------------------------------------------------
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
   77:             return nodeToRemove
   78:     
-  79:     def removeAtTail(self):
-  80:         
-  81:         '''Remove node at tail end.'''
-  82:         
-  83:         if self.__size == 0:
-  84:             return None
-  85:         elif self.__size == 1:
-  86:             nodeToRemove = self.__tail
-  87:             nodeToRemove.prev = None
-  88:             self.__sentinel.next = None
-  89:             self.__head = self.__sentinel
-  90:             self.__tail = self.__sentinel
-  91:             self.__size -= 1
-  92:             return nodeToRemove
-  93:         else:
-  94:             nodeToRemove = self.__tail
-  95:             previous = nodeToRemove.prev
-  96:             nodeToRemove.prev = None
-  97:             previous.next = None
-  98:             self.__tail = previous
-  99:             self.__size -= 1
- 100:             return nodeToRemove
- 101:     
+  79:     @classmethod
+  80:     def removeAtTail(self):
+  81:         
+  82:         '''Remove node at tail end.'''
+  83:         
+  84:         if self.__size == 0:
+  85:             return None
+  86:         elif self.__size == 1:
+  87:             nodeToRemove = self.__tail
+  88:             nodeToRemove.prev = None
+  89:             self.__sentinel.next = None
+  90:             self.__head = self.__sentinel
+  91:             self.__tail = self.__sentinel
+  92:             self.__size -= 1
+  93:             return nodeToRemove
+  94:         else:
+  95:             nodeToRemove = self.__tail
+  96:             previous = nodeToRemove.prev
+  97:             nodeToRemove.prev = None
+  98:             previous.next = None
+  99:             self.__tail = previous
+ 100:             self.__size -= 1
+ 101:             return nodeToRemove
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
  105:         
--------------------------------------------------------------------------------
[0.07818 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
>       var_1 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:84: AttributeError
   - [#  15] CDI queue3: 
--------------------------------------------------------------------------------
   98:             self.__tail = previous
   99:             self.__size -= 1
  100:             return nodeToRemove
  101:     
- 102:     def isEmpty(self) -> bool:
- 103:         
- 104:         '''Check if linkedlist is empty'''
- 105:         
- 106:         return True if self.__size == 0 else False
- 107:     
+ 102:     @classmethod
+ 103:     def isEmpty(self) -> bool:
+ 104:         
+ 105:         '''Check if linkedlist is empty'''
+ 106:         
+ 107:         return True if self.__size == 0 else False
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
--------------------------------------------------------------------------------
[0.07502 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
>       bool_0 = doubly_linked_list_0.isEmpty()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:107: AttributeError
   - [#  16] CDI queue3: 
--------------------------------------------------------------------------------
  104:         '''Check if linkedlist is empty'''
  105:         
  106:         return True if self.__size == 0 else False
  107:     
- 108:     def getHead(self):
- 109:         
- 110:         '''Get value at the front end of the list.'''
- 111:         
- 112:         if self.__size == 0:
- 113:             return None
- 114:         else:
- 115:             return self.__head.next.value
- 116:     
+ 108:     @classmethod
+ 109:     def getHead(self):
+ 110:         
+ 111:         '''Get value at the front end of the list.'''
+ 112:         
+ 113:         if self.__size == 0:
+ 114:             return None
+ 115:         else:
+ 116:             return self.__head.next.value
  117:     def getTail(self) -> T:
  118:         
  119:         '''Get value at the tail of the list.'''
  120:         
--------------------------------------------------------------------------------
[0.07527 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:154: in getHead
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:113: AttributeError
   - [#  17] CDI queue3: 
--------------------------------------------------------------------------------
  113:             return None
  114:         else:
  115:             return self.__head.next.value
  116:     
- 117:     def getTail(self) -> T:
- 118:         
- 119:         '''Get value at the tail of the list.'''
- 120:         
- 121:         return self.__tail.value
- 122:     
+ 117:     @classmethod
+ 118:     def getTail(self) -> T:
+ 119:         
+ 120:         '''Get value at the tail of the list.'''
+ 121:         
+ 122:         return self.__tail.value
  123:     def getSize(self) -> int:
  124:         
  125:         '''Get length of the linked list.'''
  126:         
--------------------------------------------------------------------------------
[0.07476 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
>       var_0 = doubly_linked_list_0.getTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__tail'

queue3:122: AttributeError
   - [#  18] CDI queue3: 
--------------------------------------------------------------------------------
  119:         '''Get value at the tail of the list.'''
  120:         
  121:         return self.__tail.value
  122:     
- 123:     def getSize(self) -> int:
- 124:         
- 125:         '''Get length of the linked list.'''
- 126:         
- 127:         return self.__size
- 128:     
+ 123:     @classmethod
+ 124:     def getSize(self) -> int:
+ 125:         
+ 126:         '''Get length of the linked list.'''
+ 127:         
+ 128:         return self.__size
  129:     def __len__(self) -> int:
  130:         
  131:         '''Get length of the linked list.'''
  132:         
--------------------------------------------------------------------------------
[0.07950 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_5

def test_case_5():
        none_type_0 = None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       int_0 = queue_0.getSize()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:178: in getSize
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:128: AttributeError
   - [#  19] CDI queue3: 
--------------------------------------------------------------------------------
  125:         '''Get length of the linked list.'''
  126:         
  127:         return self.__size
  128:     
- 129:     def __len__(self) -> int:
- 130:         
- 131:         '''Get length of the linked list.'''
- 132:         
- 133:         return self.__size
- 134:     
+ 129:     @classmethod
+ 130:     def __len__(self) -> int:
+ 131:         
+ 132:         '''Get length of the linked list.'''
+ 133:         
+ 134:         return self.__size
  135:     def __str__(self) -> str:
  136:         
  137:         '''Return String representation of linkedlist values.'''
  138:         
--------------------------------------------------------------------------------
[0.07473 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__size'

queue3:134: AttributeError
   - [#  20] CDI queue3: 
--------------------------------------------------------------------------------
  131:         '''Get length of the linked list.'''
  132:         
  133:         return self.__size
  134:     
- 135:     def __str__(self) -> str:
- 136:         
- 137:         '''Return String representation of linkedlist values.'''
- 138:         
- 139:         arr = []
- 140:         current = self.__head.next
- 141:         while current:
- 142:             arr.append(current.value)
- 143:             current = current.next
- 144:         return str(arr)
- 145: 
+ 135:     @classmethod
+ 136:     def __str__(self) -> str:
+ 137:         
+ 138:         '''Return String representation of linkedlist values.'''
+ 139:         
+ 140:         arr = []
+ 141:         current = self.__head.next
+ 142:         while current:
+ 143:             arr.append(current.value)
+ 144:             current = current.next
+ 145:         return str(arr)
  146: class Queue:
  147:     def __init__(self):
  148:         self.__queue = DoublyLinkedList()
  149:     
--------------------------------------------------------------------------------
[0.07491 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute '_DoublyLinkedList__head'

queue3:141: AttributeError
   - [#  21] CDI queue3: 
--------------------------------------------------------------------------------
  143:             current = current.next
  144:         return str(arr)
  145: 
  146: class Queue:
- 147:     def __init__(self):
- 148:         self.__queue = DoublyLinkedList()
- 149:     
+ 147:     @classmethod
+ 148:     def __init__(self):
+ 149:         self.__queue = DoublyLinkedList()
  150:     def getHead(self) -> T:
  151:         
  152:         '''View first element in the queue.'''
  153:         
--------------------------------------------------------------------------------
[0.07549 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_2

def test_case_2():
        queue_0 = module_0.Queue()
        none_type_0 = queue_0.enqueue(queue_0)
        queue_1 = module_0.Queue()
        var_0 = queue_1.getTail()
        node_0 = module_0.Node(queue_0)
        var_1 = queue_0.getHead()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:53: AssertionError
   - [#  22] CDI queue3: 
--------------------------------------------------------------------------------
  146: class Queue:
  147:     def __init__(self):
  148:         self.__queue = DoublyLinkedList()
  149:     
- 150:     def getHead(self) -> T:
- 151:         
- 152:         '''View first element in the queue.'''
- 153:         
- 154:         return self.__queue.getHead()
- 155:     
+ 150:     @classmethod
+ 151:     def getHead(self) -> T:
+ 152:         
+ 153:         '''View first element in the queue.'''
+ 154:         
+ 155:         return self.__queue.getHead()
  156:     def getTail(self):
  157:         
  158:         '''View last element in the queue.'''
  159:         
--------------------------------------------------------------------------------
[0.07692 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:155: AttributeError
   - [#  23] CDI queue3: 
--------------------------------------------------------------------------------
  152:         '''View first element in the queue.'''
  153:         
  154:         return self.__queue.getHead()
  155:     
- 156:     def getTail(self):
- 157:         
- 158:         '''View last element in the queue.'''
- 159:         
- 160:         return self.__queue.getTail()
- 161:     
+ 156:     @classmethod
+ 157:     def getTail(self):
+ 158:         
+ 159:         '''View last element in the queue.'''
+ 160:         
+ 161:         return self.__queue.getTail()
  162:     def dequeue(self) -> T:
  163:         
  164:         '''Remove element from the queue.'''
  165:         
--------------------------------------------------------------------------------
[0.07546 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
>       var_1 = queue_0.getTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:161: AttributeError
   - [#  24] CDI queue3: 
--------------------------------------------------------------------------------
  158:         '''View last element in the queue.'''
  159:         
  160:         return self.__queue.getTail()
  161:     
- 162:     def dequeue(self) -> T:
- 163:         
- 164:         '''Remove element from the queue.'''
- 165:         
- 166:         return self.__queue.removeAtHead()
- 167:     
+ 162:     @classmethod
+ 163:     def dequeue(self) -> T:
+ 164:         
+ 165:         '''Remove element from the queue.'''
+ 166:         
+ 167:         return self.__queue.removeAtHead()
  168:     def enqueue(self, value: T) -> None:
  169:         
  170:         '''Add element to queue.'''
  171:         
--------------------------------------------------------------------------------
[0.07653 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:167: AttributeError
   - [#  25] CDI queue3: 
--------------------------------------------------------------------------------
  164:         '''Remove element from the queue.'''
  165:         
  166:         return self.__queue.removeAtHead()
  167:     
- 168:     def enqueue(self, value: T) -> None:
- 169:         
- 170:         '''Add element to queue.'''
- 171:         
- 172:         self.__queue.addAtTail(value)
- 173:     
+ 168:     @classmethod
+ 169:     def enqueue(self, value: T) -> None:
+ 170:         
+ 171:         '''Add element to queue.'''
+ 172:         
+ 173:         self.__queue.addAtTail(value)
  174:     def getSize(self) -> int:
  175:         
  176:         '''Get size of the queue.'''
  177:         
--------------------------------------------------------------------------------
[0.07532 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>
value = {<queue3.Queue object at 0x7f33a3b72410>: <queue3.Queue object at 0x7f33a3b72410>, None: <queue3.Queue object at 0x7f33a3b72410>, '[]': <queue3.Queue object at 0x7f33a3b72410>}

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:173: AttributeError
   - [#  26] CDI queue3: 
--------------------------------------------------------------------------------
  170:         '''Add element to queue.'''
  171:         
  172:         self.__queue.addAtTail(value)
  173:     
- 174:     def getSize(self) -> int:
- 175:         
- 176:         '''Get size of the queue.'''
- 177:         
- 178:         return self.__queue.getSize()
- 179:     
+ 174:     @classmethod
+ 175:     def getSize(self) -> int:
+ 176:         
+ 177:         '''Get size of the queue.'''
+ 178:         
+ 179:         return self.__queue.getSize()
  180:     def isEmpty(self) -> bool:
  181:         
  182:         '''Check if queue is empty.'''
  183:         
--------------------------------------------------------------------------------
[0.09899 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_5

def test_case_5():
        none_type_0 = None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       int_0 = queue_0.getSize()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:179: AttributeError
   - [#  27] CDI queue3: 
--------------------------------------------------------------------------------
  176:         '''Get size of the queue.'''
  177:         
  178:         return self.__queue.getSize()
  179:     
- 180:     def isEmpty(self) -> bool:
- 181:         
- 182:         '''Check if queue is empty.'''
- 183:         
- 184:         return self.__queue.isEmpty()
- 185:     
+ 180:     @classmethod
+ 181:     def isEmpty(self) -> bool:
+ 182:         
+ 183:         '''Check if queue is empty.'''
+ 184:         
+ 185:         return self.__queue.isEmpty()
  186:     def __str__(self) -> str:
  187:         
  188:         '''Get string representation of the queue.'''
  189:         
--------------------------------------------------------------------------------
[0.07598 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
>       bool_0 = queue_1.isEmpty()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:185: AttributeError
   - [#  28] CDI queue3: 
--------------------------------------------------------------------------------
  182:         '''Check if queue is empty.'''
  183:         
  184:         return self.__queue.isEmpty()
  185:     
- 186:     def __str__(self) -> str:
- 187:         
- 188:         '''Get string representation of the queue.'''
- 189:         
- 190:         return self.__queue.__str__()
- 191: 
+ 186:     @classmethod
+ 187:     def __str__(self) -> str:
+ 188:         
+ 189:         '''Get string representation of the queue.'''
+ 190:         
+ 191:         return self.__queue.__str__()
  192: 
  193: if __name__ == '__main__':
  194:     pass
--------------------------------------------------------------------------------
[0.07545 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'queue3.Queue'>

>   ???
E   AttributeError: type object 'Queue' has no attribute '_Queue__queue'

queue3:191: AttributeError
   - [#  29] COI queue3: 
--------------------------------------------------------------------------------
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
   24:         
-  25:         if self.__size == 0:
+  25:         if not (self.__size == 0):
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07584 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b61960>, value = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:37: AttributeError
   - [#  30] COI queue3: 
--------------------------------------------------------------------------------
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
   43:         
-  44:         if self.__size == 0:
+  44:         if not (self.__size == 0):
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07372 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4045000>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:73: AttributeError
   - [#  31] COI queue3: 
--------------------------------------------------------------------------------
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
   60:         
-  61:         if self.__size == 0:
+  61:         if not (self.__size == 0):
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
--------------------------------------------------------------------------------
[0.07510 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [#  32] COI queue3: 
--------------------------------------------------------------------------------
   59:         '''Remove node at head end.'''
   60:         
   61:         if self.__size == 0:
   62:             return None
-  63:         elif self.__size == 1:
+  63:         elif not (self.__size == 1):
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
--------------------------------------------------------------------------------
[0.07476 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
        assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
        assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'builtins.dict'
        assert len(var_2.value) == 3
>       assert var_2.next is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:27: AssertionError
   - [#  33] COI queue3: 
--------------------------------------------------------------------------------
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
   82:         
-  83:         if self.__size == 0:
+  83:         if not (self.__size == 0):
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.07560 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
>       var_1 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b611e0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue3:97: AttributeError
   - [#  34] COI queue3: 
--------------------------------------------------------------------------------
   81:         '''Remove node at tail end.'''
   82:         
   83:         if self.__size == 0:
   84:             return None
-  85:         elif self.__size == 1:
+  85:         elif not (self.__size == 1):
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
--------------------------------------------------------------------------------
[0.08038 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd5d80>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3fd5d80>]'

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:37: AttributeError
   - [#  35] COI queue3: 
--------------------------------------------------------------------------------
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
- 112:         if self.__size == 0:
+ 112:         if not (self.__size == 0):
  113:             return None
  114:         else:
  115:             return self.__head.next.value
  116:     
--------------------------------------------------------------------------------
[0.07502 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:154: in getHead
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3e32ad0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

queue3:115: AttributeError
   - [#  36] COI queue3: 
--------------------------------------------------------------------------------
  137:         '''Return String representation of linkedlist values.'''
  138:         
  139:         arr = []
  140:         current = self.__head.next
- 141:         while current:
+ 141:         while not current:
  142:             arr.append(current.value)
  143:             current = current.next
  144:         return str(arr)
  145: 
--------------------------------------------------------------------------------
[0.07548 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3a91a20>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

queue3:142: AttributeError
   - [#  37] COI queue3: 
--------------------------------------------------------------------------------
  189:         
  190:         return self.__queue.__str__()
  191: 
  192: 
- 193: if __name__ == '__main__':
+ 193: if not (__name__ == '__main__'):
  194:     pass
--------------------------------------------------------------------------------
[0.06583 s] survived
   - [#  38] CRP queue3: 
--------------------------------------------------------------------------------
    1: '''In computer science, a queue is a collection of entities that are maintained in a sequence and can be modified by the addition of entities at one end of the sequence and the removal of entities from the other end of the sequence.'''
    2: 
    3: from typing import TypeVar
    4: 
-   5: T = TypeVar('T')
+   5: T = TypeVar('mutpy')
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
--------------------------------------------------------------------------------
[0.06529 s] survived
   - [#  39] CRP queue3: 
--------------------------------------------------------------------------------
    1: '''In computer science, a queue is a collection of entities that are maintained in a sequence and can be modified by the addition of entities at one end of the sequence and the removal of entities from the other end of the sequence.'''
    2: 
    3: from typing import TypeVar
    4: 
-   5: T = TypeVar('T')
+   5: T = TypeVar('')
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
--------------------------------------------------------------------------------
[0.08896 s] survived
   - [#  40] CRP queue3: 
--------------------------------------------------------------------------------
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
-  19:         self.__size = 0
+  19:         self.__size = 1
   20:     
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
--------------------------------------------------------------------------------
[0.07330 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:7: AssertionError
   - [#  41] CRP queue3: 
--------------------------------------------------------------------------------
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
   24:         
-  25:         if self.__size == 0:
+  25:         if self.__size == 1:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07490 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4183f10>, value = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:37: AttributeError
   - [#  42] CRP queue3: 
--------------------------------------------------------------------------------
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
-  30:             self.__size += 1
+  30:             self.__size += 2
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
--------------------------------------------------------------------------------
[0.07719 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
        none_type_0 = doubly_linked_list_0.addAtHead(var_2)
>       assert len(doubly_linked_list_0) == 1
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:72: AssertionError
   - [#  43] CRP queue3: 
--------------------------------------------------------------------------------
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
-  38:             self.__size += 1
+  38:             self.__size += 2
   39:     
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
--------------------------------------------------------------------------------
[0.07976 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
        none_type_3 = doubly_linked_list_1.addAtHead(str_0)
>       assert len(doubly_linked_list_1) == 2
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:215: AssertionError
   - [#  44] CRP queue3: 
--------------------------------------------------------------------------------
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
   43:         
-  44:         if self.__size == 0:
+  44:         if self.__size == 1:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07376 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b6c100>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:73: AttributeError
   - [#  45] CRP queue3: 
--------------------------------------------------------------------------------
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
-  49:             self.__size += 1
+  49:             self.__size += 2
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
--------------------------------------------------------------------------------
[0.07556 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
>       var_1 = queue_1.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3e45540>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:73: AttributeError
   - [#  46] CRP queue3: 
--------------------------------------------------------------------------------
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
-  55:             self.__size += 1
+  55:             self.__size += 2
   56:     
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
--------------------------------------------------------------------------------
[0.07994 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
>       assert len(doubly_linked_list_1) == 2
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:205: AssertionError
   - [#  47] CRP queue3: 
--------------------------------------------------------------------------------
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
   60:         
-  61:         if self.__size == 0:
+  61:         if self.__size == 1:
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
--------------------------------------------------------------------------------
[0.07437 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
        var_1 = queue_1.dequeue()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:41: AssertionError
   - [#  48] CRP queue3: 
--------------------------------------------------------------------------------
   59:         '''Remove node at head end.'''
   60:         
   61:         if self.__size == 0:
   62:             return None
-  63:         elif self.__size == 1:
+  63:         elif self.__size == 2:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
--------------------------------------------------------------------------------
[0.07433 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
        assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
        assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'builtins.dict'
        assert len(var_2.value) == 3
>       assert var_2.next is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:27: AssertionError
   - [#  49] CRP queue3: 
--------------------------------------------------------------------------------
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
-  67:             self.__size -= 1
+  67:             self.__size -= 2
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
--------------------------------------------------------------------------------
[0.07795 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_7

def test_case_7():
        bool_0 = False
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = queue_0.enqueue(bool_0)
        str_1 = queue_0.__str__()
        assert str_1 == '[False]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_0 = doubly_linked_list_0.removeAtHead()
>       assert len(doubly_linked_list_0) == 0
E       ValueError: __len__() should return >= 0

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:111: ValueError
   - [#  50] CRP queue3: 
--------------------------------------------------------------------------------
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
-  76:             self.__size -= 1
+  76:             self.__size -= 2
   77:             return nodeToRemove
   78:     
   79:     def removeAtTail(self):
   80:         
--------------------------------------------------------------------------------
[0.06716 s] survived
   - [#  51] CRP queue3: 
--------------------------------------------------------------------------------
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
   82:         
-  83:         if self.__size == 0:
+  83:         if self.__size == 1:
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.07584 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
>       var_1 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3aac4f0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue3:97: AttributeError
   - [#  52] CRP queue3: 
--------------------------------------------------------------------------------
   81:         '''Remove node at tail end.'''
   82:         
   83:         if self.__size == 0:
   84:             return None
-  85:         elif self.__size == 1:
+  85:         elif self.__size == 2:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
--------------------------------------------------------------------------------
[0.10200 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3c39ae0>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3c39ae0>]'

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:37: AttributeError
   - [#  53] CRP queue3: 
--------------------------------------------------------------------------------
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
-  91:             self.__size -= 1
+  91:             self.__size -= 2
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
--------------------------------------------------------------------------------
[0.07873 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
        var_3 = doubly_linked_list_0.removeAtTail()
>       assert len(doubly_linked_list_0) == 0
E       ValueError: __len__() should return >= 0

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:152: ValueError
   - [#  54] CRP queue3: 
--------------------------------------------------------------------------------
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
-  99:             self.__size -= 1
+  99:             self.__size -= 2
  100:             return nodeToRemove
  101:     
  102:     def isEmpty(self) -> bool:
  103:         
--------------------------------------------------------------------------------
[0.08084 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
>       assert len(doubly_linked_list_1) == 1
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:209: AssertionError
   - [#  55] CRP queue3: 
--------------------------------------------------------------------------------
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
  105:         
- 106:         return True if self.__size == 0 else False
+ 106:         return True if self.__size == 1 else False
  107:     
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
--------------------------------------------------------------------------------
[0.07382 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
>       assert bool_0 is True
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:16: AssertionError
   - [#  56] CRP queue3: 
--------------------------------------------------------------------------------
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
- 112:         if self.__size == 0:
+ 112:         if self.__size == 1:
  113:             return None
  114:         else:
  115:             return self.__head.next.value
  116:     
--------------------------------------------------------------------------------
[0.07595 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:154: in getHead
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fdb3d0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

queue3:115: AttributeError
   - [#  57] CRP queue3: 
--------------------------------------------------------------------------------
  189:         
  190:         return self.__queue.__str__()
  191: 
  192: 
- 193: if __name__ == '__main__':
+ 193: if __name__ == 'mutpy':
  194:     pass
--------------------------------------------------------------------------------
[0.06572 s] survived
   - [#  58] CRP queue3: 
--------------------------------------------------------------------------------
  189:         
  190:         return self.__queue.__str__()
  191: 
  192: 
- 193: if __name__ == '__main__':
+ 193: if __name__ == '':
  194:     pass
--------------------------------------------------------------------------------
[0.06562 s] survived
   - [#  59] OIL queue3: 
--------------------------------------------------------------------------------
  140:         current = self.__head.next
  141:         while current:
  142:             arr.append(current.value)
  143:             current = current.next
- 144:         return str(arr)
- 145: 
+ 144:             break
+ 145:         return str(arr)
  146: class Queue:
  147:     def __init__(self):
  148:         self.__queue = DoublyLinkedList()
  149:     
--------------------------------------------------------------------------------
[0.06360 s] survived
   - [#  60] ROR queue3: 
--------------------------------------------------------------------------------
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
   24:         
-  25:         if self.__size == 0:
+  25:         if self.__size != 0:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07489 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4222020>, value = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:37: AttributeError
   - [#  61] ROR queue3: 
--------------------------------------------------------------------------------
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
   43:         
-  44:         if self.__size == 0:
+  44:         if self.__size != 0:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07506 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b6cd00>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:73: AttributeError
   - [#  62] ROR queue3: 
--------------------------------------------------------------------------------
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
   60:         
-  61:         if self.__size == 0:
+  61:         if self.__size != 0:
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
--------------------------------------------------------------------------------
[0.07430 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [#  63] ROR queue3: 
--------------------------------------------------------------------------------
   59:         '''Remove node at head end.'''
   60:         
   61:         if self.__size == 0:
   62:             return None
-  63:         elif self.__size == 1:
+  63:         elif self.__size != 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
--------------------------------------------------------------------------------
[0.07399 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
        assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
        assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'builtins.dict'
        assert len(var_2.value) == 3
>       assert var_2.next is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:27: AssertionError
   - [#  64] ROR queue3: 
--------------------------------------------------------------------------------
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
   82:         
-  83:         if self.__size == 0:
+  83:         if self.__size != 0:
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.07646 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
>       var_1 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4158130>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue3:97: AttributeError
   - [#  65] ROR queue3: 
--------------------------------------------------------------------------------
   81:         '''Remove node at tail end.'''
   82:         
   83:         if self.__size == 0:
   84:             return None
-  85:         elif self.__size == 1:
+  85:         elif self.__size != 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
--------------------------------------------------------------------------------
[0.10148 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3f24490>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3f24490>]'

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:37: AttributeError
   - [#  66] ROR queue3: 
--------------------------------------------------------------------------------
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
  105:         
- 106:         return True if self.__size == 0 else False
+ 106:         return True if self.__size != 0 else False
  107:     
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
--------------------------------------------------------------------------------
[0.07436 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
>       assert bool_0 is True
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:16: AssertionError
   - [#  67] ROR queue3: 
--------------------------------------------------------------------------------
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
- 112:         if self.__size == 0:
+ 112:         if self.__size != 0:
  113:             return None
  114:         else:
  115:             return self.__head.next.value
  116:     
--------------------------------------------------------------------------------
[0.07537 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:154: in getHead
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d68250>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

queue3:115: AttributeError
   - [#  68] ROR queue3: 
--------------------------------------------------------------------------------
  189:         
  190:         return self.__queue.__str__()
  191: 
  192: 
- 193: if __name__ == '__main__':
+ 193: if __name__ != '__main__':
  194:     pass
--------------------------------------------------------------------------------
[0.06515 s] survived
   - [#  69] SDI queue3: 
--------------------------------------------------------------------------------
    4: 
    5: T = TypeVar('T')
    6: 
    7: class Node:
-   8:     def __init__(self, value: T):
-   9:         self.value = value
-  10:         self.next = None
-  11:         self.prev = None
-  12: 
+   8:     @staticmethod
+   9:     def __init__(self, value: T):
+  10:         self.value = value
+  11:         self.next = None
+  12:         self.prev = None
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
--------------------------------------------------------------------------------
[0.07436 s] incompetent

TypeError: queue3:16: TypeError: Node.__init__() missing 1 required positional argument: 'value'

   - [#  70] SDI queue3: 
--------------------------------------------------------------------------------
   11:         self.prev = None
   12: 
   13: 
   14: class DoublyLinkedList:
-  15:     def __init__(self):
-  16:         self.__sentinel = Node(None)
-  17:         self.__head = self.__sentinel
-  18:         self.__tail = self.__sentinel
-  19:         self.__size = 0
-  20:     
+  15:     @staticmethod
+  16:     def __init__(self):
+  17:         self.__sentinel = Node(None)
+  18:         self.__head = self.__sentinel
+  19:         self.__tail = self.__sentinel
+  20:         self.__size = 0
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
   24:         
--------------------------------------------------------------------------------
[0.07324 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:6: TypeError: DoublyLinkedList.__init__() missing 1 required positional argument: 'self'

   - [#  71] SDI queue3: 
--------------------------------------------------------------------------------
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
-  21:     def addAtHead(self, value: T) -> None:
-  22:         
-  23:         '''Add node at head end.'''
-  24:         
-  25:         if self.__size == 0:
-  26:             newNode = Node(value)
-  27:             self.__sentinel.next = newNode
-  28:             newNode.prev = self.__sentinel
-  29:             self.__tail = newNode
-  30:             self.__size += 1
-  31:         else:
-  32:             newNode = Node(value)
-  33:             nextNode = self.__sentinel.next
-  34:             self.__sentinel.next = newNode
-  35:             newNode.prev = self.__sentinel
-  36:             newNode.next = nextNode
-  37:             nextNode.prev = newNode
-  38:             self.__size += 1
-  39:     
+  21:     @staticmethod
+  22:     def addAtHead(self, value: T) -> None:
+  23:         
+  24:         '''Add node at head end.'''
+  25:         
+  26:         if self.__size == 0:
+  27:             newNode = Node(value)
+  28:             self.__sentinel.next = newNode
+  29:             newNode.prev = self.__sentinel
+  30:             self.__tail = newNode
+  31:             self.__size += 1
+  32:         else:
+  33:             newNode = Node(value)
+  34:             nextNode = self.__sentinel.next
+  35:             self.__sentinel.next = newNode
+  36:             newNode.prev = self.__sentinel
+  37:             newNode.next = nextNode
+  38:             nextNode.prev = newNode
+  39:             self.__size += 1
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
   43:         
--------------------------------------------------------------------------------
[0.07632 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: TypeError: DoublyLinkedList.addAtHead() missing 1 required positional argument: 'value'

   - [#  72] SDI queue3: 
--------------------------------------------------------------------------------
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
   38:             self.__size += 1
   39:     
-  40:     def addAtTail(self, value: T) -> None:
-  41:         
-  42:         '''Add node at tail end.'''
-  43:         
-  44:         if self.__size == 0:
-  45:             newNode = Node(value)
-  46:             self.__sentinel.next = newNode
-  47:             newNode.prev = self.__sentinel
-  48:             self.__tail = newNode
-  49:             self.__size += 1
-  50:         else:
-  51:             newNode = Node(value)
-  52:             self.__tail.next = newNode
-  53:             newNode.prev = self.__tail
-  54:             self.__tail = newNode
-  55:             self.__size += 1
-  56:     
+  40:     @staticmethod
+  41:     def addAtTail(self, value: T) -> None:
+  42:         
+  43:         '''Add node at tail end.'''
+  44:         
+  45:         if self.__size == 0:
+  46:             newNode = Node(value)
+  47:             self.__sentinel.next = newNode
+  48:             newNode.prev = self.__sentinel
+  49:             self.__tail = newNode
+  50:             self.__size += 1
+  51:         else:
+  52:             newNode = Node(value)
+  53:             self.__tail.next = newNode
+  54:             newNode.prev = self.__tail
+  55:             self.__tail = newNode
+  56:             self.__size += 1
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
   60:         
--------------------------------------------------------------------------------
[0.07397 s] incompetent

TypeError: queue3:172: TypeError: DoublyLinkedList.addAtTail() missing 1 required positional argument: 'value'

   - [#  73] SDI queue3: 
--------------------------------------------------------------------------------
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
   55:             self.__size += 1
   56:     
-  57:     def removeAtHead(self):
-  58:         
-  59:         '''Remove node at head end.'''
-  60:         
-  61:         if self.__size == 0:
-  62:             return None
-  63:         elif self.__size == 1:
-  64:             nodeToRemove = self.__head.next
-  65:             self.__sentinel.next = None
-  66:             nodeToRemove.prev = None
-  67:             self.__size -= 1
-  68:             return nodeToRemove
-  69:         else:
-  70:             nodeToRemove = self.__head.next
-  71:             nextNode = nodeToRemove.next
-  72:             self.__sentinel.next = nextNode
-  73:             nextNode.prev = self.__sentinel
-  74:             nodeToRemove.next = None
-  75:             nodeToRemove.prev = None
-  76:             self.__size -= 1
-  77:             return nodeToRemove
-  78:     
+  57:     @staticmethod
+  58:     def removeAtHead(self):
+  59:         
+  60:         '''Remove node at head end.'''
+  61:         
+  62:         if self.__size == 0:
+  63:             return None
+  64:         elif self.__size == 1:
+  65:             nodeToRemove = self.__head.next
+  66:             self.__sentinel.next = None
+  67:             nodeToRemove.prev = None
+  68:             self.__size -= 1
+  69:             return nodeToRemove
+  70:         else:
+  71:             nodeToRemove = self.__head.next
+  72:             nextNode = nodeToRemove.next
+  73:             self.__sentinel.next = nextNode
+  74:             nextNode.prev = self.__sentinel
+  75:             nodeToRemove.next = None
+  76:             nodeToRemove.prev = None
+  77:             self.__size -= 1
+  78:             return nodeToRemove
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
   82:         
--------------------------------------------------------------------------------
[0.07454 s] incompetent

TypeError: queue3:166: TypeError: DoublyLinkedList.removeAtHead() missing 1 required positional argument: 'self'

   - [#  74] SDI queue3: 
--------------------------------------------------------------------------------
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
   77:             return nodeToRemove
   78:     
-  79:     def removeAtTail(self):
-  80:         
-  81:         '''Remove node at tail end.'''
-  82:         
-  83:         if self.__size == 0:
-  84:             return None
-  85:         elif self.__size == 1:
-  86:             nodeToRemove = self.__tail
-  87:             nodeToRemove.prev = None
-  88:             self.__sentinel.next = None
-  89:             self.__head = self.__sentinel
-  90:             self.__tail = self.__sentinel
-  91:             self.__size -= 1
-  92:             return nodeToRemove
-  93:         else:
-  94:             nodeToRemove = self.__tail
-  95:             previous = nodeToRemove.prev
-  96:             nodeToRemove.prev = None
-  97:             previous.next = None
-  98:             self.__tail = previous
-  99:             self.__size -= 1
- 100:             return nodeToRemove
- 101:     
+  79:     @staticmethod
+  80:     def removeAtTail(self):
+  81:         
+  82:         '''Remove node at tail end.'''
+  83:         
+  84:         if self.__size == 0:
+  85:             return None
+  86:         elif self.__size == 1:
+  87:             nodeToRemove = self.__tail
+  88:             nodeToRemove.prev = None
+  89:             self.__sentinel.next = None
+  90:             self.__head = self.__sentinel
+  91:             self.__tail = self.__sentinel
+  92:             self.__size -= 1
+  93:             return nodeToRemove
+  94:         else:
+  95:             nodeToRemove = self.__tail
+  96:             previous = nodeToRemove.prev
+  97:             nodeToRemove.prev = None
+  98:             previous.next = None
+  99:             self.__tail = previous
+ 100:             self.__size -= 1
+ 101:             return nodeToRemove
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
  105:         
--------------------------------------------------------------------------------
[0.07552 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:69: TypeError: DoublyLinkedList.removeAtTail() missing 1 required positional argument: 'self'

   - [#  75] SDI queue3: 
--------------------------------------------------------------------------------
   98:             self.__tail = previous
   99:             self.__size -= 1
  100:             return nodeToRemove
  101:     
- 102:     def isEmpty(self) -> bool:
- 103:         
- 104:         '''Check if linkedlist is empty'''
- 105:         
- 106:         return True if self.__size == 0 else False
- 107:     
+ 102:     @staticmethod
+ 103:     def isEmpty(self) -> bool:
+ 104:         
+ 105:         '''Check if linkedlist is empty'''
+ 106:         
+ 107:         return True if self.__size == 0 else False
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
--------------------------------------------------------------------------------
[0.07418 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:15: TypeError: DoublyLinkedList.isEmpty() missing 1 required positional argument: 'self'

   - [#  76] SDI queue3: 
--------------------------------------------------------------------------------
  104:         '''Check if linkedlist is empty'''
  105:         
  106:         return True if self.__size == 0 else False
  107:     
- 108:     def getHead(self):
- 109:         
- 110:         '''Get value at the front end of the list.'''
- 111:         
- 112:         if self.__size == 0:
- 113:             return None
- 114:         else:
- 115:             return self.__head.next.value
- 116:     
+ 108:     @staticmethod
+ 109:     def getHead(self):
+ 110:         
+ 111:         '''Get value at the front end of the list.'''
+ 112:         
+ 113:         if self.__size == 0:
+ 114:             return None
+ 115:         else:
+ 116:             return self.__head.next.value
  117:     def getTail(self) -> T:
  118:         
  119:         '''Get value at the tail of the list.'''
  120:         
--------------------------------------------------------------------------------
[0.07547 s] incompetent

TypeError: queue3:154: TypeError: DoublyLinkedList.getHead() missing 1 required positional argument: 'self'

   - [#  77] SDI queue3: 
--------------------------------------------------------------------------------
  113:             return None
  114:         else:
  115:             return self.__head.next.value
  116:     
- 117:     def getTail(self) -> T:
- 118:         
- 119:         '''Get value at the tail of the list.'''
- 120:         
- 121:         return self.__tail.value
- 122:     
+ 117:     @staticmethod
+ 118:     def getTail(self) -> T:
+ 119:         
+ 120:         '''Get value at the tail of the list.'''
+ 121:         
+ 122:         return self.__tail.value
  123:     def getSize(self) -> int:
  124:         
  125:         '''Get length of the linked list.'''
  126:         
--------------------------------------------------------------------------------
[0.07435 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:14: TypeError: DoublyLinkedList.getTail() missing 1 required positional argument: 'self'

   - [#  78] SDI queue3: 
--------------------------------------------------------------------------------
  119:         '''Get value at the tail of the list.'''
  120:         
  121:         return self.__tail.value
  122:     
- 123:     def getSize(self) -> int:
- 124:         
- 125:         '''Get length of the linked list.'''
- 126:         
- 127:         return self.__size
- 128:     
+ 123:     @staticmethod
+ 124:     def getSize(self) -> int:
+ 125:         
+ 126:         '''Get length of the linked list.'''
+ 127:         
+ 128:         return self.__size
  129:     def __len__(self) -> int:
  130:         
  131:         '''Get length of the linked list.'''
  132:         
--------------------------------------------------------------------------------
[0.07672 s] incompetent

TypeError: queue3:178: TypeError: DoublyLinkedList.getSize() missing 1 required positional argument: 'self'

   - [#  79] SDI queue3: 
--------------------------------------------------------------------------------
  125:         '''Get length of the linked list.'''
  126:         
  127:         return self.__size
  128:     
- 129:     def __len__(self) -> int:
- 130:         
- 131:         '''Get length of the linked list.'''
- 132:         
- 133:         return self.__size
- 134:     
+ 129:     @staticmethod
+ 130:     def __len__(self) -> int:
+ 131:         
+ 132:         '''Get length of the linked list.'''
+ 133:         
+ 134:         return self.__size
  135:     def __str__(self) -> str:
  136:         
  137:         '''Return String representation of linkedlist values.'''
  138:         
--------------------------------------------------------------------------------
[0.07385 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:7: TypeError: DoublyLinkedList.__len__() missing 1 required positional argument: 'self'

   - [#  80] SDI queue3: 
--------------------------------------------------------------------------------
  131:         '''Get length of the linked list.'''
  132:         
  133:         return self.__size
  134:     
- 135:     def __str__(self) -> str:
- 136:         
- 137:         '''Return String representation of linkedlist values.'''
- 138:         
- 139:         arr = []
- 140:         current = self.__head.next
- 141:         while current:
- 142:             arr.append(current.value)
- 143:             current = current.next
- 144:         return str(arr)
- 145: 
+ 135:     @staticmethod
+ 136:     def __str__(self) -> str:
+ 137:         
+ 138:         '''Return String representation of linkedlist values.'''
+ 139:         
+ 140:         arr = []
+ 141:         current = self.__head.next
+ 142:         while current:
+ 143:             arr.append(current.value)
+ 144:             current = current.next
+ 145:         return str(arr)
  146: class Queue:
  147:     def __init__(self):
  148:         self.__queue = DoublyLinkedList()
  149:     
--------------------------------------------------------------------------------
[0.07370 s] incompetent

TypeError: queue3:190: TypeError: DoublyLinkedList.__str__() missing 1 required positional argument: 'self'

   - [#  81] SDI queue3: 
--------------------------------------------------------------------------------
  143:             current = current.next
  144:         return str(arr)
  145: 
  146: class Queue:
- 147:     def __init__(self):
- 148:         self.__queue = DoublyLinkedList()
- 149:     
+ 147:     @staticmethod
+ 148:     def __init__(self):
+ 149:         self.__queue = DoublyLinkedList()
  150:     def getHead(self) -> T:
  151:         
  152:         '''View first element in the queue.'''
  153:         
--------------------------------------------------------------------------------
[0.07416 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:8: TypeError: Queue.__init__() missing 1 required positional argument: 'self'

   - [#  82] SDI queue3: 
--------------------------------------------------------------------------------
  146: class Queue:
  147:     def __init__(self):
  148:         self.__queue = DoublyLinkedList()
  149:     
- 150:     def getHead(self) -> T:
- 151:         
- 152:         '''View first element in the queue.'''
- 153:         
- 154:         return self.__queue.getHead()
- 155:     
+ 150:     @staticmethod
+ 151:     def getHead(self) -> T:
+ 152:         
+ 153:         '''View first element in the queue.'''
+ 154:         
+ 155:         return self.__queue.getHead()
  156:     def getTail(self):
  157:         
  158:         '''View last element in the queue.'''
  159:         
--------------------------------------------------------------------------------
[0.07126 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: TypeError: Queue.getHead() missing 1 required positional argument: 'self'

   - [#  83] SDI queue3: 
--------------------------------------------------------------------------------
  152:         '''View first element in the queue.'''
  153:         
  154:         return self.__queue.getHead()
  155:     
- 156:     def getTail(self):
- 157:         
- 158:         '''View last element in the queue.'''
- 159:         
- 160:         return self.__queue.getTail()
- 161:     
+ 156:     @staticmethod
+ 157:     def getTail(self):
+ 158:         
+ 159:         '''View last element in the queue.'''
+ 160:         
+ 161:         return self.__queue.getTail()
  162:     def dequeue(self) -> T:
  163:         
  164:         '''Remove element from the queue.'''
  165:         
--------------------------------------------------------------------------------
[0.07421 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:22: TypeError: Queue.getTail() missing 1 required positional argument: 'self'

   - [#  84] SDI queue3: 
--------------------------------------------------------------------------------
  158:         '''View last element in the queue.'''
  159:         
  160:         return self.__queue.getTail()
  161:     
- 162:     def dequeue(self) -> T:
- 163:         
- 164:         '''Remove element from the queue.'''
- 165:         
- 166:         return self.__queue.removeAtHead()
- 167:     
+ 162:     @staticmethod
+ 163:     def dequeue(self) -> T:
+ 164:         
+ 165:         '''Remove element from the queue.'''
+ 166:         
+ 167:         return self.__queue.removeAtHead()
  168:     def enqueue(self, value: T) -> None:
  169:         
  170:         '''Add element to queue.'''
  171:         
--------------------------------------------------------------------------------
[0.09503 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: TypeError: Queue.dequeue() missing 1 required positional argument: 'self'

   - [#  85] SDI queue3: 
--------------------------------------------------------------------------------
  164:         '''Remove element from the queue.'''
  165:         
  166:         return self.__queue.removeAtHead()
  167:     
- 168:     def enqueue(self, value: T) -> None:
- 169:         
- 170:         '''Add element to queue.'''
- 171:         
- 172:         self.__queue.addAtTail(value)
- 173:     
+ 168:     @staticmethod
+ 169:     def enqueue(self, value: T) -> None:
+ 170:         
+ 171:         '''Add element to queue.'''
+ 172:         
+ 173:         self.__queue.addAtTail(value)
  174:     def getSize(self) -> int:
  175:         
  176:         '''Get size of the queue.'''
  177:         
--------------------------------------------------------------------------------
[0.07438 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: TypeError: Queue.enqueue() missing 1 required positional argument: 'value'

   - [#  86] SDI queue3: 
--------------------------------------------------------------------------------
  170:         '''Add element to queue.'''
  171:         
  172:         self.__queue.addAtTail(value)
  173:     
- 174:     def getSize(self) -> int:
- 175:         
- 176:         '''Get size of the queue.'''
- 177:         
- 178:         return self.__queue.getSize()
- 179:     
+ 174:     @staticmethod
+ 175:     def getSize(self) -> int:
+ 176:         
+ 177:         '''Get size of the queue.'''
+ 178:         
+ 179:         return self.__queue.getSize()
  180:     def isEmpty(self) -> bool:
  181:         
  182:         '''Check if queue is empty.'''
  183:         
--------------------------------------------------------------------------------
[0.07633 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:86: TypeError: Queue.getSize() missing 1 required positional argument: 'self'

   - [#  87] SDI queue3: 
--------------------------------------------------------------------------------
  176:         '''Get size of the queue.'''
  177:         
  178:         return self.__queue.getSize()
  179:     
- 180:     def isEmpty(self) -> bool:
- 181:         
- 182:         '''Check if queue is empty.'''
- 183:         
- 184:         return self.__queue.isEmpty()
- 185:     
+ 180:     @staticmethod
+ 181:     def isEmpty(self) -> bool:
+ 182:         
+ 183:         '''Check if queue is empty.'''
+ 184:         
+ 185:         return self.__queue.isEmpty()
  186:     def __str__(self) -> str:
  187:         
  188:         '''Get string representation of the queue.'''
  189:         
--------------------------------------------------------------------------------
[0.07423 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:35: TypeError: Queue.isEmpty() missing 1 required positional argument: 'self'

   - [#  88] SDI queue3: 
--------------------------------------------------------------------------------
  182:         '''Check if queue is empty.'''
  183:         
  184:         return self.__queue.isEmpty()
  185:     
- 186:     def __str__(self) -> str:
- 187:         
- 188:         '''Get string representation of the queue.'''
- 189:         
- 190:         return self.__queue.__str__()
- 191: 
+ 186:     @staticmethod
+ 187:     def __str__(self) -> str:
+ 188:         
+ 189:         '''Get string representation of the queue.'''
+ 190:         
+ 191:         return self.__queue.__str__()
  192: 
  193: if __name__ == '__main__':
  194:     pass
--------------------------------------------------------------------------------
[0.07446 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: TypeError: Queue.__str__() missing 1 required positional argument: 'self'

   - [#  89] SDL queue3: 
--------------------------------------------------------------------------------
    1: '''In computer science, a queue is a collection of entities that are maintained in a sequence and can be modified by the addition of entities at one end of the sequence and the removal of entities from the other end of the sequence.'''
    2: 
    3: from typing import TypeVar
    4: 
-   5: T = TypeVar('T')
+   5: pass
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
--------------------------------------------------------------------------------
[0.00000 s] incompetent

NameError: name 'T' is not defined

   - [#  90] SDL queue3: 
--------------------------------------------------------------------------------
    5: T = TypeVar('T')
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
-   9:         self.value = value
+   9:         pass
   10:         self.next = None
   11:         self.prev = None
   12: 
   13: 
--------------------------------------------------------------------------------
[0.07475 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
>       var_0 = doubly_linked_list_0.getTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ce6aa0>

>   ???
E   AttributeError: 'Node' object has no attribute 'value'

queue3:121: AttributeError
   - [#  91] SDL queue3: 
--------------------------------------------------------------------------------
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
-  10:         self.next = None
+  10:         pass
   11:         self.prev = None
   12: 
   13: 
   14: class DoublyLinkedList:
--------------------------------------------------------------------------------
[0.09677 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3e111b0>

>   ???
E   AttributeError: 'Node' object has no attribute 'next'

queue3:140: AttributeError
   - [#  92] SDL queue3: 
--------------------------------------------------------------------------------
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
   10:         self.next = None
-  11:         self.prev = None
+  11:         pass
   12: 
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
--------------------------------------------------------------------------------
[0.06535 s] survived
   - [#  93] SDL queue3: 
--------------------------------------------------------------------------------
   12: 
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
-  16:         self.__sentinel = Node(None)
+  16:         pass
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
--------------------------------------------------------------------------------
[0.07367 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
>       doubly_linked_list_0 = module_0.DoublyLinkedList()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ded300>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute '_DoublyLinkedList__sentinel'

queue3:17: AttributeError
   - [#  94] SDL queue3: 
--------------------------------------------------------------------------------
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
-  17:         self.__head = self.__sentinel
+  17:         pass
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
--------------------------------------------------------------------------------
[0.10683 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fc52d0>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute '_DoublyLinkedList__head'. Did you mean: '_DoublyLinkedList__size'?

queue3:140: AttributeError
   - [#  95] SDL queue3: 
--------------------------------------------------------------------------------
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
   17:         self.__head = self.__sentinel
-  18:         self.__tail = self.__sentinel
+  18:         pass
   19:         self.__size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
   22:         
--------------------------------------------------------------------------------
[0.07216 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
>       var_0 = doubly_linked_list_0.getTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d78730>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute '_DoublyLinkedList__tail'. Did you mean: '_DoublyLinkedList__head'?

queue3:121: AttributeError
   - [#  96] SDL queue3: 
--------------------------------------------------------------------------------
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
-  19:         self.__size = 0
+  19:         pass
   20:     
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
--------------------------------------------------------------------------------
[0.07232 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3eb96f0>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute '_DoublyLinkedList__size'. Did you mean: '_DoublyLinkedList__head'?

queue3:133: AttributeError
   - [#  97] SDL queue3: 
--------------------------------------------------------------------------------
   22:         
   23:         '''Add node at head end.'''
   24:         
   25:         if self.__size == 0:
-  26:             newNode = Node(value)
+  26:             pass
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
   30:             self.__size += 1
--------------------------------------------------------------------------------
[0.07587 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d05c30>, value = None

>   ???
E   UnboundLocalError: local variable 'newNode' referenced before assignment

queue3:27: UnboundLocalError
   - [#  98] SDL queue3: 
--------------------------------------------------------------------------------
   23:         '''Add node at head end.'''
   24:         
   25:         if self.__size == 0:
   26:             newNode = Node(value)
-  27:             self.__sentinel.next = newNode
+  27:             pass
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
--------------------------------------------------------------------------------
[0.07822 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
        none_type_0 = doubly_linked_list_0.addAtHead(var_2)
        assert len(doubly_linked_list_0) == 1
>       var_3 = doubly_linked_list_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4182200>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'value'

queue3:115: AttributeError
   - [#  99] SDL queue3: 
--------------------------------------------------------------------------------
   24:         
   25:         if self.__size == 0:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
-  28:             newNode.prev = self.__sentinel
+  28:             pass
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
--------------------------------------------------------------------------------
[0.06465 s] survived
   - [# 100] SDL queue3: 
--------------------------------------------------------------------------------
   25:         if self.__size == 0:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
-  29:             self.__tail = newNode
+  29:             pass
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
--------------------------------------------------------------------------------
[0.08329 s] killed by MIO-WHOLE_SUITE/test_queue3_MIO.py::test_case_8

def test_case_8():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        none_type_0 = doubly_linked_list_0.addAtHead(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_0 = doubly_linked_list_0.removeAtTail()
        assert len(doubly_linked_list_0) == 0
        assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'queue3.Node'
>       assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'queue3.DoublyLinkedList'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_MIO.py:62: AssertionError
   - [# 101] SDL queue3: 
--------------------------------------------------------------------------------
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
-  32:             newNode = Node(value)
+  32:             pass
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
--------------------------------------------------------------------------------
[0.08061 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d6b9d0>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3d6b9d0>]'

>   ???
E   UnboundLocalError: local variable 'newNode' referenced before assignment

queue3:34: UnboundLocalError
   - [# 102] SDL queue3: 
--------------------------------------------------------------------------------
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
-  33:             nextNode = self.__sentinel.next
+  33:             pass
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
--------------------------------------------------------------------------------
[0.08080 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3eb8100>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3eb8100>]'

>   ???
E   NameError: name 'nextNode' is not defined

queue3:36: NameError
   - [# 103] SDL queue3: 
--------------------------------------------------------------------------------
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
-  34:             self.__sentinel.next = newNode
+  34:             pass
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
   38:             self.__size += 1
--------------------------------------------------------------------------------
[0.06695 s] survived
   - [# 104] SDL queue3: 
--------------------------------------------------------------------------------
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
-  35:             newNode.prev = self.__sentinel
+  35:             pass
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
   38:             self.__size += 1
   39:     
--------------------------------------------------------------------------------
[0.06520 s] survived
   - [# 105] SDL queue3: 
--------------------------------------------------------------------------------
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
-  36:             newNode.next = nextNode
+  36:             pass
   37:             nextNode.prev = newNode
   38:             self.__size += 1
   39:     
   40:     def addAtTail(self, value: T) -> None:
--------------------------------------------------------------------------------
[0.06479 s] survived
   - [# 106] SDL queue3: 
--------------------------------------------------------------------------------
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
-  37:             nextNode.prev = newNode
+  37:             pass
   38:             self.__size += 1
   39:     
   40:     def addAtTail(self, value: T) -> None:
   41:         
--------------------------------------------------------------------------------
[0.06702 s] survived
   - [# 107] SDL queue3: 
--------------------------------------------------------------------------------
   41:         
   42:         '''Add node at tail end.'''
   43:         
   44:         if self.__size == 0:
-  45:             newNode = Node(value)
+  45:             pass
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
   49:             self.__size += 1
--------------------------------------------------------------------------------
[0.07425 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b60880>
value = {<queue3.Queue object at 0x7f33a3b60fd0>: <queue3.Queue object at 0x7f33a3b60fd0>, None: <queue3.Queue object at 0x7f33a3b60fd0>, '[]': <queue3.Queue object at 0x7f33a3b60fd0>}

>   ???
E   UnboundLocalError: local variable 'newNode' referenced before assignment

queue3:46: UnboundLocalError
   - [# 108] SDL queue3: 
--------------------------------------------------------------------------------
   42:         '''Add node at tail end.'''
   43:         
   44:         if self.__size == 0:
   45:             newNode = Node(value)
-  46:             self.__sentinel.next = newNode
+  46:             pass
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
--------------------------------------------------------------------------------
[0.07217 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b628f0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue3:71: AttributeError
   - [# 109] SDL queue3: 
--------------------------------------------------------------------------------
   43:         
   44:         if self.__size == 0:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
-  47:             newNode.prev = self.__sentinel
+  47:             pass
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
--------------------------------------------------------------------------------
[0.06677 s] survived
   - [# 110] SDL queue3: 
--------------------------------------------------------------------------------
   44:         if self.__size == 0:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
-  48:             self.__tail = newNode
+  48:             pass
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
--------------------------------------------------------------------------------
[0.07478 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3e4c430>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:73: AttributeError
   - [# 111] SDL queue3: 
--------------------------------------------------------------------------------
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
-  51:             newNode = Node(value)
+  51:             pass
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
   55:             self.__size += 1
--------------------------------------------------------------------------------
[0.09428 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
>       none_type_2 = queue_0.enqueue(none_type_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3a9c190>, value = None

>   ???
E   UnboundLocalError: local variable 'newNode' referenced before assignment

queue3:52: UnboundLocalError
   - [# 112] SDL queue3: 
--------------------------------------------------------------------------------
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
-  52:             self.__tail.next = newNode
+  52:             pass
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
   55:             self.__size += 1
   56:     
--------------------------------------------------------------------------------
[0.07475 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ebcd00>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

queue3:73: AttributeError
   - [# 113] SDL queue3: 
--------------------------------------------------------------------------------
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
-  53:             newNode.prev = self.__tail
+  53:             pass
   54:             self.__tail = newNode
   55:             self.__size += 1
   56:     
   57:     def removeAtHead(self):
--------------------------------------------------------------------------------
[0.07969 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
>       var_1 = doubly_linked_list_1.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d6bdc0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

queue3:97: AttributeError
   - [# 114] SDL queue3: 
--------------------------------------------------------------------------------
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
-  54:             self.__tail = newNode
+  54:             pass
   55:             self.__size += 1
   56:     
   57:     def removeAtHead(self):
   58:         
--------------------------------------------------------------------------------
[0.08082 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
>       assert var_1.value is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:211: AssertionError
   - [# 115] SDL queue3: 
--------------------------------------------------------------------------------
   58:         
   59:         '''Remove node at head end.'''
   60:         
   61:         if self.__size == 0:
-  62:             return None
+  62:             pass
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.06533 s] survived
   - [# 116] SDL queue3: 
--------------------------------------------------------------------------------
   60:         
   61:         if self.__size == 0:
   62:             return None
   63:         elif self.__size == 1:
-  64:             nodeToRemove = self.__head.next
+  64:             pass
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
   68:             return nodeToRemove
--------------------------------------------------------------------------------
[0.07588 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
>       var_1 = queue_1.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3f08c40>

>   ???
E   UnboundLocalError: local variable 'nodeToRemove' referenced before assignment

queue3:66: UnboundLocalError
   - [# 117] SDL queue3: 
--------------------------------------------------------------------------------
   61:         if self.__size == 0:
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
-  65:             self.__sentinel.next = None
+  65:             pass
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
   68:             return nodeToRemove
   69:         else:
--------------------------------------------------------------------------------
[0.06633 s] survived
   - [# 118] SDL queue3: 
--------------------------------------------------------------------------------
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
-  66:             nodeToRemove.prev = None
+  66:             pass
   67:             self.__size -= 1
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
--------------------------------------------------------------------------------
[0.07733 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
        var_1 = queue_1.dequeue()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
>       assert var_1.prev is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:44: AssertionError
   - [# 119] SDL queue3: 
--------------------------------------------------------------------------------
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
-  68:             return nodeToRemove
+  68:             pass
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
--------------------------------------------------------------------------------
[0.07463 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
        var_1 = queue_1.dequeue()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:41: AssertionError
   - [# 120] SDL queue3: 
--------------------------------------------------------------------------------
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
   68:             return nodeToRemove
   69:         else:
-  70:             nodeToRemove = self.__head.next
+  70:             pass
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
--------------------------------------------------------------------------------
[0.07481 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd5060>

>   ???
E   UnboundLocalError: local variable 'nodeToRemove' referenced before assignment

queue3:71: UnboundLocalError
   - [# 121] SDL queue3: 
--------------------------------------------------------------------------------
   67:             self.__size -= 1
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
-  71:             nextNode = nodeToRemove.next
+  71:             pass
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.07403 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b6e170>

>   ???
E   NameError: name 'nextNode' is not defined

queue3:72: NameError
   - [# 122] SDL queue3: 
--------------------------------------------------------------------------------
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
-  72:             self.__sentinel.next = nextNode
+  72:             pass
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
--------------------------------------------------------------------------------
[0.06476 s] survived
   - [# 123] SDL queue3: 
--------------------------------------------------------------------------------
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
-  73:             nextNode.prev = self.__sentinel
+  73:             pass
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
   77:             return nodeToRemove
--------------------------------------------------------------------------------
[0.06687 s] survived
   - [# 124] SDL queue3: 
--------------------------------------------------------------------------------
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
-  74:             nodeToRemove.next = None
+  74:             pass
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
   77:             return nodeToRemove
   78:     
--------------------------------------------------------------------------------
[0.09315 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
        assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
        assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'builtins.dict'
        assert len(var_2.value) == 3
>       assert var_2.next is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:27: AssertionError
   - [# 125] SDL queue3: 
--------------------------------------------------------------------------------
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
-  75:             nodeToRemove.prev = None
+  75:             pass
   76:             self.__size -= 1
   77:             return nodeToRemove
   78:     
   79:     def removeAtTail(self):
--------------------------------------------------------------------------------
[0.07706 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
        assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
        assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'builtins.dict'
        assert len(var_2.value) == 3
        assert var_2.next is None
>       assert var_2.prev is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:28: AssertionError
   - [# 126] SDL queue3: 
--------------------------------------------------------------------------------
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
-  77:             return nodeToRemove
+  77:             pass
   78:     
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
--------------------------------------------------------------------------------
[0.07446 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [# 127] SDL queue3: 
--------------------------------------------------------------------------------
   80:         
   81:         '''Remove node at tail end.'''
   82:         
   83:         if self.__size == 0:
-  84:             return None
+  84:             pass
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
--------------------------------------------------------------------------------
[0.06552 s] survived
   - [# 128] SDL queue3: 
--------------------------------------------------------------------------------
   82:         
   83:         if self.__size == 0:
   84:             return None
   85:         elif self.__size == 1:
-  86:             nodeToRemove = self.__tail
+  86:             pass
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
--------------------------------------------------------------------------------
[0.07849 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
>       var_3 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3c89210>

>   ???
E   UnboundLocalError: local variable 'nodeToRemove' referenced before assignment

queue3:87: UnboundLocalError
   - [# 129] SDL queue3: 
--------------------------------------------------------------------------------
   83:         if self.__size == 0:
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
-  87:             nodeToRemove.prev = None
+  87:             pass
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
--------------------------------------------------------------------------------
[0.07942 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
        var_3 = doubly_linked_list_0.removeAtTail()
        assert len(doubly_linked_list_0) == 0
        assert len(var_1) == 0
        assert len(var_2) == 0
        assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'queue3.Node'
        assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'queue3.DoublyLinkedList'
        assert len(var_3.value) == 0
        assert var_3.next is None
>       assert var_3.prev is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:159: AssertionError
   - [# 130] SDL queue3: 
--------------------------------------------------------------------------------
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
-  88:             self.__sentinel.next = None
+  88:             pass
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
--------------------------------------------------------------------------------
[0.06552 s] survived
   - [# 131] SDL queue3: 
--------------------------------------------------------------------------------
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
-  89:             self.__head = self.__sentinel
+  89:             pass
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
--------------------------------------------------------------------------------
[0.06474 s] survived
   - [# 132] SDL queue3: 
--------------------------------------------------------------------------------
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
-  90:             self.__tail = self.__sentinel
+  90:             pass
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
--------------------------------------------------------------------------------
[0.06607 s] survived
   - [# 133] SDL queue3: 
--------------------------------------------------------------------------------
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
-  92:             return nodeToRemove
+  92:             pass
   93:         else:
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.07842 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
        var_3 = doubly_linked_list_0.removeAtTail()
        assert len(doubly_linked_list_0) == 0
        assert len(var_1) == 0
        assert len(var_2) == 0
>       assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:155: AssertionError
   - [# 134] SDL queue3: 
--------------------------------------------------------------------------------
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
-  94:             nodeToRemove = self.__tail
+  94:             pass
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
--------------------------------------------------------------------------------
[0.07922 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
>       var_1 = doubly_linked_list_1.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3e25420>

>   ???
E   UnboundLocalError: local variable 'nodeToRemove' referenced before assignment

queue3:95: UnboundLocalError
   - [# 135] SDL queue3: 
--------------------------------------------------------------------------------
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
-  95:             previous = nodeToRemove.prev
+  95:             pass
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
   99:             self.__size -= 1
--------------------------------------------------------------------------------
[0.08123 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
>       var_1 = doubly_linked_list_1.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a424bbe0>

>   ???
E   NameError: name 'previous' is not defined

queue3:97: NameError
   - [# 136] SDL queue3: 
--------------------------------------------------------------------------------
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
-  96:             nodeToRemove.prev = None
+  96:             pass
   97:             previous.next = None
   98:             self.__tail = previous
   99:             self.__size -= 1
  100:             return nodeToRemove
--------------------------------------------------------------------------------
[0.08038 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
>       assert var_1.prev is None
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:213: AssertionError
   - [# 137] SDL queue3: 
--------------------------------------------------------------------------------
   93:         else:
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
-  97:             previous.next = None
+  97:             pass
   98:             self.__tail = previous
   99:             self.__size -= 1
  100:             return nodeToRemove
  101:     
--------------------------------------------------------------------------------
[0.06452 s] survived
   - [# 138] SDL queue3: 
--------------------------------------------------------------------------------
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
-  98:             self.__tail = previous
+  98:             pass
   99:             self.__size -= 1
  100:             return nodeToRemove
  101:     
  102:     def isEmpty(self) -> bool:
--------------------------------------------------------------------------------
[0.08003 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
        none_type_3 = doubly_linked_list_1.addAtHead(str_0)
        assert len(doubly_linked_list_1) == 2
        var_2 = doubly_linked_list_1.getTail()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.DoublyLinkedList'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:217: AssertionError
   - [# 139] SDL queue3: 
--------------------------------------------------------------------------------
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
   99:             self.__size -= 1
- 100:             return nodeToRemove
+ 100:             pass
  101:     
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
--------------------------------------------------------------------------------
[0.08043 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:210: AssertionError
   - [# 140] SDL queue3: 
--------------------------------------------------------------------------------
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
  105:         
- 106:         return True if self.__size == 0 else False
+ 106:         pass
  107:     
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
--------------------------------------------------------------------------------
[0.07420 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
>       assert bool_0 is True
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:16: AssertionError
   - [# 141] SDL queue3: 
--------------------------------------------------------------------------------
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
  112:         if self.__size == 0:
- 113:             return None
+ 113:             pass
  114:         else:
  115:             return self.__head.next.value
  116:     
  117:     def getTail(self) -> T:
--------------------------------------------------------------------------------
[0.06574 s] survived
   - [# 142] SDL queue3: 
--------------------------------------------------------------------------------
  111:         
  112:         if self.__size == 0:
  113:             return None
  114:         else:
- 115:             return self.__head.next.value
+ 115:             pass
  116:     
  117:     def getTail(self) -> T:
  118:         
  119:         '''Get value at the tail of the list.'''
--------------------------------------------------------------------------------
[0.07533 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_2

def test_case_2():
        queue_0 = module_0.Queue()
        none_type_0 = queue_0.enqueue(queue_0)
        queue_1 = module_0.Queue()
        var_0 = queue_1.getTail()
        node_0 = module_0.Node(queue_0)
        var_1 = queue_0.getHead()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:53: AssertionError
   - [# 143] SDL queue3: 
--------------------------------------------------------------------------------
  117:     def getTail(self) -> T:
  118:         
  119:         '''Get value at the tail of the list.'''
  120:         
- 121:         return self.__tail.value
+ 121:         pass
  122:     
  123:     def getSize(self) -> int:
  124:         
  125:         '''Get length of the linked list.'''
--------------------------------------------------------------------------------
[0.07720 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_2

def test_case_2():
        queue_0 = module_0.Queue()
        none_type_0 = queue_0.enqueue(queue_0)
        queue_1 = module_0.Queue()
        var_0 = queue_1.getTail()
        node_0 = module_0.Node(queue_0)
        var_1 = queue_0.getHead()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Queue'
        var_2 = var_1.getTail()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:55: AssertionError
   - [# 144] SDL queue3: 
--------------------------------------------------------------------------------
  123:     def getSize(self) -> int:
  124:         
  125:         '''Get length of the linked list.'''
  126:         
- 127:         return self.__size
+ 127:         pass
  128:     
  129:     def __len__(self) -> int:
  130:         
  131:         '''Get length of the linked list.'''
--------------------------------------------------------------------------------
[0.09851 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_5

def test_case_5():
        none_type_0 = None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        int_0 = queue_0.getSize()
>       assert int_0 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:87: AssertionError
   - [# 145] SDL queue3: 
--------------------------------------------------------------------------------
  129:     def __len__(self) -> int:
  130:         
  131:         '''Get length of the linked list.'''
  132:         
- 133:         return self.__size
+ 133:         pass
  134:     
  135:     def __str__(self) -> str:
  136:         
  137:         '''Return String representation of linkedlist values.'''
--------------------------------------------------------------------------------
[0.07364 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/queue3/MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:7: TypeError: 'NoneType' object cannot be interpreted as an integer

   - [# 146] SDL queue3: 
--------------------------------------------------------------------------------
  135:     def __str__(self) -> str:
  136:         
  137:         '''Return String representation of linkedlist values.'''
  138:         
- 139:         arr = []
+ 139:         pass
  140:         current = self.__head.next
  141:         while current:
  142:             arr.append(current.value)
  143:             current = current.next
--------------------------------------------------------------------------------
[0.07524 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fc54e0>

>   ???
E   NameError: name 'arr' is not defined

queue3:144: NameError
   - [# 147] SDL queue3: 
--------------------------------------------------------------------------------
  136:         
  137:         '''Return String representation of linkedlist values.'''
  138:         
  139:         arr = []
- 140:         current = self.__head.next
+ 140:         pass
  141:         while current:
  142:             arr.append(current.value)
  143:             current = current.next
  144:         return str(arr)
--------------------------------------------------------------------------------
[0.07492 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b6df00>

>   ???
E   UnboundLocalError: local variable 'current' referenced before assignment

queue3:141: UnboundLocalError
   - [# 148] SDL queue3: 
--------------------------------------------------------------------------------
  138:         
  139:         arr = []
  140:         current = self.__head.next
  141:         while current:
- 142:             arr.append(current.value)
+ 142:             pass
  143:             current = current.next
  144:         return str(arr)
  145: 
  146: class Queue:
--------------------------------------------------------------------------------
[0.07782 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_7

def test_case_7():
        bool_0 = False
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = queue_0.enqueue(bool_0)
        str_1 = queue_0.__str__()
>       assert str_1 == '[False]'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:105: AssertionError
   - [# 149] SDL queue3: 
--------------------------------------------------------------------------------
  139:         arr = []
  140:         current = self.__head.next
  141:         while current:
  142:             arr.append(current.value)
- 143:             current = current.next
+ 143:             pass
  144:         return str(arr)
  145: 
  146: class Queue:
  147:     def __init__(self):
--------------------------------------------------------------------------------
[5.00638 s] timeout
   - [# 150] SDL queue3: 
--------------------------------------------------------------------------------
  140:         current = self.__head.next
  141:         while current:
  142:             arr.append(current.value)
  143:             current = current.next
- 144:         return str(arr)
+ 144:         pass
  145: 
  146: class Queue:
  147:     def __init__(self):
  148:         self.__queue = DoublyLinkedList()
--------------------------------------------------------------------------------
[0.07408 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
>       assert str_0 == '[]'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:10: AssertionError
   - [# 151] SDL queue3: 
--------------------------------------------------------------------------------
  144:         return str(arr)
  145: 
  146: class Queue:
  147:     def __init__(self):
- 148:         self.__queue = DoublyLinkedList()
+ 148:         pass
  149:     
  150:     def getHead(self) -> T:
  151:         
  152:         '''View first element in the queue.'''
--------------------------------------------------------------------------------
[0.07540 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a4183f10>

>   ???
E   AttributeError: 'Queue' object has no attribute '_Queue__queue'

queue3:190: AttributeError
   - [# 152] SDL queue3: 
--------------------------------------------------------------------------------
  150:     def getHead(self) -> T:
  151:         
  152:         '''View first element in the queue.'''
  153:         
- 154:         return self.__queue.getHead()
+ 154:         pass
  155:     
  156:     def getTail(self):
  157:         
  158:         '''View last element in the queue.'''
--------------------------------------------------------------------------------
[0.07591 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_2

def test_case_2():
        queue_0 = module_0.Queue()
        none_type_0 = queue_0.enqueue(queue_0)
        queue_1 = module_0.Queue()
        var_0 = queue_1.getTail()
        node_0 = module_0.Node(queue_0)
        var_1 = queue_0.getHead()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:53: AssertionError
   - [# 153] SDL queue3: 
--------------------------------------------------------------------------------
  156:     def getTail(self):
  157:         
  158:         '''View last element in the queue.'''
  159:         
- 160:         return self.__queue.getTail()
+ 160:         pass
  161:     
  162:     def dequeue(self) -> T:
  163:         
  164:         '''Remove element from the queue.'''
--------------------------------------------------------------------------------
[0.07510 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_2

def test_case_2():
        queue_0 = module_0.Queue()
        none_type_0 = queue_0.enqueue(queue_0)
        queue_1 = module_0.Queue()
        var_0 = queue_1.getTail()
        node_0 = module_0.Node(queue_0)
        var_1 = queue_0.getHead()
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Queue'
        var_2 = var_1.getTail()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Queue'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:55: AssertionError
   - [# 154] SDL queue3: 
--------------------------------------------------------------------------------
  162:     def dequeue(self) -> T:
  163:         
  164:         '''Remove element from the queue.'''
  165:         
- 166:         return self.__queue.removeAtHead()
+ 166:         pass
  167:     
  168:     def enqueue(self, value: T) -> None:
  169:         
  170:         '''Add element to queue.'''
--------------------------------------------------------------------------------
[0.07403 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [# 155] SDL queue3: 
--------------------------------------------------------------------------------
  168:     def enqueue(self, value: T) -> None:
  169:         
  170:         '''Add element to queue.'''
  171:         
- 172:         self.__queue.addAtTail(value)
+ 172:         pass
  173:     
  174:     def getSize(self) -> int:
  175:         
  176:         '''Get size of the queue.'''
--------------------------------------------------------------------------------
[0.07498 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
        var_2 = queue_0.dequeue()
>       assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'queue3.Node'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:24: AssertionError
   - [# 156] SDL queue3: 
--------------------------------------------------------------------------------
  174:     def getSize(self) -> int:
  175:         
  176:         '''Get size of the queue.'''
  177:         
- 178:         return self.__queue.getSize()
+ 178:         pass
  179:     
  180:     def isEmpty(self) -> bool:
  181:         
  182:         '''Check if queue is empty.'''
--------------------------------------------------------------------------------
[0.07667 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_5

def test_case_5():
        none_type_0 = None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        int_0 = queue_0.getSize()
>       assert int_0 == 0
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:87: AssertionError
   - [# 157] SDL queue3: 
--------------------------------------------------------------------------------
  180:     def isEmpty(self) -> bool:
  181:         
  182:         '''Check if queue is empty.'''
  183:         
- 184:         return self.__queue.isEmpty()
+ 184:         pass
  185:     
  186:     def __str__(self) -> str:
  187:         
  188:         '''Get string representation of the queue.'''
--------------------------------------------------------------------------------
[0.07468 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
>       assert bool_0 is True
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:36: AssertionError
   - [# 158] SDL queue3: 
--------------------------------------------------------------------------------
  186:     def __str__(self) -> str:
  187:         
  188:         '''Get string representation of the queue.'''
  189:         
- 190:         return self.__queue.__str__()
+ 190:         pass
  191: 
  192: 
  193: if __name__ == '__main__':
  194:     pass
--------------------------------------------------------------------------------
[0.07374 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
>       assert str_0 == '[]'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:10: AssertionError
   - [# 159] SVD queue3: 
--------------------------------------------------------------------------------
    5: T = TypeVar('T')
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
-   9:         self.value = value
+   9:         value = value
   10:         self.next = None
   11:         self.prev = None
   12: 
   13: 
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 160] SVD queue3: 
--------------------------------------------------------------------------------
    6: 
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
-  10:         self.next = None
+  10:         next = None
   11:         self.prev = None
   12: 
   13: 
   14: class DoublyLinkedList:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 161] SVD queue3: 
--------------------------------------------------------------------------------
    7: class Node:
    8:     def __init__(self, value: T):
    9:         self.value = value
   10:         self.next = None
-  11:         self.prev = None
+  11:         prev = None
   12: 
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 162] SVD queue3: 
--------------------------------------------------------------------------------
   12: 
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
-  16:         self.__sentinel = Node(None)
+  16:         __sentinel = Node(None)
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 163] SVD queue3: 
--------------------------------------------------------------------------------
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
-  17:         self.__head = self.__sentinel
+  17:         __head = self.__sentinel
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 164] SVD queue3: 
--------------------------------------------------------------------------------
   13: 
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
-  17:         self.__head = self.__sentinel
+  17:         self.__head = __sentinel
   18:         self.__tail = self.__sentinel
   19:         self.__size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
--------------------------------------------------------------------------------
[0.09391 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
>       doubly_linked_list_0 = module_0.DoublyLinkedList()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3b63010>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:17: NameError
   - [# 165] SVD queue3: 
--------------------------------------------------------------------------------
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
   17:         self.__head = self.__sentinel
-  18:         self.__tail = self.__sentinel
+  18:         __tail = self.__sentinel
   19:         self.__size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
   22:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 166] SVD queue3: 
--------------------------------------------------------------------------------
   14: class DoublyLinkedList:
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
   17:         self.__head = self.__sentinel
-  18:         self.__tail = self.__sentinel
+  18:         self.__tail = __sentinel
   19:         self.__size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
   22:         
--------------------------------------------------------------------------------
[0.07279 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
>       doubly_linked_list_0 = module_0.DoublyLinkedList()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:6: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ed1210>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:18: NameError
   - [# 167] SVD queue3: 
--------------------------------------------------------------------------------
   15:     def __init__(self):
   16:         self.__sentinel = Node(None)
   17:         self.__head = self.__sentinel
   18:         self.__tail = self.__sentinel
-  19:         self.__size = 0
+  19:         __size = 0
   20:     
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 168] SVD queue3: 
--------------------------------------------------------------------------------
   21:     def addAtHead(self, value: T) -> None:
   22:         
   23:         '''Add node at head end.'''
   24:         
-  25:         if self.__size == 0:
+  25:         if __size == 0:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.07539 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a400c310>, value = None

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:25: NameError
   - [# 169] SVD queue3: 
--------------------------------------------------------------------------------
   23:         '''Add node at head end.'''
   24:         
   25:         if self.__size == 0:
   26:             newNode = Node(value)
-  27:             self.__sentinel.next = newNode
+  27:             __sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
--------------------------------------------------------------------------------
[0.07609 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3f3d8a0>, value = None

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:27: NameError
   - [# 170] SVD queue3: 
--------------------------------------------------------------------------------
   24:         
   25:         if self.__size == 0:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
-  28:             newNode.prev = self.__sentinel
+  28:             newNode.prev = __sentinel
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
--------------------------------------------------------------------------------
[0.07771 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
        var_1 = doubly_linked_list_0.removeAtTail()
        var_2 = doubly_linked_list_0.removeAtHead()
>       none_type_0 = doubly_linked_list_0.addAtHead(var_2)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d24c70>, value = None

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:28: NameError
   - [# 171] SVD queue3: 
--------------------------------------------------------------------------------
   25:         if self.__size == 0:
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
-  29:             self.__tail = newNode
+  29:             __tail = newNode
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 172] SVD queue3: 
--------------------------------------------------------------------------------
   26:             newNode = Node(value)
   27:             self.__sentinel.next = newNode
   28:             newNode.prev = self.__sentinel
   29:             self.__tail = newNode
-  30:             self.__size += 1
+  30:             __size += 1
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 173] SVD queue3: 
--------------------------------------------------------------------------------
   29:             self.__tail = newNode
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
-  33:             nextNode = self.__sentinel.next
+  33:             nextNode = __sentinel.next
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
--------------------------------------------------------------------------------
[0.07987 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd5c30>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3fd5c30>]'

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:33: NameError
   - [# 174] SVD queue3: 
--------------------------------------------------------------------------------
   30:             self.__size += 1
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
-  34:             self.__sentinel.next = newNode
+  34:             __sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
   38:             self.__size += 1
--------------------------------------------------------------------------------
[0.08051 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ebf7c0>
value = '[<queue3.DoublyLinkedList object at 0x7f33a3ebf7c0>]'

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:34: NameError
   - [# 175] SVD queue3: 
--------------------------------------------------------------------------------
   31:         else:
   32:             newNode = Node(value)
   33:             nextNode = self.__sentinel.next
   34:             self.__sentinel.next = newNode
-  35:             newNode.prev = self.__sentinel
+  35:             newNode.prev = __sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
   38:             self.__size += 1
   39:     
--------------------------------------------------------------------------------
[0.08138 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
        var_1 = doubly_linked_list_1.removeAtTail()
        assert len(doubly_linked_list_1) == 1
        assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'queue3.Node'
        assert var_1.value is None
        assert var_1.next is None
        assert var_1.prev is None
>       none_type_3 = doubly_linked_list_1.addAtHead(str_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4002770>
value = '[<queue3.DoublyLinkedList object at 0x7f33a4002770>]'

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:35: NameError
   - [# 176] SVD queue3: 
--------------------------------------------------------------------------------
   34:             self.__sentinel.next = newNode
   35:             newNode.prev = self.__sentinel
   36:             newNode.next = nextNode
   37:             nextNode.prev = newNode
-  38:             self.__size += 1
+  38:             __size += 1
   39:     
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 177] SVD queue3: 
--------------------------------------------------------------------------------
   40:     def addAtTail(self, value: T) -> None:
   41:         
   42:         '''Add node at tail end.'''
   43:         
-  44:         if self.__size == 0:
+  44:         if __size == 0:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
--------------------------------------------------------------------------------
[0.09546 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4035120>
value = {<queue3.Queue object at 0x7f33a40352a0>: <queue3.Queue object at 0x7f33a40352a0>, None: <queue3.Queue object at 0x7f33a40352a0>, '[]': <queue3.Queue object at 0x7f33a40352a0>}

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:44: NameError
   - [# 178] SVD queue3: 
--------------------------------------------------------------------------------
   42:         '''Add node at tail end.'''
   43:         
   44:         if self.__size == 0:
   45:             newNode = Node(value)
-  46:             self.__sentinel.next = newNode
+  46:             __sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
--------------------------------------------------------------------------------
[0.07498 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ec25c0>
value = {<queue3.Queue object at 0x7f33a3ec1090>: <queue3.Queue object at 0x7f33a3ec1090>, None: <queue3.Queue object at 0x7f33a3ec1090>, '[]': <queue3.Queue object at 0x7f33a3ec1090>}

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:46: NameError
   - [# 179] SVD queue3: 
--------------------------------------------------------------------------------
   43:         
   44:         if self.__size == 0:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
-  47:             newNode.prev = self.__sentinel
+  47:             newNode.prev = __sentinel
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
--------------------------------------------------------------------------------
[0.07453 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4183580>
value = {<queue3.Queue object at 0x7f33a4183130>: <queue3.Queue object at 0x7f33a4183130>, None: <queue3.Queue object at 0x7f33a4183130>, '[]': <queue3.Queue object at 0x7f33a4183130>}

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:47: NameError
   - [# 180] SVD queue3: 
--------------------------------------------------------------------------------
   44:         if self.__size == 0:
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
-  48:             self.__tail = newNode
+  48:             __tail = newNode
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 181] SVD queue3: 
--------------------------------------------------------------------------------
   45:             newNode = Node(value)
   46:             self.__sentinel.next = newNode
   47:             newNode.prev = self.__sentinel
   48:             self.__tail = newNode
-  49:             self.__size += 1
+  49:             __size += 1
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 182] SVD queue3: 
--------------------------------------------------------------------------------
   48:             self.__tail = newNode
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
-  52:             self.__tail.next = newNode
+  52:             __tail.next = newNode
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
   55:             self.__size += 1
   56:     
--------------------------------------------------------------------------------
[0.07451 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
>       none_type_2 = queue_0.enqueue(none_type_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d6a710>, value = None

>   ???
E   NameError: name '_DoublyLinkedList__tail' is not defined

queue3:52: NameError
   - [# 183] SVD queue3: 
--------------------------------------------------------------------------------
   49:             self.__size += 1
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
-  53:             newNode.prev = self.__tail
+  53:             newNode.prev = __tail
   54:             self.__tail = newNode
   55:             self.__size += 1
   56:     
   57:     def removeAtHead(self):
--------------------------------------------------------------------------------
[0.07461 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
>       none_type_2 = queue_0.enqueue(none_type_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:172: in enqueue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d899c0>, value = None

>   ???
E   NameError: name '_DoublyLinkedList__tail' is not defined

queue3:53: NameError
   - [# 184] SVD queue3: 
--------------------------------------------------------------------------------
   50:         else:
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
-  54:             self.__tail = newNode
+  54:             __tail = newNode
   55:             self.__size += 1
   56:     
   57:     def removeAtHead(self):
   58:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 185] SVD queue3: 
--------------------------------------------------------------------------------
   51:             newNode = Node(value)
   52:             self.__tail.next = newNode
   53:             newNode.prev = self.__tail
   54:             self.__tail = newNode
-  55:             self.__size += 1
+  55:             __size += 1
   56:     
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 186] SVD queue3: 
--------------------------------------------------------------------------------
   57:     def removeAtHead(self):
   58:         
   59:         '''Remove node at head end.'''
   60:         
-  61:         if self.__size == 0:
+  61:         if __size == 0:
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
--------------------------------------------------------------------------------
[0.07433 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ea12a0>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:61: NameError
   - [# 187] SVD queue3: 
--------------------------------------------------------------------------------
   59:         '''Remove node at head end.'''
   60:         
   61:         if self.__size == 0:
   62:             return None
-  63:         elif self.__size == 1:
+  63:         elif __size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
--------------------------------------------------------------------------------
[0.07483 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4221ea0>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:63: NameError
   - [# 188] SVD queue3: 
--------------------------------------------------------------------------------
   60:         
   61:         if self.__size == 0:
   62:             return None
   63:         elif self.__size == 1:
-  64:             nodeToRemove = self.__head.next
+  64:             nodeToRemove = __head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
   68:             return nodeToRemove
--------------------------------------------------------------------------------
[0.07528 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
>       var_1 = queue_1.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd77f0>

>   ???
E   NameError: name '_DoublyLinkedList__head' is not defined

queue3:64: NameError
   - [# 189] SVD queue3: 
--------------------------------------------------------------------------------
   61:         if self.__size == 0:
   62:             return None
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
-  65:             self.__sentinel.next = None
+  65:             __sentinel.next = None
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
   68:             return nodeToRemove
   69:         else:
--------------------------------------------------------------------------------
[0.07414 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
        bool_0 = queue_1.isEmpty()
        assert bool_0 is True
        none_type_0 = None
        none_type_1 = queue_1.enqueue(none_type_0)
        none_type_2 = queue_0.enqueue(queue_1)
>       var_1 = queue_1.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3aec700>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:65: NameError
   - [# 190] SVD queue3: 
--------------------------------------------------------------------------------
   63:         elif self.__size == 1:
   64:             nodeToRemove = self.__head.next
   65:             self.__sentinel.next = None
   66:             nodeToRemove.prev = None
-  67:             self.__size -= 1
+  67:             __size -= 1
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 191] SVD queue3: 
--------------------------------------------------------------------------------
   66:             nodeToRemove.prev = None
   67:             self.__size -= 1
   68:             return nodeToRemove
   69:         else:
-  70:             nodeToRemove = self.__head.next
+  70:             nodeToRemove = __head.next
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
--------------------------------------------------------------------------------
[0.07453 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fc69b0>

>   ???
E   NameError: name '_DoublyLinkedList__head' is not defined

queue3:70: NameError
   - [# 192] SVD queue3: 
--------------------------------------------------------------------------------
   68:             return nodeToRemove
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
-  72:             self.__sentinel.next = nextNode
+  72:             __sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
--------------------------------------------------------------------------------
[0.07490 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fc5570>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:72: NameError
   - [# 193] SVD queue3: 
--------------------------------------------------------------------------------
   69:         else:
   70:             nodeToRemove = self.__head.next
   71:             nextNode = nodeToRemove.next
   72:             self.__sentinel.next = nextNode
-  73:             nextNode.prev = self.__sentinel
+  73:             nextNode.prev = __sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
   76:             self.__size -= 1
   77:             return nodeToRemove
--------------------------------------------------------------------------------
[0.07466 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:166: in dequeue
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ea00d0>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:73: NameError
   - [# 194] SVD queue3: 
--------------------------------------------------------------------------------
   72:             self.__sentinel.next = nextNode
   73:             nextNode.prev = self.__sentinel
   74:             nodeToRemove.next = None
   75:             nodeToRemove.prev = None
-  76:             self.__size -= 1
+  76:             __size -= 1
   77:             return nodeToRemove
   78:     
   79:     def removeAtTail(self):
   80:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 195] SVD queue3: 
--------------------------------------------------------------------------------
   79:     def removeAtTail(self):
   80:         
   81:         '''Remove node at tail end.'''
   82:         
-  83:         if self.__size == 0:
+  83:         if __size == 0:
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
--------------------------------------------------------------------------------
[0.07755 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_3

def test_case_3():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        str_0 = doubly_linked_list_0.__str__()
        assert str_0 == '[]'
        var_0 = doubly_linked_list_0.getHead()
>       var_1 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:69: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a41030d0>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:83: NameError
   - [# 196] SVD queue3: 
--------------------------------------------------------------------------------
   81:         '''Remove node at tail end.'''
   82:         
   83:         if self.__size == 0:
   84:             return None
-  85:         elif self.__size == 1:
+  85:         elif __size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
--------------------------------------------------------------------------------
[0.07953 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
>       var_3 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3f18310>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:85: NameError
   - [# 197] SVD queue3: 
--------------------------------------------------------------------------------
   82:         
   83:         if self.__size == 0:
   84:             return None
   85:         elif self.__size == 1:
-  86:             nodeToRemove = self.__tail
+  86:             nodeToRemove = __tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
--------------------------------------------------------------------------------
[0.10099 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
>       var_3 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3addae0>

>   ???
E   NameError: name '_DoublyLinkedList__tail' is not defined

queue3:86: NameError
   - [# 198] SVD queue3: 
--------------------------------------------------------------------------------
   84:             return None
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
-  88:             self.__sentinel.next = None
+  88:             __sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
--------------------------------------------------------------------------------
[0.07919 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
>       var_3 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3f4ad40>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:88: NameError
   - [# 199] SVD queue3: 
--------------------------------------------------------------------------------
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
-  89:             self.__head = self.__sentinel
+  89:             __head = self.__sentinel
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 200] SVD queue3: 
--------------------------------------------------------------------------------
   85:         elif self.__size == 1:
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
-  89:             self.__head = self.__sentinel
+  89:             self.__head = __sentinel
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
--------------------------------------------------------------------------------
[0.07882 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
>       var_3 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a40c8f70>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:89: NameError
   - [# 201] SVD queue3: 
--------------------------------------------------------------------------------
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
-  90:             self.__tail = self.__sentinel
+  90:             __tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 202] SVD queue3: 
--------------------------------------------------------------------------------
   86:             nodeToRemove = self.__tail
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
-  90:             self.__tail = self.__sentinel
+  90:             self.__tail = __sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
--------------------------------------------------------------------------------
[0.07932 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_8

def test_case_8():
        bool_0 = True
        queue_0 = module_0.Queue()
        var_0 = queue_0.dequeue()
        none_type_0 = queue_0.enqueue(bool_0)
        str_0 = queue_0.__str__()
        assert str_0 == '[True]'
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        none_type_1 = doubly_linked_list_0.addAtTail(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.getTail()
        assert len(var_1) == 1
        var_2 = doubly_linked_list_0.getTail()
        assert len(var_2) == 1
>       var_3 = doubly_linked_list_0.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fdc880>

>   ???
E   NameError: name '_DoublyLinkedList__sentinel' is not defined

queue3:90: NameError
   - [# 203] SVD queue3: 
--------------------------------------------------------------------------------
   87:             nodeToRemove.prev = None
   88:             self.__sentinel.next = None
   89:             self.__head = self.__sentinel
   90:             self.__tail = self.__sentinel
-  91:             self.__size -= 1
+  91:             __size -= 1
   92:             return nodeToRemove
   93:         else:
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 204] SVD queue3: 
--------------------------------------------------------------------------------
   90:             self.__tail = self.__sentinel
   91:             self.__size -= 1
   92:             return nodeToRemove
   93:         else:
-  94:             nodeToRemove = self.__tail
+  94:             nodeToRemove = __tail
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
--------------------------------------------------------------------------------
[0.09996 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_10

def test_case_10():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        none_type_0 = doubly_linked_list_1.addAtTail(doubly_linked_list_1)
        assert len(doubly_linked_list_1) == 1
        none_type_1 = None
        str_0 = doubly_linked_list_1.__str__()
        none_type_2 = doubly_linked_list_1.addAtTail(none_type_0)
        assert len(doubly_linked_list_1) == 2
        str_1 = doubly_linked_list_1.__str__()
        var_0 = doubly_linked_list_1.getTail()
>       var_1 = doubly_linked_list_1.removeAtTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:208: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4180e80>

>   ???
E   NameError: name '_DoublyLinkedList__tail' is not defined

queue3:94: NameError
   - [# 205] SVD queue3: 
--------------------------------------------------------------------------------
   94:             nodeToRemove = self.__tail
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
-  98:             self.__tail = previous
+  98:             __tail = previous
   99:             self.__size -= 1
  100:             return nodeToRemove
  101:     
  102:     def isEmpty(self) -> bool:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 206] SVD queue3: 
--------------------------------------------------------------------------------
   95:             previous = nodeToRemove.prev
   96:             nodeToRemove.prev = None
   97:             previous.next = None
   98:             self.__tail = previous
-  99:             self.__size -= 1
+  99:             __size -= 1
  100:             return nodeToRemove
  101:     
  102:     def isEmpty(self) -> bool:
  103:         
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 207] SVD queue3: 
--------------------------------------------------------------------------------
  102:     def isEmpty(self) -> bool:
  103:         
  104:         '''Check if linkedlist is empty'''
  105:         
- 106:         return True if self.__size == 0 else False
+ 106:         return True if __size == 0 else False
  107:     
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
--------------------------------------------------------------------------------
[0.07471 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
>       bool_0 = doubly_linked_list_0.isEmpty()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a4222770>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:106: NameError
   - [# 208] SVD queue3: 
--------------------------------------------------------------------------------
  108:     def getHead(self):
  109:         
  110:         '''Get value at the front end of the list.'''
  111:         
- 112:         if self.__size == 0:
+ 112:         if __size == 0:
  113:             return None
  114:         else:
  115:             return self.__head.next.value
  116:     
--------------------------------------------------------------------------------
[0.07546 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:154: in getHead
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3ed3e80>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:112: NameError
   - [# 209] SVD queue3: 
--------------------------------------------------------------------------------
  111:         
  112:         if self.__size == 0:
  113:             return None
  114:         else:
- 115:             return self.__head.next.value
+ 115:             return __head.next.value
  116:     
  117:     def getTail(self) -> T:
  118:         
  119:         '''Get value at the tail of the list.'''
--------------------------------------------------------------------------------
[0.07589 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_2

def test_case_2():
        queue_0 = module_0.Queue()
        none_type_0 = queue_0.enqueue(queue_0)
        queue_1 = module_0.Queue()
        var_0 = queue_1.getTail()
        node_0 = module_0.Node(queue_0)
>       var_1 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:154: in getHead
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3d982b0>

>   ???
E   NameError: name '_DoublyLinkedList__head' is not defined

queue3:115: NameError
   - [# 210] SVD queue3: 
--------------------------------------------------------------------------------
  117:     def getTail(self) -> T:
  118:         
  119:         '''Get value at the tail of the list.'''
  120:         
- 121:         return self.__tail.value
+ 121:         return __tail.value
  122:     
  123:     def getSize(self) -> int:
  124:         
  125:         '''Get length of the linked list.'''
--------------------------------------------------------------------------------
[0.07682 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
>       var_0 = doubly_linked_list_0.getTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd76a0>

>   ???
E   NameError: name '_DoublyLinkedList__tail' is not defined

queue3:121: NameError
   - [# 211] SVD queue3: 
--------------------------------------------------------------------------------
  123:     def getSize(self) -> int:
  124:         
  125:         '''Get length of the linked list.'''
  126:         
- 127:         return self.__size
+ 127:         return __size
  128:     
  129:     def __len__(self) -> int:
  130:         
  131:         '''Get length of the linked list.'''
--------------------------------------------------------------------------------
[0.07739 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_5

def test_case_5():
        none_type_0 = None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       int_0 = queue_0.getSize()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:178: in getSize
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd6ad0>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:127: NameError
   - [# 212] SVD queue3: 
--------------------------------------------------------------------------------
  129:     def __len__(self) -> int:
  130:         
  131:         '''Get length of the linked list.'''
  132:         
- 133:         return self.__size
+ 133:         return __size
  134:     
  135:     def __str__(self) -> str:
  136:         
  137:         '''Return String representation of linkedlist values.'''
--------------------------------------------------------------------------------
[0.07299 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a3fd4dc0>

>   ???
E   NameError: name '_DoublyLinkedList__size' is not defined

queue3:133: NameError
   - [# 213] SVD queue3: 
--------------------------------------------------------------------------------
  136:         
  137:         '''Return String representation of linkedlist values.'''
  138:         
  139:         arr = []
- 140:         current = self.__head.next
+ 140:         current = __head.next
  141:         while current:
  142:             arr.append(current.value)
  143:             current = current.next
  144:         return str(arr)
--------------------------------------------------------------------------------
[0.07522 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
queue3:190: in __str__
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.DoublyLinkedList object at 0x7f33a40cb070>

>   ???
E   NameError: name '_DoublyLinkedList__head' is not defined

queue3:140: NameError
   - [# 214] SVD queue3: 
--------------------------------------------------------------------------------
  144:         return str(arr)
  145: 
  146: class Queue:
  147:     def __init__(self):
- 148:         self.__queue = DoublyLinkedList()
+ 148:         __queue = DoublyLinkedList()
  149:     
  150:     def getHead(self) -> T:
  151:         
  152:         '''View first element in the queue.'''
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 215] SVD queue3: 
--------------------------------------------------------------------------------
  150:     def getHead(self) -> T:
  151:         
  152:         '''View first element in the queue.'''
  153:         
- 154:         return self.__queue.getHead()
+ 154:         return __queue.getHead()
  155:     
  156:     def getTail(self):
  157:         
  158:         '''View last element in the queue.'''
--------------------------------------------------------------------------------
[0.07424 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
>       var_0 = queue_0.getHead()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a3a9edd0>

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:154: NameError
   - [# 216] SVD queue3: 
--------------------------------------------------------------------------------
  156:     def getTail(self):
  157:         
  158:         '''View last element in the queue.'''
  159:         
- 160:         return self.__queue.getTail()
+ 160:         return __queue.getTail()
  161:     
  162:     def dequeue(self) -> T:
  163:         
  164:         '''Remove element from the queue.'''
--------------------------------------------------------------------------------
[0.07507 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
>       var_1 = queue_0.getTail()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a3cac460>

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:160: NameError
   - [# 217] SVD queue3: 
--------------------------------------------------------------------------------
  162:     def dequeue(self) -> T:
  163:         
  164:         '''Remove element from the queue.'''
  165:         
- 166:         return self.__queue.removeAtHead()
+ 166:         return __queue.removeAtHead()
  167:     
  168:     def enqueue(self, value: T) -> None:
  169:         
  170:         '''Add element to queue.'''
--------------------------------------------------------------------------------
[0.09568 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
        none_type_1 = queue_0.enqueue(dict_0)
        var_0 = doubly_linked_list_0.getTail()
        bool_0 = doubly_linked_list_0.isEmpty()
        assert bool_0 is True
        none_type_2 = queue_0.enqueue(none_type_0)
        int_0 = doubly_linked_list_0.__len__()
        assert int_0 == 0
        bool_1 = doubly_linked_list_0.isEmpty()
        assert bool_1 is True
        var_1 = queue_0.getTail()
>       var_2 = queue_0.dequeue()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a3f17550>

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:166: NameError
   - [# 218] SVD queue3: 
--------------------------------------------------------------------------------
  168:     def enqueue(self, value: T) -> None:
  169:         
  170:         '''Add element to queue.'''
  171:         
- 172:         self.__queue.addAtTail(value)
+ 172:         __queue.addAtTail(value)
  173:     
  174:     def getSize(self) -> int:
  175:         
  176:         '''Get size of the queue.'''
--------------------------------------------------------------------------------
[0.07514 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = None
        dict_0 = {queue_0: queue_0, none_type_0: queue_0, str_0: queue_0}
>       none_type_1 = queue_0.enqueue(dict_0)

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a4103fd0>
value = {<queue3.Queue object at 0x7f33a4103fd0>: <queue3.Queue object at 0x7f33a4103fd0>, None: <queue3.Queue object at 0x7f33a4103fd0>, '[]': <queue3.Queue object at 0x7f33a4103fd0>}

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:172: NameError
   - [# 219] SVD queue3: 
--------------------------------------------------------------------------------
  174:     def getSize(self) -> int:
  175:         
  176:         '''Get size of the queue.'''
  177:         
- 178:         return self.__queue.getSize()
+ 178:         return __queue.getSize()
  179:     
  180:     def isEmpty(self) -> bool:
  181:         
  182:         '''Check if queue is empty.'''
--------------------------------------------------------------------------------
[0.07700 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_5

def test_case_5():
        none_type_0 = None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       int_0 = queue_0.getSize()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a424bca0>

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:178: NameError
   - [# 220] SVD queue3: 
--------------------------------------------------------------------------------
  180:     def isEmpty(self) -> bool:
  181:         
  182:         '''Check if queue is empty.'''
  183:         
- 184:         return self.__queue.isEmpty()
+ 184:         return __queue.isEmpty()
  185:     
  186:     def __str__(self) -> str:
  187:         
  188:         '''Get string representation of the queue.'''
--------------------------------------------------------------------------------
[0.07470 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_1

def test_case_1():
        queue_0 = module_0.Queue()
        str_0 = '\x0c{xK\\BR?w'
        queue_1 = module_0.Queue()
        var_0 = queue_0.getHead()
>       bool_0 = queue_1.isEmpty()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a3b63c40>

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:184: NameError
   - [# 221] SVD queue3: 
--------------------------------------------------------------------------------
  186:     def __str__(self) -> str:
  187:         
  188:         '''Get string representation of the queue.'''
  189:         
- 190:         return self.__queue.__str__()
+ 190:         return __queue.__str__()
  191: 
  192: 
  193: if __name__ == '__main__':
  194:     pass
--------------------------------------------------------------------------------
[0.07468 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        queue_0 = module_0.Queue()
>       str_0 = queue_0.__str__()

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <queue3.Queue object at 0x7f33a3b600d0>

>   ???
E   NameError: name '_Queue__queue' is not defined

queue3:190: NameError
   - [# 222] ZIL queue3: 
--------------------------------------------------------------------------------
  138:         
  139:         arr = []
  140:         current = self.__head.next
  141:         while current:
- 142:             arr.append(current.value)
- 143:             current = current.next
+ 142:             break
+ 143:         
  144:         return str(arr)
  145: 
  146: class Queue:
  147:     def __init__(self):
--------------------------------------------------------------------------------
[0.07792 s] killed by MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py::test_case_7

def test_case_7():
        bool_0 = False
        queue_0 = module_0.Queue()
        str_0 = queue_0.__str__()
        assert str_0 == '[]'
        none_type_0 = queue_0.enqueue(bool_0)
        str_1 = queue_0.__str__()
>       assert str_1 == '[False]'
E       AssertionError

MIO-WHOLE_SUITE/test_queue3_WHOLE_SUITE.py:105: AssertionError
[*] Mutation score [36.57829 s]: 85.4%
   - all: 222
   - killed: 151 (68.0%)
   - survived: 26 (11.7%)
   - incompetent: 44 (19.8%)
   - timeout: 1 (0.5%)
