[*] Start mutation process:
   - targets: linkedList1.py
   - tests: ./DYNAMOSA-MIO-MOSA-WHOLE_SUITE
[*] 111 tests passed:
   - test_linkedList1_DYNAMOSA [0.07579 s]
   - test_linkedList1_WHOLE_SUITE [0.04971 s]
   - test_linkedList1_MOSA [0.05516 s]
   - test_linkedList1_MIO [0.09046 s]
[*] Start mutants generation and execution:
   - [#   1] AOD linkedList1: 
--------------------------------------------------------------------------------
  185:     
  186:     print(test[0])
  187:     print(test[1])
  188:     print(test[2])
- 189:     print(test[-1])
+ 189:     print(test[1])
--------------------------------------------------------------------------------
[0.13585 s] survived
   - [#   2] AOR linkedList1: 
--------------------------------------------------------------------------------
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
- 130:         elif index == self.size - 1:
+ 130:         elif index == self.size + 1:
  131:             
  132:             self.append(data)
  133:         
  134:         elif index == 0:
--------------------------------------------------------------------------------
[0.09213 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#   3] AOR linkedList1: 
--------------------------------------------------------------------------------
  147:             self.cursor = self.head
  148:         else:
  149:             
  150:             a = self.head
- 151:             for x in range(index - 1):
+ 151:             for x in range(index + 1):
  152:                 a = a.next
  153:             
  154:             
  155:             
--------------------------------------------------------------------------------
[0.10446 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
        var_8 = doubly_linked_list_1.__getitem__(var_3)
        doubly_linked_list_2 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_2) == 0
        var_9 = doubly_linked_list_0.__len__()
        assert var_9 == 2
>       var_10 = doubly_linked_list_1.insert(doubly_linked_list_0, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecb3b280>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecb3b220>, index = 2

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

linkedList1:162: AttributeError
   - [#   4] AOR linkedList1: 
--------------------------------------------------------------------------------
  185:     
  186:     print(test[0])
  187:     print(test[1])
  188:     print(test[2])
- 189:     print(test[-1])
+ 189:     print(test[+1])
--------------------------------------------------------------------------------
[0.14320 s] survived
   - [#   5] ASR linkedList1: 
--------------------------------------------------------------------------------
   76:             
   77:             
   78:             node.next = new_node
   79:         
-  80:         self.size += 1
+  80:         self.size -= 1
   81: 
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
--------------------------------------------------------------------------------
[0.09210 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
>       assert len(singly_linked_list_0) == 1
E       ValueError: __len__() should return >= 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:18: ValueError
   - [#   6] ASR linkedList1: 
--------------------------------------------------------------------------------
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
  119:             new_node.prev = node
- 120:         self.size += 1
+ 120:         self.size -= 1
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
--------------------------------------------------------------------------------
[0.11404 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
>       assert len(doubly_linked_list_0) == 1
E       ValueError: __len__() should return >= 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:51: ValueError
   - [#   7] ASR linkedList1: 
--------------------------------------------------------------------------------
  167:             
  168:             a.next = c
  169:             c.prev = a
  170:         
- 171:         self.size += 1
+ 171:         self.size -= 1
  172: 
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
--------------------------------------------------------------------------------
[0.09799 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#   8] CDI linkedList1: 
--------------------------------------------------------------------------------
    5: 
    6: class SinglyLinkedList(object):
    7:     __next__ = next
    8:     
-   9:     def __init__(self):
-  10:         self.head = None
-  11:         self.size = 0
-  12:         self.cursor = None
-  13:     
+   9:     @classmethod
+  10:     def __init__(self):
+  11:         self.head = None
+  12:         self.size = 0
+  13:         self.cursor = None
   14:     def __len__(self):
   15:         return self.size
   16:     
   17:     def __iter__(self):
--------------------------------------------------------------------------------
[0.12435 s] survived
   - [#   9] CDI linkedList1: 
--------------------------------------------------------------------------------
   10:         self.head = None
   11:         self.size = 0
   12:         self.cursor = None
   13:     
-  14:     def __len__(self):
-  15:         return self.size
-  16:     
+  14:     @classmethod
+  15:     def __len__(self):
+  16:         return self.size
   17:     def __iter__(self):
   18:         return self
   19:     
   20:     def __contains__(self, item):
--------------------------------------------------------------------------------
[0.08820 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute 'size'

linkedList1:16: AttributeError
   - [#  10] CDI linkedList1: 
--------------------------------------------------------------------------------
   13:     
   14:     def __len__(self):
   15:         return self.size
   16:     
-  17:     def __iter__(self):
-  18:         return self
-  19:     
+  17:     @classmethod
+  18:     def __iter__(self):
+  19:         return self
   20:     def __contains__(self, item):
   21:         if self.head is not None:
   22:             cur = self.head
   23:             while cur is not None:
--------------------------------------------------------------------------------
[0.08809 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:28: TypeError: object of type 'type' has no len()

   - [#  11] CDI linkedList1: 
--------------------------------------------------------------------------------
   16:     
   17:     def __iter__(self):
   18:         return self
   19:     
-  20:     def __contains__(self, item):
-  21:         if self.head is not None:
-  22:             cur = self.head
-  23:             while cur is not None:
-  24:                 if cur.data is item:
-  25:                     return True
-  26:                 cur = cur.next
-  27:         return False
-  28:     
+  20:     @classmethod
+  21:     def __contains__(self, item):
+  22:         if self.head is not None:
+  23:             cur = self.head
+  24:             while cur is not None:
+  25:                 if cur.data is item:
+  26:                     return True
+  27:                 cur = cur.next
+  28:         return False
   29:     ''' Both getitem and setitem represent the magic methods
   30:         for the object[index] and object[index] = other operations
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
--------------------------------------------------------------------------------
[0.08892 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
>       var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.SinglyLinkedList'>
item = <linkedList1.SinglyLinkedList object at 0x7f24ecb13e80>

>   ???
E   AttributeError: type object 'SinglyLinkedList' has no attribute 'head'

linkedList1:22: AttributeError
   - [#  12] CDI linkedList1: 
--------------------------------------------------------------------------------
   30:         for the object[index] and object[index] = other operations
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
-  34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
-  36:             raise IndexError()
-  37:         else:
-  38:             cur = self.head
-  39:             for x in range(index):
-  40:                 cur = cur.next
-  41:             return cur.data
-  42:     
+  34:     @classmethod
+  35:     def __getitem__(self, index):
+  36:         if (index >= self.size or index < 0):
+  37:             raise IndexError()
+  38:         else:
+  39:             cur = self.head
+  40:             for x in range(index):
+  41:                 cur = cur.next
+  42:             return cur.data
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
   46:         else:
--------------------------------------------------------------------------------
[0.08744 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.SinglyLinkedList'>, index = False

>   ???
E   AttributeError: type object 'SinglyLinkedList' has no attribute 'size'

linkedList1:36: AttributeError
   - [#  13] CDI linkedList1: 
--------------------------------------------------------------------------------
   39:             for x in range(index):
   40:                 cur = cur.next
   41:             return cur.data
   42:     
-  43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
-  45:             raise IndexError()
-  46:         else:
-  47:             cur = self.head
-  48:             for x in range(index):
-  49:                 cur = cur.next
-  50:             cur.data = value
-  51:     
+  43:     @classmethod
+  44:     def __setitem__(self, index, value):
+  45:         if (index >= self.size or index < 0):
+  46:             raise IndexError()
+  47:         else:
+  48:             cur = self.head
+  49:             for x in range(index):
+  50:                 cur = cur.next
+  51:             cur.data = value
   52:     def next(self):
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
--------------------------------------------------------------------------------
[0.09085 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.SinglyLinkedList'>, index = False, value = False

>   ???
E   AttributeError: type object 'SinglyLinkedList' has no attribute 'size'

linkedList1:45: AttributeError
   - [#  14] CDI linkedList1: 
--------------------------------------------------------------------------------
   48:             for x in range(index):
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
-  52:     def next(self):
-  53:         if self.cursor is None:
-  54:             raise StopIteration()
-  55:         else:
-  56:             node = self.cursor.data
-  57:             self.cursor = self.cursor.next
-  58:             return node
-  59:     
+  52:     @classmethod
+  53:     def next(self):
+  54:         if self.cursor is None:
+  55:             raise StopIteration()
+  56:         else:
+  57:             node = self.cursor.data
+  58:             self.cursor = self.cursor.next
+  59:             return node
   60:     def append(self, data):
   61:         ''' Note: The average time for append is O(n)
   62:             however, insertion is O(1), giving it an
   63:             advantage over arrays.
--------------------------------------------------------------------------------
[0.09519 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute 'cursor'

linkedList1:54: AttributeError
   - [#  15] CDI linkedList1: 
--------------------------------------------------------------------------------
   56:             node = self.cursor.data
   57:             self.cursor = self.cursor.next
   58:             return node
   59:     
-  60:     def append(self, data):
-  61:         ''' Note: The average time for append is O(n)
-  62:             however, insertion is O(1), giving it an
-  63:             advantage over arrays.
-  64:         '''
-  65:         if self.head is None:
-  66:             self.head = SinglyLinkedNode(data)
-  67:             self.cursor = self.head
-  68:         else:
-  69:             node = self.head
-  70:             
-  71:             while node.next is not None:
-  72:                 node = node.next
-  73:             
+  60:     @classmethod
+  61:     def append(self, data):
+  62:         ''' Note: The average time for append is O(n)
+  63:             however, insertion is O(1), giving it an
+  64:             advantage over arrays.
+  65:         '''
+  66:         if self.head is None:
+  67:             self.head = SinglyLinkedNode(data)
+  68:             self.cursor = self.head
+  69:         else:
+  70:             node = self.head
+  71:             
+  72:             while node.next is not None:
+  73:                 node = node.next
   74:             
-  75:             new_node = SinglyLinkedNode(data)
-  76:             
+  75:             
+  76:             new_node = SinglyLinkedNode(data)
   77:             
-  78:             node.next = new_node
-  79:         
-  80:         self.size += 1
-  81: 
+  78:             
+  79:             node.next = new_node
+  80:         
+  81:         self.size += 1
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
   85:         self.data = data
--------------------------------------------------------------------------------
[0.08962 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       var_1 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.SinglyLinkedList'>
data = <linkedList1.SinglyLinkedList object at 0x7f24ed121d80>

>   ???
E   AttributeError: type object 'SinglyLinkedList' has no attribute 'head'

linkedList1:66: AttributeError
   - [#  16] CDI linkedList1: 
--------------------------------------------------------------------------------
   80:         self.size += 1
   81: 
   82: 
   83: class SinglyLinkedNode(object):
-  84:     def __init__(self, data):
-  85:         self.data = data
-  86:         self.next = None
-  87: 
+  84:     @classmethod
+  85:     def __init__(self, data):
+  86:         self.data = data
+  87:         self.next = None
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
   90:     def __init__(self):
   91:         
--------------------------------------------------------------------------------
[0.09415 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:142: AssertionError
   - [#  17] CDI linkedList1: 
--------------------------------------------------------------------------------
   86:         self.next = None
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
-  90:     def __init__(self):
-  91:         
-  92:         super(DoublyLinkedList, self).__init__()
-  93:     
+  90:     @classmethod
+  91:     def __init__(self):
+  92:         
+  93:         super(DoublyLinkedList, self).__init__()
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
--------------------------------------------------------------------------------
[0.09719 s] incompetent

TypeError: linkedList1:93: TypeError: SinglyLinkedList.__init__() missing 1 required positional argument: 'self'

   - [#  18] CDI linkedList1: 
--------------------------------------------------------------------------------
   90:     def __init__(self):
   91:         
   92:         super(DoublyLinkedList, self).__init__()
   93:     
-  94:     def previous(self):
-  95:         if self.cursor.prev is None:
-  96:             raise StopIteration()
-  97:         else:
-  98:             self.cursor.prev
-  99:             self.cursor = self.cursor.prev
- 100:             return self.cursor.data
- 101:     
+  94:     @classmethod
+  95:     def previous(self):
+  96:         if self.cursor.prev is None:
+  97:             raise StopIteration()
+  98:         else:
+  99:             self.cursor.prev
+ 100:             self.cursor = self.cursor.prev
+ 101:             return self.cursor.data
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
  104:             however, insertion is O(1), giving it an
  105:             advantage over arrays.
--------------------------------------------------------------------------------
[0.09779 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
        assert len(doubly_linked_list_0) == 1
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.DoublyLinkedList'>

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute 'cursor'

linkedList1:96: AttributeError
   - [#  19] CDI linkedList1: 
--------------------------------------------------------------------------------
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
- 102:     def append(self, data):
- 103:         ''' Note: The average time for append is O(n)
- 104:             however, insertion is O(1), giving it an
- 105:             advantage over arrays.
- 106:         '''
- 107:         if self.head is None:
- 108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
- 110:         else:
- 111:             node = self.head
- 112:             
- 113:             while node.next is not None:
- 114:                 node = node.next
- 115:             
+ 102:     @classmethod
+ 103:     def append(self, data):
+ 104:         ''' Note: The average time for append is O(n)
+ 105:             however, insertion is O(1), giving it an
+ 106:             advantage over arrays.
+ 107:         '''
+ 108:         if self.head is None:
+ 109:             self.head = DoublyLinkedNode(data)
+ 110:             self.cursor = self.head
+ 111:         else:
+ 112:             node = self.head
+ 113:             
+ 114:             while node.next is not None:
+ 115:                 node = node.next
  116:             
- 117:             new_node = DoublyLinkedNode(data)
- 118:             node.next = new_node
- 119:             new_node.prev = node
- 120:         self.size += 1
- 121:     
+ 117:             
+ 118:             new_node = DoublyLinkedNode(data)
+ 119:             node.next = new_node
+ 120:             new_node.prev = node
+ 121:         self.size += 1
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
--------------------------------------------------------------------------------
[0.11829 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
>       var_0 = doubly_linked_list_0.append(dict_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.DoublyLinkedList'>, data = {}

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute 'head'

linkedList1:108: AttributeError
   - [#  20] CDI linkedList1: 
--------------------------------------------------------------------------------
  118:             node.next = new_node
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
- 122:     def insert(self, data, index):
- 123:         if index >= self.size:
- 124:             raise IndexError()
- 125:         if self.head is None:
- 126:             self.head = DoublyLinkedNode(data)
- 127:             self.cursor = self.head
- 128:         
+ 122:     @classmethod
+ 123:     def insert(self, data, index):
+ 124:         if index >= self.size:
+ 125:             raise IndexError()
+ 126:         if self.head is None:
+ 127:             self.head = DoublyLinkedNode(data)
+ 128:             self.cursor = self.head
  129:         
- 130:         elif index == self.size - 1:
- 131:             
- 132:             self.append(data)
- 133:         
- 134:         elif index == 0:
- 135:             
+ 130:         
+ 131:         elif index == self.size - 1:
+ 132:             
+ 133:             self.append(data)
+ 134:         
+ 135:         elif index == 0:
  136:             
  137:             
- 138:             a = self.head
- 139:             c = DoublyLinkedNode(data)
- 140:             
+ 138:             
+ 139:             a = self.head
+ 140:             c = DoublyLinkedNode(data)
  141:             
  142:             
  143:             
- 144:             self.head = c
- 145:             c.next = a
- 146:             a.prev = c
- 147:             self.cursor = self.head
- 148:         else:
- 149:             
- 150:             a = self.head
- 151:             for x in range(index - 1):
- 152:                 a = a.next
- 153:             
+ 144:             
+ 145:             self.head = c
+ 146:             c.next = a
+ 147:             a.prev = c
+ 148:             self.cursor = self.head
+ 149:         else:
+ 150:             
+ 151:             a = self.head
+ 152:             for x in range(index - 1):
+ 153:                 a = a.next
  154:             
  155:             
- 156:             b = a.next
- 157:             c = DoublyLinkedNode(data)
- 158:             
+ 156:             
+ 157:             b = a.next
+ 158:             c = DoublyLinkedNode(data)
  159:             
  160:             
  161:             
- 162:             b.prev = c
- 163:             c.next = b
- 164:             
+ 162:             
+ 163:             b.prev = c
+ 164:             c.next = b
  165:             
  166:             
  167:             
- 168:             a.next = c
- 169:             c.prev = a
- 170:         
- 171:         self.size += 1
- 172: 
+ 168:             
+ 169:             a.next = c
+ 170:             c.prev = a
+ 171:         
+ 172:         self.size += 1
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
--------------------------------------------------------------------------------
[0.10153 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'linkedList1.DoublyLinkedList'>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecb6b0d0>, index = 2

>   ???
E   AttributeError: type object 'DoublyLinkedList' has no attribute 'size'

linkedList1:124: AttributeError
   - [#  21] CDI linkedList1: 
--------------------------------------------------------------------------------
  171:         self.size += 1
  172: 
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
- 175:     def __init__(self, data):
- 176:         
- 177:         super(DoublyLinkedNode, self).__init__(data)
- 178:         self.prev = None
- 179: 
+ 175:     @classmethod
+ 176:     def __init__(self, data):
+ 177:         
+ 178:         super(DoublyLinkedNode, self).__init__(data)
+ 179:         self.prev = None
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
--------------------------------------------------------------------------------
[0.09854 s] incompetent

TypeError: linkedList1:178: TypeError: SinglyLinkedNode.__init__() missing 1 required positional argument: 'data'

   - [#  22] COI linkedList1: 
--------------------------------------------------------------------------------
   17:     def __iter__(self):
   18:         return self
   19:     
   20:     def __contains__(self, item):
-  21:         if self.head is not None:
+  21:         if not (self.head is not None):
   22:             cur = self.head
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
--------------------------------------------------------------------------------
[0.09548 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       assert var_2 is True
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:33: AssertionError
   - [#  23] COI linkedList1: 
--------------------------------------------------------------------------------
   19:     
   20:     def __contains__(self, item):
   21:         if self.head is not None:
   22:             cur = self.head
-  23:             while cur is not None:
+  23:             while not (cur is not None):
   24:                 if cur.data is item:
   25:                     return True
   26:                 cur = cur.next
   27:         return False
--------------------------------------------------------------------------------
[0.09137 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       assert var_2 is True
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:33: AssertionError
   - [#  24] COI linkedList1: 
--------------------------------------------------------------------------------
   20:     def __contains__(self, item):
   21:         if self.head is not None:
   22:             cur = self.head
   23:             while cur is not None:
-  24:                 if cur.data is item:
+  24:                 if not (cur.data is item):
   25:                     return True
   26:                 cur = cur.next
   27:         return False
   28:     
--------------------------------------------------------------------------------
[0.09750 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       assert var_2 is True
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:33: AssertionError
   - [#  25] COI linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if not ((index >= self.size or index < 0)):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.13396 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec953760>, index = False

>   ???
E   IndexError

linkedList1:36: IndexError
   - [#  26] COI linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if not ((index >= self.size or index < 0)):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.11087 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecbf95d0>, index = False
value = False

>   ???
E   IndexError

linkedList1:45: IndexError
   - [#  27] COI linkedList1: 
--------------------------------------------------------------------------------
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
   52:     def next(self):
-  53:         if self.cursor is None:
+  53:         if not (self.cursor is None):
   54:             raise StopIteration()
   55:         else:
   56:             node = self.cursor.data
   57:             self.cursor = self.cursor.next
--------------------------------------------------------------------------------
[0.09592 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9bef20>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:56: AttributeError
   - [#  28] COI linkedList1: 
--------------------------------------------------------------------------------
   61:         ''' Note: The average time for append is O(n)
   62:             however, insertion is O(1), giving it an
   63:             advantage over arrays.
   64:         '''
-  65:         if self.head is None:
+  65:         if not (self.head is None):
   66:             self.head = SinglyLinkedNode(data)
   67:             self.cursor = self.head
   68:         else:
   69:             node = self.head
--------------------------------------------------------------------------------
[0.11053 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       var_1 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ed121d50>
data = <linkedList1.SinglyLinkedList object at 0x7f24ed121d50>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList1:71: AttributeError
   - [#  29] COI linkedList1: 
--------------------------------------------------------------------------------
   67:             self.cursor = self.head
   68:         else:
   69:             node = self.head
   70:             
-  71:             while node.next is not None:
+  71:             while not (node.next is not None):
   72:                 node = node.next
   73:             
   74:             
   75:             new_node = SinglyLinkedNode(data)
--------------------------------------------------------------------------------
[0.12509 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
>       var_3 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ece79e70>
data = <linkedList1.SinglyLinkedList object at 0x7f24ece79e70>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList1:71: AttributeError
   - [#  30] COI linkedList1: 
--------------------------------------------------------------------------------
   91:         
   92:         super(DoublyLinkedList, self).__init__()
   93:     
   94:     def previous(self):
-  95:         if self.cursor.prev is None:
+  95:         if not (self.cursor.prev is None):
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
--------------------------------------------------------------------------------
[0.11148 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
        assert len(doubly_linked_list_0) == 1
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec93b700>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:100: AttributeError
   - [#  31] COI linkedList1: 
--------------------------------------------------------------------------------
  103:         ''' Note: The average time for append is O(n)
  104:             however, insertion is O(1), giving it an
  105:             advantage over arrays.
  106:         '''
- 107:         if self.head is None:
+ 107:         if not (self.head is None):
  108:             self.head = DoublyLinkedNode(data)
  109:             self.cursor = self.head
  110:         else:
  111:             node = self.head
--------------------------------------------------------------------------------
[0.13048 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
>       var_0 = doubly_linked_list_0.append(dict_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24eca39900>, data = {}

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList1:113: AttributeError
   - [#  32] COI linkedList1: 
--------------------------------------------------------------------------------
  109:             self.cursor = self.head
  110:         else:
  111:             node = self.head
  112:             
- 113:             while node.next is not None:
+ 113:             while not (node.next is not None):
  114:                 node = node.next
  115:             
  116:             
  117:             new_node = DoublyLinkedNode(data)
--------------------------------------------------------------------------------
[0.11247 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
>       var_1 = doubly_linked_list_0.append(var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecc5d6f0>, data = None

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList1:113: AttributeError
   - [#  33] COI linkedList1: 
--------------------------------------------------------------------------------
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
  122:     def insert(self, data, index):
- 123:         if index >= self.size:
+ 123:         if not (index >= self.size):
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
--------------------------------------------------------------------------------
[0.12525 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecc5f400>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecc5f400>, index = 2

>   ???
E   IndexError

linkedList1:124: IndexError
   - [#  34] COI linkedList1: 
--------------------------------------------------------------------------------
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
- 125:         if self.head is None:
+ 125:         if not (self.head is None):
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
--------------------------------------------------------------------------------
[0.13955 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#  35] COI linkedList1: 
--------------------------------------------------------------------------------
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
- 130:         elif index == self.size - 1:
+ 130:         elif not (index == self.size - 1):
  131:             
  132:             self.append(data)
  133:         
  134:         elif index == 0:
--------------------------------------------------------------------------------
[0.10781 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#  36] COI linkedList1: 
--------------------------------------------------------------------------------
  130:         elif index == self.size - 1:
  131:             
  132:             self.append(data)
  133:         
- 134:         elif index == 0:
+ 134:         elif not (index == 0):
  135:             
  136:             
  137:             
  138:             a = self.head
--------------------------------------------------------------------------------
[0.13977 s] survived
   - [#  37] COI linkedList1: 
--------------------------------------------------------------------------------
  176:         
  177:         super(DoublyLinkedNode, self).__init__(data)
  178:         self.prev = None
  179: 
- 180: if __name__ == '__main__':
+ 180: if not (__name__ == '__main__'):
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
--------------------------------------------------------------------------------
2
3
4
[0.00000 s] incompetent

IndexError

   - [#  38] CRP linkedList1: 
--------------------------------------------------------------------------------
    7:     __next__ = next
    8:     
    9:     def __init__(self):
   10:         self.head = None
-  11:         self.size = 0
+  11:         self.size = 1
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
   15:         return self.size
--------------------------------------------------------------------------------
[0.08747 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: AssertionError
   - [#  39] CRP linkedList1: 
--------------------------------------------------------------------------------
   25:                     return True
   26:                 cur = cur.next
   27:         return False
   28:     
-  29:     ''' Both getitem and setitem represent the magic methods
-  30:         for the object[index] and object[index] = other operations
-  31:         for linked lists they run in O(n) time making them less
-  32:         efficient than a list() for lookups
-  33:     '''
+  29:     '''mutpy'''
+  30:     
+  31:     
+  32:     
+  33:     
   34:     def __getitem__(self, index):
   35:         if (index >= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
--------------------------------------------------------------------------------
[0.12771 s] survived
   - [#  40] CRP linkedList1: 
--------------------------------------------------------------------------------
   25:                     return True
   26:                 cur = cur.next
   27:         return False
   28:     
-  29:     ''' Both getitem and setitem represent the magic methods
-  30:         for the object[index] and object[index] = other operations
-  31:         for linked lists they run in O(n) time making them less
-  32:         efficient than a list() for lookups
-  33:     '''
+  29:     ''''''
+  30:     
+  31:     
+  32:     
+  33:     
   34:     def __getitem__(self, index):
   35:         if (index >= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
--------------------------------------------------------------------------------
[0.12459 s] survived
   - [#  41] CRP linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index >= self.size or index < 1):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.08976 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ed145720>, index = False

>   ???
E   IndexError

linkedList1:36: IndexError
   - [#  42] CRP linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index >= self.size or index < 1):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.09072 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecbf4970>, index = False
value = False

>   ???
E   IndexError

linkedList1:45: IndexError
   - [#  43] CRP linkedList1: 
--------------------------------------------------------------------------------
   76:             
   77:             
   78:             node.next = new_node
   79:         
-  80:         self.size += 1
+  80:         self.size += 2
   81: 
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
--------------------------------------------------------------------------------
[0.08886 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
>       assert len(singly_linked_list_0) == 1
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:18: AssertionError
   - [#  44] CRP linkedList1: 
--------------------------------------------------------------------------------
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
  119:             new_node.prev = node
- 120:         self.size += 1
+ 120:         self.size += 2
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
--------------------------------------------------------------------------------
[0.12585 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
>       assert len(doubly_linked_list_0) == 1
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:51: AssertionError
   - [#  45] CRP linkedList1: 
--------------------------------------------------------------------------------
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
- 130:         elif index == self.size - 1:
+ 130:         elif index == self.size - 2:
  131:             
  132:             self.append(data)
  133:         
  134:         elif index == 0:
--------------------------------------------------------------------------------
[0.09159 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#  46] CRP linkedList1: 
--------------------------------------------------------------------------------
  130:         elif index == self.size - 1:
  131:             
  132:             self.append(data)
  133:         
- 134:         elif index == 0:
+ 134:         elif index == 1:
  135:             
  136:             
  137:             
  138:             a = self.head
--------------------------------------------------------------------------------
[0.12746 s] survived
   - [#  47] CRP linkedList1: 
--------------------------------------------------------------------------------
  147:             self.cursor = self.head
  148:         else:
  149:             
  150:             a = self.head
- 151:             for x in range(index - 1):
+ 151:             for x in range(index - 2):
  152:                 a = a.next
  153:             
  154:             
  155:             
--------------------------------------------------------------------------------
[0.13597 s] survived
   - [#  48] CRP linkedList1: 
--------------------------------------------------------------------------------
  167:             
  168:             a.next = c
  169:             c.prev = a
  170:         
- 171:         self.size += 1
+ 171:         self.size += 2
  172: 
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
--------------------------------------------------------------------------------
[0.10989 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#  49] CRP linkedList1: 
--------------------------------------------------------------------------------
  176:         
  177:         super(DoublyLinkedNode, self).__init__(data)
  178:         self.prev = None
  179: 
- 180: if __name__ == '__main__':
+ 180: if __name__ == 'mutpy':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
--------------------------------------------------------------------------------
[0.15774 s] survived
   - [#  50] CRP linkedList1: 
--------------------------------------------------------------------------------
  176:         
  177:         super(DoublyLinkedNode, self).__init__(data)
  178:         self.prev = None
  179: 
- 180: if __name__ == '__main__':
+ 180: if __name__ == '':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
--------------------------------------------------------------------------------
[0.15367 s] survived
   - [#  51] CRP linkedList1: 
--------------------------------------------------------------------------------
  178:         self.prev = None
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
- 182:     test.append(2)
+ 182:     test.append(3)
  183:     test.append(3)
  184:     test.append(4)
  185:     
  186:     print(test[0])
--------------------------------------------------------------------------------
[0.17027 s] survived
   - [#  52] CRP linkedList1: 
--------------------------------------------------------------------------------
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
- 183:     test.append(3)
+ 183:     test.append(4)
  184:     test.append(4)
  185:     
  186:     print(test[0])
  187:     print(test[1])
--------------------------------------------------------------------------------
[0.19240 s] survived
   - [#  53] CRP linkedList1: 
--------------------------------------------------------------------------------
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
- 184:     test.append(4)
+ 184:     test.append(5)
  185:     
  186:     print(test[0])
  187:     print(test[1])
  188:     print(test[2])
--------------------------------------------------------------------------------
[0.21536 s] survived
   - [#  54] CRP linkedList1: 
--------------------------------------------------------------------------------
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
  185:     
- 186:     print(test[0])
+ 186:     print(test[1])
  187:     print(test[1])
  188:     print(test[2])
  189:     print(test[-1])
--------------------------------------------------------------------------------
[0.20790 s] survived
   - [#  55] CRP linkedList1: 
--------------------------------------------------------------------------------
  183:     test.append(3)
  184:     test.append(4)
  185:     
  186:     print(test[0])
- 187:     print(test[1])
+ 187:     print(test[2])
  188:     print(test[2])
  189:     print(test[-1])
--------------------------------------------------------------------------------
[0.15423 s] survived
   - [#  56] CRP linkedList1: 
--------------------------------------------------------------------------------
  184:     test.append(4)
  185:     
  186:     print(test[0])
  187:     print(test[1])
- 188:     print(test[2])
+ 188:     print(test[3])
  189:     print(test[-1])
--------------------------------------------------------------------------------
[0.15298 s] survived
   - [#  57] CRP linkedList1: 
--------------------------------------------------------------------------------
  185:     
  186:     print(test[0])
  187:     print(test[1])
  188:     print(test[2])
- 189:     print(test[-1])
+ 189:     print(test[-2])
--------------------------------------------------------------------------------
[0.14879 s] survived
   - [#  58] IOD linkedList1: 
--------------------------------------------------------------------------------
   86:         self.next = None
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
-  90:     def __init__(self):
-  91:         
-  92:         super(DoublyLinkedList, self).__init__()
+  90:     pass
+  91:     
+  92:     
   93:     
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
--------------------------------------------------------------------------------
[0.15704 s] survived
   - [#  59] IOD linkedList1: 
--------------------------------------------------------------------------------
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
- 102:     def append(self, data):
- 103:         ''' Note: The average time for append is O(n)
- 104:             however, insertion is O(1), giving it an
- 105:             advantage over arrays.
- 106:         '''
- 107:         if self.head is None:
- 108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
- 110:         else:
- 111:             node = self.head
- 112:             
- 113:             while node.next is not None:
- 114:                 node = node.next
- 115:             
- 116:             
- 117:             new_node = DoublyLinkedNode(data)
- 118:             node.next = new_node
- 119:             new_node.prev = node
- 120:         self.size += 1
+ 102:     pass
+ 103:     
+ 104:     
+ 105:     
+ 106:     
+ 107:     
+ 108:     
+ 109:     
+ 110:     
+ 111:     
+ 112:     
+ 113:     
+ 114:     
+ 115:     
+ 116:     
+ 117:     
+ 118:     
+ 119:     
+ 120:     
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
--------------------------------------------------------------------------------
[0.11385 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
        assert len(doubly_linked_list_0) == 1
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecea5120>

>   ???
E   AttributeError: 'SinglyLinkedNode' object has no attribute 'prev'

linkedList1:95: AttributeError
   - [#  60] IOD linkedList1: 
--------------------------------------------------------------------------------
  171:         self.size += 1
  172: 
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
- 175:     def __init__(self, data):
- 176:         
- 177:         super(DoublyLinkedNode, self).__init__(data)
- 178:         self.prev = None
+ 175:     pass
+ 176: 
+ 177: 
+ 178: 
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
--------------------------------------------------------------------------------
[0.15249 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
>       assert doubly_linked_node_0.prev is None
E       AttributeError: 'DoublyLinkedNode' object has no attribute 'prev'

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:47: AttributeError
   - [#  61] IOP linkedList1: 
--------------------------------------------------------------------------------
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
- 177:         super(DoublyLinkedNode, self).__init__(data)
- 178:         self.prev = None
+ 177:         self.prev = None
+ 178:         super(DoublyLinkedNode, self).__init__(data)
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
--------------------------------------------------------------------------------
[0.14542 s] survived
   - [#  62] LCR linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index >= self.size and index < 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.11125 s] incompetent

TypeError: linkedList1:39: TypeError: 'float' object cannot be interpreted as an integer

   - [#  63] LCR linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index >= self.size and index < 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.10823 s] incompetent

TypeError: linkedList1:48: TypeError: 'float' object cannot be interpreted as an integer

   - [#  64] OIL linkedList1: 
--------------------------------------------------------------------------------
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
   26:                 cur = cur.next
-  27:         return False
-  28:     
+  27:                 break
+  28:         return False
   29:     ''' Both getitem and setitem represent the magic methods
   30:         for the object[index] and object[index] = other operations
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
--------------------------------------------------------------------------------
[0.13066 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
        assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_7) == 5
        var_8 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 6
        assert len(var_4) == 6
        assert len(var_7) == 6
        var_9 = var_4.__contains__(var_0)
>       assert var_9 is True
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:149: AssertionError
   - [#  65] OIL linkedList1: 
--------------------------------------------------------------------------------
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
   40:                 cur = cur.next
-  41:             return cur.data
+  41:                 breakreturn cur.data
   42:     
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
--------------------------------------------------------------------------------
[0.10024 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:142: AssertionError
   - [#  66] OIL linkedList1: 
--------------------------------------------------------------------------------
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
   49:                 cur = cur.next
-  50:             cur.data = value
+  50:                 breakcur.data = value
   51:     
   52:     def next(self):
   53:         if self.cursor is None:
   54:             raise StopIteration()
--------------------------------------------------------------------------------
[0.13388 s] survived
   - [#  67] OIL linkedList1: 
--------------------------------------------------------------------------------
   69:             node = self.head
   70:             
   71:             while node.next is not None:
   72:                 node = node.next
-  73:             
+  73:                 break
   74:             
   75:             new_node = SinglyLinkedNode(data)
   76:             
   77:             
--------------------------------------------------------------------------------
[0.14860 s] survived
   - [#  68] OIL linkedList1: 
--------------------------------------------------------------------------------
  111:             node = self.head
  112:             
  113:             while node.next is not None:
  114:                 node = node.next
- 115:             
+ 115:                 break
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
  119:             new_node.prev = node
--------------------------------------------------------------------------------
[0.10524 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
>       var_7 = doubly_linked_list_0.__getitem__(var_3)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:141: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecc4a020>, index = 3

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:41: AttributeError
   - [#  69] OIL linkedList1: 
--------------------------------------------------------------------------------
  149:             
  150:             a = self.head
  151:             for x in range(index - 1):
  152:                 a = a.next
- 153:             
+ 153:                 break
  154:             
  155:             
  156:             b = a.next
  157:             c = DoublyLinkedNode(data)
--------------------------------------------------------------------------------
[0.15021 s] survived
   - [#  70] RIL linkedList1: 
--------------------------------------------------------------------------------
   35:         if (index >= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
-  39:             for x in range(index):
+  39:             for x in reversed(range(index)):
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
--------------------------------------------------------------------------------
[0.13700 s] survived
   - [#  71] RIL linkedList1: 
--------------------------------------------------------------------------------
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
-  48:             for x in range(index):
+  48:             for x in reversed(range(index)):
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
   52:     def next(self):
--------------------------------------------------------------------------------
[0.13643 s] survived
   - [#  72] RIL linkedList1: 
--------------------------------------------------------------------------------
  147:             self.cursor = self.head
  148:         else:
  149:             
  150:             a = self.head
- 151:             for x in range(index - 1):
+ 151:             for x in reversed(range(index - 1)):
  152:                 a = a.next
  153:             
  154:             
  155:             
--------------------------------------------------------------------------------
[0.14702 s] survived
   - [#  73] ROR linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index <= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.12555 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24eced3b80>, index = False

>   ???
E   IndexError

linkedList1:36: IndexError
   - [#  74] ROR linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index > self.size or index < 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.16735 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_DYNAMOSA.py::test_case_11

def test_case_11():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.__iter__()
        assert len(var_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_1 = doubly_linked_list_1.__contains__(doubly_linked_list_1)
        assert var_1 is False
        doubly_linked_list_2 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_2) == 0
        doubly_linked_list_3 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_3) == 0
        with pytest.raises(IndexError):
>           doubly_linked_list_3.__getitem__(var_1)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_DYNAMOSA.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9d78e0>, index = False

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:41: AttributeError
   - [#  75] ROR linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index >= self.size or index > 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.13101 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
>       var_8 = doubly_linked_list_1.__getitem__(var_3)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecee1a80>, index = 2

>   ???
E   IndexError

linkedList1:36: IndexError
   - [#  76] ROR linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index >= self.size or index <= 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.12253 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecee64a0>, index = False

>   ???
E   IndexError

linkedList1:36: IndexError
   - [#  77] ROR linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index <= self.size or index < 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.19210 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecef4460>, index = False
value = False

>   ???
E   IndexError

linkedList1:45: IndexError
   - [#  78] ROR linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index > self.size or index < 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.17060 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_DYNAMOSA.py::test_case_14

def test_case_14():
        bool_0 = False
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        with pytest.raises(IndexError):
>           doubly_linked_list_0.__setitem__(bool_0, doubly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_DYNAMOSA.py:152: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9d8ee0>, index = False
value = <linkedList1.DoublyLinkedList object at 0x7f24ec9d8ee0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:50: AttributeError
   - [#  79] ROR linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index >= self.size or index > 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.19468 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
        var_3 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 2
        assert len(var_0) == 2
>       var_4 = singly_linked_list_0.__setitem__(var_2, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ed144670>, index = True
value = True

>   ???
E   IndexError

linkedList1:45: IndexError
   - [#  80] ROR linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index >= self.size or index <= 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.15881 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec9d50f0>, index = False
value = False

>   ???
E   IndexError

linkedList1:45: IndexError
   - [#  81] ROR linkedList1: 
--------------------------------------------------------------------------------
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
  122:     def insert(self, data, index):
- 123:         if index >= self.size:
+ 123:         if index <= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
--------------------------------------------------------------------------------
[0.14801 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecb6b100>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecb6b100>, index = 2

>   ???
E   IndexError

linkedList1:124: IndexError
   - [#  82] ROR linkedList1: 
--------------------------------------------------------------------------------
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
  122:     def insert(self, data, index):
- 123:         if index >= self.size:
+ 123:         if index > self.size:
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
--------------------------------------------------------------------------------
[0.13185 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_9

def test_case_9():
        bool_0 = False
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
>       with pytest.raises(IndexError):
E       Failed: DID NOT RAISE <class 'IndexError'>

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:181: Failed
   - [#  83] ROR linkedList1: 
--------------------------------------------------------------------------------
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
- 130:         elif index == self.size - 1:
+ 130:         elif index != self.size - 1:
  131:             
  132:             self.append(data)
  133:         
  134:         elif index == 0:
--------------------------------------------------------------------------------
[0.12426 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [#  84] ROR linkedList1: 
--------------------------------------------------------------------------------
  130:         elif index == self.size - 1:
  131:             
  132:             self.append(data)
  133:         
- 134:         elif index == 0:
+ 134:         elif index != 0:
  135:             
  136:             
  137:             
  138:             a = self.head
--------------------------------------------------------------------------------
[0.23795 s] survived
   - [#  85] ROR linkedList1: 
--------------------------------------------------------------------------------
  176:         
  177:         super(DoublyLinkedNode, self).__init__(data)
  178:         self.prev = None
  179: 
- 180: if __name__ == '__main__':
+ 180: if __name__ != '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
--------------------------------------------------------------------------------
2
3
4
[0.00000 s] incompetent

IndexError

   - [#  86] SCD linkedList1: 
--------------------------------------------------------------------------------
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
   90:     def __init__(self):
   91:         
-  92:         super(DoublyLinkedList, self).__init__()
+  92:         pass
   93:     
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
--------------------------------------------------------------------------------
[0.11392 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecb69ed0>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute 'size'

linkedList1:15: AttributeError
   - [#  87] SCD linkedList1: 
--------------------------------------------------------------------------------
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
- 177:         super(DoublyLinkedNode, self).__init__(data)
+ 177:         pass
  178:         self.prev = None
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
--------------------------------------------------------------------------------
[0.11965 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
>       assert doubly_linked_node_0.data == {}
E       AttributeError: 'DoublyLinkedNode' object has no attribute 'data'

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:45: AttributeError
   - [#  88] SCI linkedList1: 
--------------------------------------------------------------------------------
   99:             self.cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
  102:     def append(self, data):
- 103:         ''' Note: The average time for append is O(n)
- 104:             however, insertion is O(1), giving it an
- 105:             advantage over arrays.
- 106:         '''
- 107:         if self.head is None:
- 108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
- 110:         else:
- 111:             node = self.head
- 112:             
- 113:             while node.next is not None:
- 114:                 node = node.next
- 115:             
+ 103:         super().append(data)
+ 104:         ''' Note: The average time for append is O(n)
+ 105:             however, insertion is O(1), giving it an
+ 106:             advantage over arrays.
+ 107:         '''
+ 108:         if self.head is None:
+ 109:             self.head = DoublyLinkedNode(data)
+ 110:             self.cursor = self.head
+ 111:         else:
+ 112:             node = self.head
+ 113:             
+ 114:             while node.next is not None:
+ 115:                 node = node.next
  116:             
- 117:             new_node = DoublyLinkedNode(data)
- 118:             node.next = new_node
- 119:             new_node.prev = node
- 120:         self.size += 1
- 121:     
+ 117:             
+ 118:             new_node = DoublyLinkedNode(data)
+ 119:             node.next = new_node
+ 120:             new_node.prev = node
+ 121:         self.size += 1
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
--------------------------------------------------------------------------------
[0.13325 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
>       assert len(doubly_linked_list_0) == 1
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:51: AssertionError
   - [#  89] SDI linkedList1: 
--------------------------------------------------------------------------------
    5: 
    6: class SinglyLinkedList(object):
    7:     __next__ = next
    8:     
-   9:     def __init__(self):
-  10:         self.head = None
-  11:         self.size = 0
-  12:         self.cursor = None
-  13:     
+   9:     @staticmethod
+  10:     def __init__(self):
+  11:         self.head = None
+  12:         self.size = 0
+  13:         self.cursor = None
   14:     def __len__(self):
   15:         return self.size
   16:     
   17:     def __iter__(self):
--------------------------------------------------------------------------------
[0.12868 s] incompetent

TypeError: linkedList1:92: TypeError: SinglyLinkedList.__init__() missing 1 required positional argument: 'self'

   - [#  90] SDI linkedList1: 
--------------------------------------------------------------------------------
   10:         self.head = None
   11:         self.size = 0
   12:         self.cursor = None
   13:     
-  14:     def __len__(self):
-  15:         return self.size
-  16:     
+  14:     @staticmethod
+  15:     def __len__(self):
+  16:         return self.size
   17:     def __iter__(self):
   18:         return self
   19:     
   20:     def __contains__(self, item):
--------------------------------------------------------------------------------
[0.20543 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: TypeError: SinglyLinkedList.__len__() missing 1 required positional argument: 'self'

   - [#  91] SDI linkedList1: 
--------------------------------------------------------------------------------
   13:     
   14:     def __len__(self):
   15:         return self.size
   16:     
-  17:     def __iter__(self):
-  18:         return self
-  19:     
+  17:     @staticmethod
+  18:     def __iter__(self):
+  19:         return self
   20:     def __contains__(self, item):
   21:         if self.head is not None:
   22:             cur = self.head
   23:             while cur is not None:
--------------------------------------------------------------------------------
[0.15188 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:27: TypeError: SinglyLinkedList.__iter__() missing 1 required positional argument: 'self'

   - [#  92] SDI linkedList1: 
--------------------------------------------------------------------------------
   16:     
   17:     def __iter__(self):
   18:         return self
   19:     
-  20:     def __contains__(self, item):
-  21:         if self.head is not None:
-  22:             cur = self.head
-  23:             while cur is not None:
-  24:                 if cur.data is item:
-  25:                     return True
-  26:                 cur = cur.next
-  27:         return False
-  28:     
+  20:     @staticmethod
+  21:     def __contains__(self, item):
+  22:         if self.head is not None:
+  23:             cur = self.head
+  24:             while cur is not None:
+  25:                 if cur.data is item:
+  26:                     return True
+  27:                 cur = cur.next
+  28:         return False
   29:     ''' Both getitem and setitem represent the magic methods
   30:         for the object[index] and object[index] = other operations
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
--------------------------------------------------------------------------------
[0.09892 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:16: TypeError: SinglyLinkedList.__contains__() missing 1 required positional argument: 'item'

   - [#  93] SDI linkedList1: 
--------------------------------------------------------------------------------
   30:         for the object[index] and object[index] = other operations
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
-  34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
-  36:             raise IndexError()
-  37:         else:
-  38:             cur = self.head
-  39:             for x in range(index):
-  40:                 cur = cur.next
-  41:             return cur.data
-  42:     
+  34:     @staticmethod
+  35:     def __getitem__(self, index):
+  36:         if (index >= self.size or index < 0):
+  37:             raise IndexError()
+  38:         else:
+  39:             cur = self.head
+  40:             for x in range(index):
+  41:                 cur = cur.next
+  42:             return cur.data
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
   46:         else:
--------------------------------------------------------------------------------
[0.09557 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: TypeError: SinglyLinkedList.__getitem__() missing 1 required positional argument: 'index'

   - [#  94] SDI linkedList1: 
--------------------------------------------------------------------------------
   39:             for x in range(index):
   40:                 cur = cur.next
   41:             return cur.data
   42:     
-  43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
-  45:             raise IndexError()
-  46:         else:
-  47:             cur = self.head
-  48:             for x in range(index):
-  49:                 cur = cur.next
-  50:             cur.data = value
-  51:     
+  43:     @staticmethod
+  44:     def __setitem__(self, index, value):
+  45:         if (index >= self.size or index < 0):
+  46:             raise IndexError()
+  47:         else:
+  48:             cur = self.head
+  49:             for x in range(index):
+  50:                 cur = cur.next
+  51:             cur.data = value
   52:     def next(self):
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
--------------------------------------------------------------------------------
[0.09401 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: TypeError: SinglyLinkedList.__setitem__() missing 1 required positional argument: 'value'

   - [#  95] SDI linkedList1: 
--------------------------------------------------------------------------------
   48:             for x in range(index):
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
-  52:     def next(self):
-  53:         if self.cursor is None:
-  54:             raise StopIteration()
-  55:         else:
-  56:             node = self.cursor.data
-  57:             self.cursor = self.cursor.next
-  58:             return node
-  59:     
+  52:     @staticmethod
+  53:     def next(self):
+  54:         if self.cursor is None:
+  55:             raise StopIteration()
+  56:         else:
+  57:             node = self.cursor.data
+  58:             self.cursor = self.cursor.next
+  59:             return node
   60:     def append(self, data):
   61:         ''' Note: The average time for append is O(n)
   62:             however, insertion is O(1), giving it an
   63:             advantage over arrays.
--------------------------------------------------------------------------------
[0.15049 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:10: TypeError: SinglyLinkedList.next() missing 1 required positional argument: 'self'

   - [#  96] SDI linkedList1: 
--------------------------------------------------------------------------------
   56:             node = self.cursor.data
   57:             self.cursor = self.cursor.next
   58:             return node
   59:     
-  60:     def append(self, data):
-  61:         ''' Note: The average time for append is O(n)
-  62:             however, insertion is O(1), giving it an
-  63:             advantage over arrays.
-  64:         '''
-  65:         if self.head is None:
-  66:             self.head = SinglyLinkedNode(data)
-  67:             self.cursor = self.head
-  68:         else:
-  69:             node = self.head
-  70:             
-  71:             while node.next is not None:
-  72:                 node = node.next
-  73:             
+  60:     @staticmethod
+  61:     def append(self, data):
+  62:         ''' Note: The average time for append is O(n)
+  63:             however, insertion is O(1), giving it an
+  64:             advantage over arrays.
+  65:         '''
+  66:         if self.head is None:
+  67:             self.head = SinglyLinkedNode(data)
+  68:             self.cursor = self.head
+  69:         else:
+  70:             node = self.head
+  71:             
+  72:             while node.next is not None:
+  73:                 node = node.next
   74:             
-  75:             new_node = SinglyLinkedNode(data)
-  76:             
+  75:             
+  76:             new_node = SinglyLinkedNode(data)
   77:             
-  78:             node.next = new_node
-  79:         
-  80:         self.size += 1
-  81: 
+  78:             
+  79:             node.next = new_node
+  80:         
+  81:         self.size += 1
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
   85:         self.data = data
--------------------------------------------------------------------------------
[0.18146 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:17: TypeError: SinglyLinkedList.append() missing 1 required positional argument: 'data'

   - [#  97] SDI linkedList1: 
--------------------------------------------------------------------------------
   80:         self.size += 1
   81: 
   82: 
   83: class SinglyLinkedNode(object):
-  84:     def __init__(self, data):
-  85:         self.data = data
-  86:         self.next = None
-  87: 
+  84:     @staticmethod
+  85:     def __init__(self, data):
+  86:         self.data = data
+  87:         self.next = None
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
   90:     def __init__(self):
   91:         
--------------------------------------------------------------------------------
[0.12467 s] incompetent

TypeError: linkedList1:66: TypeError: SinglyLinkedNode.__init__() missing 1 required positional argument: 'data'

   - [#  98] SDI linkedList1: 
--------------------------------------------------------------------------------
   86:         self.next = None
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
-  90:     def __init__(self):
-  91:         
-  92:         super(DoublyLinkedList, self).__init__()
-  93:     
+  90:     @staticmethod
+  91:     def __init__(self):
+  92:         
+  93:         super(DoublyLinkedList, self).__init__()
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
--------------------------------------------------------------------------------
[0.10880 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:7: TypeError: DoublyLinkedList.__init__() missing 1 required positional argument: 'self'

   - [#  99] SDI linkedList1: 
--------------------------------------------------------------------------------
   90:     def __init__(self):
   91:         
   92:         super(DoublyLinkedList, self).__init__()
   93:     
-  94:     def previous(self):
-  95:         if self.cursor.prev is None:
-  96:             raise StopIteration()
-  97:         else:
-  98:             self.cursor.prev
-  99:             self.cursor = self.cursor.prev
- 100:             return self.cursor.data
- 101:     
+  94:     @staticmethod
+  95:     def previous(self):
+  96:         if self.cursor.prev is None:
+  97:             raise StopIteration()
+  98:         else:
+  99:             self.cursor.prev
+ 100:             self.cursor = self.cursor.prev
+ 101:             return self.cursor.data
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
  104:             however, insertion is O(1), giving it an
  105:             advantage over arrays.
--------------------------------------------------------------------------------
[0.13348 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: TypeError: DoublyLinkedList.previous() missing 1 required positional argument: 'self'

   - [# 100] SDI linkedList1: 
--------------------------------------------------------------------------------
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
- 102:     def append(self, data):
- 103:         ''' Note: The average time for append is O(n)
- 104:             however, insertion is O(1), giving it an
- 105:             advantage over arrays.
- 106:         '''
- 107:         if self.head is None:
- 108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
- 110:         else:
- 111:             node = self.head
- 112:             
- 113:             while node.next is not None:
- 114:                 node = node.next
- 115:             
+ 102:     @staticmethod
+ 103:     def append(self, data):
+ 104:         ''' Note: The average time for append is O(n)
+ 105:             however, insertion is O(1), giving it an
+ 106:             advantage over arrays.
+ 107:         '''
+ 108:         if self.head is None:
+ 109:             self.head = DoublyLinkedNode(data)
+ 110:             self.cursor = self.head
+ 111:         else:
+ 112:             node = self.head
+ 113:             
+ 114:             while node.next is not None:
+ 115:                 node = node.next
  116:             
- 117:             new_node = DoublyLinkedNode(data)
- 118:             node.next = new_node
- 119:             new_node.prev = node
- 120:         self.size += 1
- 121:     
+ 117:             
+ 118:             new_node = DoublyLinkedNode(data)
+ 119:             node.next = new_node
+ 120:             new_node.prev = node
+ 121:         self.size += 1
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
--------------------------------------------------------------------------------
[0.19343 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:50: TypeError: DoublyLinkedList.append() missing 1 required positional argument: 'data'

   - [# 101] SDI linkedList1: 
--------------------------------------------------------------------------------
  118:             node.next = new_node
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
- 122:     def insert(self, data, index):
- 123:         if index >= self.size:
- 124:             raise IndexError()
- 125:         if self.head is None:
- 126:             self.head = DoublyLinkedNode(data)
- 127:             self.cursor = self.head
- 128:         
+ 122:     @staticmethod
+ 123:     def insert(self, data, index):
+ 124:         if index >= self.size:
+ 125:             raise IndexError()
+ 126:         if self.head is None:
+ 127:             self.head = DoublyLinkedNode(data)
+ 128:             self.cursor = self.head
  129:         
- 130:         elif index == self.size - 1:
- 131:             
- 132:             self.append(data)
- 133:         
- 134:         elif index == 0:
- 135:             
+ 130:         
+ 131:         elif index == self.size - 1:
+ 132:             
+ 133:             self.append(data)
+ 134:         
+ 135:         elif index == 0:
  136:             
  137:             
- 138:             a = self.head
- 139:             c = DoublyLinkedNode(data)
- 140:             
+ 138:             
+ 139:             a = self.head
+ 140:             c = DoublyLinkedNode(data)
  141:             
  142:             
  143:             
- 144:             self.head = c
- 145:             c.next = a
- 146:             a.prev = c
- 147:             self.cursor = self.head
- 148:         else:
- 149:             
- 150:             a = self.head
- 151:             for x in range(index - 1):
- 152:                 a = a.next
- 153:             
+ 144:             
+ 145:             self.head = c
+ 146:             c.next = a
+ 147:             a.prev = c
+ 148:             self.cursor = self.head
+ 149:         else:
+ 150:             
+ 151:             a = self.head
+ 152:             for x in range(index - 1):
+ 153:                 a = a.next
  154:             
  155:             
- 156:             b = a.next
- 157:             c = DoublyLinkedNode(data)
- 158:             
+ 156:             
+ 157:             b = a.next
+ 158:             c = DoublyLinkedNode(data)
  159:             
  160:             
  161:             
- 162:             b.prev = c
- 163:             c.next = b
- 164:             
+ 162:             
+ 163:             b.prev = c
+ 164:             c.next = b
  165:             
  166:             
  167:             
- 168:             a.next = c
- 169:             c.prev = a
- 170:         
- 171:         self.size += 1
- 172: 
+ 168:             
+ 169:             a.next = c
+ 170:             c.prev = a
+ 171:         
+ 172:         self.size += 1
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
--------------------------------------------------------------------------------
[0.21978 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: TypeError: DoublyLinkedList.insert() missing 1 required positional argument: 'index'

   - [# 102] SDI linkedList1: 
--------------------------------------------------------------------------------
  171:         self.size += 1
  172: 
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
- 175:     def __init__(self, data):
- 176:         
- 177:         super(DoublyLinkedNode, self).__init__(data)
- 178:         self.prev = None
- 179: 
+ 175:     @staticmethod
+ 176:     def __init__(self, data):
+ 177:         
+ 178:         super(DoublyLinkedNode, self).__init__(data)
+ 179:         self.prev = None
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
--------------------------------------------------------------------------------
[0.12954 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:44: TypeError: DoublyLinkedNode.__init__() missing 1 required positional argument: 'data'

   - [# 103] SDL linkedList1: 
--------------------------------------------------------------------------------
    3:     thomas moll 2015
    4: '''
    5: 
    6: class SinglyLinkedList(object):
-   7:     __next__ = next
+   7:     pass
    8:     
    9:     def __init__(self):
   10:         self.head = None
   11:         self.size = 0
--------------------------------------------------------------------------------
[0.21636 s] survived
   - [# 104] SDL linkedList1: 
--------------------------------------------------------------------------------
    6: class SinglyLinkedList(object):
    7:     __next__ = next
    8:     
    9:     def __init__(self):
-  10:         self.head = None
+  10:         pass
   11:         self.size = 0
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
--------------------------------------------------------------------------------
[0.11876 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
>       var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec9bd990>
item = <linkedList1.SinglyLinkedList object at 0x7f24ec9bd990>

>   ???
E   AttributeError: 'SinglyLinkedList' object has no attribute 'head'

linkedList1:21: AttributeError
   - [# 105] SDL linkedList1: 
--------------------------------------------------------------------------------
    7:     __next__ = next
    8:     
    9:     def __init__(self):
   10:         self.head = None
-  11:         self.size = 0
+  11:         pass
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
   15:         return self.size
--------------------------------------------------------------------------------
[0.11546 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9506d0>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute 'size'

linkedList1:15: AttributeError
   - [# 106] SDL linkedList1: 
--------------------------------------------------------------------------------
    8:     
    9:     def __init__(self):
   10:         self.head = None
   11:         self.size = 0
-  12:         self.cursor = None
+  12:         pass
   13:     
   14:     def __len__(self):
   15:         return self.size
   16:     
--------------------------------------------------------------------------------
[0.15660 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec951d80>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute 'cursor'

linkedList1:53: AttributeError
   - [# 107] SDL linkedList1: 
--------------------------------------------------------------------------------
   11:         self.size = 0
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
-  15:         return self.size
+  15:         pass
   16:     
   17:     def __iter__(self):
   18:         return self
   19:     
--------------------------------------------------------------------------------
[0.17461 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: TypeError: 'NoneType' object cannot be interpreted as an integer

   - [# 108] SDL linkedList1: 
--------------------------------------------------------------------------------
   14:     def __len__(self):
   15:         return self.size
   16:     
   17:     def __iter__(self):
-  18:         return self
+  18:         pass
   19:     
   20:     def __contains__(self, item):
   21:         if self.head is not None:
   22:             cur = self.head
--------------------------------------------------------------------------------
[0.17443 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/linkedList1/DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:28: TypeError: object of type 'NoneType' has no len()

   - [# 109] SDL linkedList1: 
--------------------------------------------------------------------------------
   18:         return self
   19:     
   20:     def __contains__(self, item):
   21:         if self.head is not None:
-  22:             cur = self.head
+  22:             pass
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
   26:                 cur = cur.next
--------------------------------------------------------------------------------
[0.15428 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
>       var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecd32440>
item = <linkedList1.SinglyLinkedList object at 0x7f24ecd32440>

>   ???
E   UnboundLocalError: local variable 'cur' referenced before assignment

linkedList1:23: UnboundLocalError
   - [# 110] SDL linkedList1: 
--------------------------------------------------------------------------------
   21:         if self.head is not None:
   22:             cur = self.head
   23:             while cur is not None:
   24:                 if cur.data is item:
-  25:                     return True
+  25:                     pass
   26:                 cur = cur.next
   27:         return False
   28:     
   29:     ''' Both getitem and setitem represent the magic methods
--------------------------------------------------------------------------------
[0.11673 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       assert var_2 is True
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:33: AssertionError
   - [# 111] SDL linkedList1: 
--------------------------------------------------------------------------------
   22:             cur = self.head
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
-  26:                 cur = cur.next
+  26:                 pass
   27:         return False
   28:     
   29:     ''' Both getitem and setitem represent the magic methods
   30:         for the object[index] and object[index] = other operations
--------------------------------------------------------------------------------
[5.00512 s] timeout
   - [# 112] SDL linkedList1: 
--------------------------------------------------------------------------------
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
   26:                 cur = cur.next
-  27:         return False
+  27:         pass
   28:     
   29:     ''' Both getitem and setitem represent the magic methods
   30:         for the object[index] and object[index] = other operations
   31:         for linked lists they run in O(n) time making them less
--------------------------------------------------------------------------------
[0.13923 s] incompetent

TypeError: linkedList1:44: TypeError: '>=' not supported between instances of 'NoneType' and 'int'

   - [# 113] SDL linkedList1: 
--------------------------------------------------------------------------------
   25:                     return True
   26:                 cur = cur.next
   27:         return False
   28:     
-  29:     ''' Both getitem and setitem represent the magic methods
-  30:         for the object[index] and object[index] = other operations
-  31:         for linked lists they run in O(n) time making them less
-  32:         efficient than a list() for lookups
-  33:     '''
+  29:     pass
+  30:     
+  31:     
+  32:     
+  33:     
   34:     def __getitem__(self, index):
   35:         if (index >= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
--------------------------------------------------------------------------------
[0.15160 s] survived
   - [# 114] SDL linkedList1: 
--------------------------------------------------------------------------------
   34:     def __getitem__(self, index):
   35:         if (index >= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
-  38:             cur = self.head
+  38:             pass
   39:             for x in range(index):
   40:                 cur = cur.next
   41:             return cur.data
   42:     
--------------------------------------------------------------------------------
[0.10060 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecc4a560>, index = False

>   ???
E   UnboundLocalError: local variable 'cur' referenced before assignment

linkedList1:41: UnboundLocalError
   - [# 115] SDL linkedList1: 
--------------------------------------------------------------------------------
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
-  40:                 cur = cur.next
+  40:                 pass
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
--------------------------------------------------------------------------------
[0.10632 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:142: AssertionError
   - [# 116] SDL linkedList1: 
--------------------------------------------------------------------------------
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
   40:                 cur = cur.next
-  41:             return cur.data
+  41:             pass
   42:     
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
--------------------------------------------------------------------------------
[0.14458 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
        var_3 = singly_linked_list_0.__getitem__(bool_0)
>       assert var_3 is False
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:21: AssertionError
   - [# 117] SDL linkedList1: 
--------------------------------------------------------------------------------
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
   46:         else:
-  47:             cur = self.head
+  47:             pass
   48:             for x in range(index):
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
--------------------------------------------------------------------------------
[0.14732 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecdf0c70>, index = False
value = False

>   ???
E   UnboundLocalError: local variable 'cur' referenced before assignment

linkedList1:50: UnboundLocalError
   - [# 118] SDL linkedList1: 
--------------------------------------------------------------------------------
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
-  49:                 cur = cur.next
+  49:                 pass
   50:             cur.data = value
   51:     
   52:     def next(self):
   53:         if self.cursor is None:
--------------------------------------------------------------------------------
[0.14590 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
        var_3 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 2
        assert len(var_0) == 2
        var_4 = singly_linked_list_0.__setitem__(var_2, var_2)
        var_5 = singly_linked_list_0.__getitem__(bool_0)
>       assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.SinglyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:39: AssertionError
   - [# 119] SDL linkedList1: 
--------------------------------------------------------------------------------
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
   49:                 cur = cur.next
-  50:             cur.data = value
+  50:             pass
   51:     
   52:     def next(self):
   53:         if self.cursor is None:
   54:             raise StopIteration()
--------------------------------------------------------------------------------
[0.12422 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
        var_3 = singly_linked_list_0.__getitem__(bool_0)
>       assert var_3 is False
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:21: AssertionError
   - [# 120] SDL linkedList1: 
--------------------------------------------------------------------------------
   52:     def next(self):
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
-  56:             node = self.cursor.data
+  56:             pass
   57:             self.cursor = self.cursor.next
   58:             return node
   59:     
   60:     def append(self, data):
--------------------------------------------------------------------------------
[0.12186 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_17

def test_case_17():
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_1 = singly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ed1479d0>

>   ???
E   NameError: name 'node' is not defined

linkedList1:58: NameError
   - [# 121] SDL linkedList1: 
--------------------------------------------------------------------------------
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
   56:             node = self.cursor.data
-  57:             self.cursor = self.cursor.next
+  57:             pass
   58:             return node
   59:     
   60:     def append(self, data):
   61:         ''' Note: The average time for append is O(n)
--------------------------------------------------------------------------------
[0.15802 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
>       var_7 = var_2.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:419: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecbf5c30>

>   ???
E   StopIteration

linkedList1:96: StopIteration
   - [# 122] SDL linkedList1: 
--------------------------------------------------------------------------------
   54:             raise StopIteration()
   55:         else:
   56:             node = self.cursor.data
   57:             self.cursor = self.cursor.next
-  58:             return node
+  58:             pass
   59:     
   60:     def append(self, data):
   61:         ''' Note: The average time for append is O(n)
   62:             however, insertion is O(1), giving it an
--------------------------------------------------------------------------------
[0.12668 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_17

def test_case_17():
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_1 = singly_linked_list_0.next()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList1.SinglyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:246: AssertionError
   - [# 123] SDL linkedList1: 
--------------------------------------------------------------------------------
   62:             however, insertion is O(1), giving it an
   63:             advantage over arrays.
   64:         '''
   65:         if self.head is None:
-  66:             self.head = SinglyLinkedNode(data)
+  66:             pass
   67:             self.cursor = self.head
   68:         else:
   69:             node = self.head
   70:             
--------------------------------------------------------------------------------
[0.14167 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec9506d0>, index = False
value = False

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:50: AttributeError
   - [# 124] SDL linkedList1: 
--------------------------------------------------------------------------------
   63:             advantage over arrays.
   64:         '''
   65:         if self.head is None:
   66:             self.head = SinglyLinkedNode(data)
-  67:             self.cursor = self.head
+  67:             pass
   68:         else:
   69:             node = self.head
   70:             
   71:             while node.next is not None:
--------------------------------------------------------------------------------
[0.14061 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_17

def test_case_17():
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_1 = singly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecf17580>

>   ???
E   StopIteration

linkedList1:54: StopIteration
   - [# 125] SDL linkedList1: 
--------------------------------------------------------------------------------
   65:         if self.head is None:
   66:             self.head = SinglyLinkedNode(data)
   67:             self.cursor = self.head
   68:         else:
-  69:             node = self.head
+  69:             pass
   70:             
   71:             while node.next is not None:
   72:                 node = node.next
   73:             
--------------------------------------------------------------------------------
[0.12796 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
>       var_3 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecea5f60>
data = <linkedList1.SinglyLinkedList object at 0x7f24ecea5f60>

>   ???
E   UnboundLocalError: local variable 'node' referenced before assignment

linkedList1:71: UnboundLocalError
   - [# 126] SDL linkedList1: 
--------------------------------------------------------------------------------
   68:         else:
   69:             node = self.head
   70:             
   71:             while node.next is not None:
-  72:                 node = node.next
+  72:                 pass
   73:             
   74:             
   75:             new_node = SinglyLinkedNode(data)
   76:             
--------------------------------------------------------------------------------
[5.00652 s] timeout
   - [# 127] SDL linkedList1: 
--------------------------------------------------------------------------------
   71:             while node.next is not None:
   72:                 node = node.next
   73:             
   74:             
-  75:             new_node = SinglyLinkedNode(data)
+  75:             pass
   76:             
   77:             
   78:             node.next = new_node
   79:         
--------------------------------------------------------------------------------
[0.11924 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
>       var_3 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ed1474f0>
data = <linkedList1.SinglyLinkedList object at 0x7f24ed1474f0>

>   ???
E   NameError: name 'new_node' is not defined

linkedList1:78: NameError
   - [# 128] SDL linkedList1: 
--------------------------------------------------------------------------------
   74:             
   75:             new_node = SinglyLinkedNode(data)
   76:             
   77:             
-  78:             node.next = new_node
+  78:             pass
   79:         
   80:         self.size += 1
   81: 
   82: 
--------------------------------------------------------------------------------
[0.11285 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
        var_3 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 2
        assert len(var_0) == 2
>       var_4 = singly_linked_list_0.__setitem__(var_2, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecdaf820>, index = True
value = True

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:50: AttributeError
   - [# 129] SDL linkedList1: 
--------------------------------------------------------------------------------
   81: 
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
-  85:         self.data = data
+  85:         pass
   86:         self.next = None
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
--------------------------------------------------------------------------------
[0.18458 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
>       var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24eca88580>
item = <linkedList1.SinglyLinkedList object at 0x7f24eca88580>

>   ???
E   AttributeError: 'SinglyLinkedNode' object has no attribute 'data'

linkedList1:24: AttributeError
   - [# 130] SDL linkedList1: 
--------------------------------------------------------------------------------
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
   85:         self.data = data
-  86:         self.next = None
+  86:         pass
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
   90:     def __init__(self):
--------------------------------------------------------------------------------
[0.11690 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
>       var_3 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecee3310>
data = <linkedList1.SinglyLinkedList object at 0x7f24ecee3310>

>   ???
E   AttributeError: 'SinglyLinkedNode' object has no attribute 'next'

linkedList1:71: AttributeError
   - [# 131] SDL linkedList1: 
--------------------------------------------------------------------------------
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
   90:     def __init__(self):
   91:         
-  92:         super(DoublyLinkedList, self).__init__()
+  92:         pass
   93:     
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
--------------------------------------------------------------------------------
[0.11958 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecde6cb0>

>   ???
E   AttributeError: 'DoublyLinkedList' object has no attribute 'size'

linkedList1:15: AttributeError
   - [# 132] SDL linkedList1: 
--------------------------------------------------------------------------------
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
-  98:             self.cursor.prev
+  98:             pass
   99:             self.cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
  102:     def append(self, data):
--------------------------------------------------------------------------------
[0.14502 s] survived
   - [# 133] SDL linkedList1: 
--------------------------------------------------------------------------------
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
-  99:             self.cursor = self.cursor.prev
+  99:             pass
  100:             return self.cursor.data
  101:     
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
--------------------------------------------------------------------------------
[0.14340 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
        var_7 = var_2.previous()
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:420: AssertionError
   - [# 134] SDL linkedList1: 
--------------------------------------------------------------------------------
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
- 100:             return self.cursor.data
+ 100:             pass
  101:     
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
  104:             however, insertion is O(1), giving it an
--------------------------------------------------------------------------------
[0.16536 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
        var_7 = var_2.previous()
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:420: AssertionError
   - [# 135] SDL linkedList1: 
--------------------------------------------------------------------------------
  104:             however, insertion is O(1), giving it an
  105:             advantage over arrays.
  106:         '''
  107:         if self.head is None:
- 108:             self.head = DoublyLinkedNode(data)
+ 108:             pass
  109:             self.cursor = self.head
  110:         else:
  111:             node = self.head
  112:             
--------------------------------------------------------------------------------
[0.12023 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
        assert len(doubly_linked_list_0) == 1
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec94fdf0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

linkedList1:95: AttributeError
   - [# 136] SDL linkedList1: 
--------------------------------------------------------------------------------
  105:             advantage over arrays.
  106:         '''
  107:         if self.head is None:
  108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
+ 109:             pass
  110:         else:
  111:             node = self.head
  112:             
  113:             while node.next is not None:
--------------------------------------------------------------------------------
[0.16520 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
        assert len(doubly_linked_list_0) == 1
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecae30a0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

linkedList1:95: AttributeError
   - [# 137] SDL linkedList1: 
--------------------------------------------------------------------------------
  107:         if self.head is None:
  108:             self.head = DoublyLinkedNode(data)
  109:             self.cursor = self.head
  110:         else:
- 111:             node = self.head
+ 111:             pass
  112:             
  113:             while node.next is not None:
  114:                 node = node.next
  115:             
--------------------------------------------------------------------------------
[0.13519 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
>       var_1 = doubly_linked_list_0.append(var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9d9240>, data = None

>   ???
E   UnboundLocalError: local variable 'node' referenced before assignment

linkedList1:113: UnboundLocalError
   - [# 138] SDL linkedList1: 
--------------------------------------------------------------------------------
  110:         else:
  111:             node = self.head
  112:             
  113:             while node.next is not None:
- 114:                 node = node.next
+ 114:                 pass
  115:             
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
--------------------------------------------------------------------------------
[5.00692 s] timeout
   - [# 139] SDL linkedList1: 
--------------------------------------------------------------------------------
  113:             while node.next is not None:
  114:                 node = node.next
  115:             
  116:             
- 117:             new_node = DoublyLinkedNode(data)
+ 117:             pass
  118:             node.next = new_node
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
--------------------------------------------------------------------------------
[0.13438 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
>       var_1 = doubly_linked_list_0.append(var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9be7d0>, data = None

>   ???
E   NameError: name 'new_node' is not defined

linkedList1:118: NameError
   - [# 140] SDL linkedList1: 
--------------------------------------------------------------------------------
  114:                 node = node.next
  115:             
  116:             
  117:             new_node = DoublyLinkedNode(data)
- 118:             node.next = new_node
+ 118:             pass
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
  122:     def insert(self, data, index):
--------------------------------------------------------------------------------
[0.12611 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
>       var_8 = doubly_linked_list_1.__getitem__(var_3)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ed122380>, index = 2

>   ???
E   AttributeError: 'NoneType' object has no attribute 'next'

linkedList1:40: AttributeError
   - [# 141] SDL linkedList1: 
--------------------------------------------------------------------------------
  115:             
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
- 119:             new_node.prev = node
+ 119:             pass
  120:         self.size += 1
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
--------------------------------------------------------------------------------
[0.15685 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
>       var_7 = var_2.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:419: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ed144af0>

>   ???
E   StopIteration

linkedList1:96: StopIteration
   - [# 142] SDL linkedList1: 
--------------------------------------------------------------------------------
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
- 126:             self.head = DoublyLinkedNode(data)
+ 126:             pass
  127:             self.cursor = self.head
  128:         
  129:         
  130:         elif index == self.size - 1:
--------------------------------------------------------------------------------
[0.10821 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
>       var_2 = doubly_linked_list_0.insert(var_0, int_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:128: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecca7460>, data = None
index = -440

>   ???
E   AttributeError: 'NoneType' object has no attribute 'prev'

linkedList1:162: AttributeError
   - [# 143] SDL linkedList1: 
--------------------------------------------------------------------------------
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
- 127:             self.cursor = self.head
+ 127:             pass
  128:         
  129:         
  130:         elif index == self.size - 1:
  131:             
--------------------------------------------------------------------------------
[0.18636 s] survived
   - [# 144] SDL linkedList1: 
--------------------------------------------------------------------------------
  128:         
  129:         
  130:         elif index == self.size - 1:
  131:             
- 132:             self.append(data)
+ 132:             pass
  133:         
  134:         elif index == 0:
  135:             
  136:             
--------------------------------------------------------------------------------
[0.11177 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
>       assert len(doubly_linked_list_1) == 5
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:75: AssertionError
   - [# 145] SDL linkedList1: 
--------------------------------------------------------------------------------
  134:         elif index == 0:
  135:             
  136:             
  137:             
- 138:             a = self.head
+ 138:             pass
  139:             c = DoublyLinkedNode(data)
  140:             
  141:             
  142:             
--------------------------------------------------------------------------------
[0.10219 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_5

def test_case_5():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.__len__()
        assert var_0 == 0
        var_1 = doubly_linked_list_0.__len__()
        assert var_1 == 0
        var_2 = doubly_linked_list_1.append(var_0)
        assert len(doubly_linked_list_1) == 1
        var_3 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 2
>       var_4 = doubly_linked_list_1.insert(doubly_linked_list_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecf1e4d0>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecf1e920>, index = 0

>   ???
E   UnboundLocalError: local variable 'a' referenced before assignment

linkedList1:145: UnboundLocalError
   - [# 146] SDL linkedList1: 
--------------------------------------------------------------------------------
  135:             
  136:             
  137:             
  138:             a = self.head
- 139:             c = DoublyLinkedNode(data)
+ 139:             pass
  140:             
  141:             
  142:             
  143:             
--------------------------------------------------------------------------------
[0.11875 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_5

def test_case_5():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.__len__()
        assert var_0 == 0
        var_1 = doubly_linked_list_0.__len__()
        assert var_1 == 0
        var_2 = doubly_linked_list_1.append(var_0)
        assert len(doubly_linked_list_1) == 1
        var_3 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 2
>       var_4 = doubly_linked_list_1.insert(doubly_linked_list_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ece61480>
data = <linkedList1.DoublyLinkedList object at 0x7f24ece63e50>, index = 0

>   ???
E   UnboundLocalError: local variable 'c' referenced before assignment

linkedList1:144: UnboundLocalError
   - [# 147] SDL linkedList1: 
--------------------------------------------------------------------------------
  140:             
  141:             
  142:             
  143:             
- 144:             self.head = c
+ 144:             pass
  145:             c.next = a
  146:             a.prev = c
  147:             self.cursor = self.head
  148:         else:
--------------------------------------------------------------------------------
[0.16433 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_22

def test_case_22():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.__len__()
        assert var_0 == 0
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_2 = doubly_linked_list_0.append(var_1)
        assert len(doubly_linked_list_0) == 2
        var_3 = doubly_linked_list_0.__iter__()
        assert len(var_3) == 2
        var_4 = var_3.append(var_3)
        assert len(doubly_linked_list_0) == 3
        assert len(var_3) == 3
        var_5 = var_3.insert(var_3, var_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_3) == 4
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        str_0 = '{sQ*%g\t>14:@;'
        singly_linked_node_0 = module_0.SinglyLinkedNode(str_0)
        var_7 = singly_linked_list_0.append(var_3)
        assert len(singly_linked_list_0) == 2
        var_8 = singly_linked_list_0.append(var_7)
        assert len(singly_linked_list_0) == 3
>       with pytest.raises(StopIteration):
E       Failed: DID NOT RAISE <class 'StopIteration'>

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:313: Failed
   - [# 148] SDL linkedList1: 
--------------------------------------------------------------------------------
  141:             
  142:             
  143:             
  144:             self.head = c
- 145:             c.next = a
+ 145:             pass
  146:             a.prev = c
  147:             self.cursor = self.head
  148:         else:
  149:             
--------------------------------------------------------------------------------
[0.14243 s] survived
   - [# 149] SDL linkedList1: 
--------------------------------------------------------------------------------
  142:             
  143:             
  144:             self.head = c
  145:             c.next = a
- 146:             a.prev = c
+ 146:             pass
  147:             self.cursor = self.head
  148:         else:
  149:             
  150:             a = self.head
--------------------------------------------------------------------------------
[0.13623 s] survived
   - [# 150] SDL linkedList1: 
--------------------------------------------------------------------------------
  143:             
  144:             self.head = c
  145:             c.next = a
  146:             a.prev = c
- 147:             self.cursor = self.head
+ 147:             pass
  148:         else:
  149:             
  150:             a = self.head
  151:             for x in range(index - 1):
--------------------------------------------------------------------------------
[0.13054 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_22

def test_case_22():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.__len__()
        assert var_0 == 0
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_2 = doubly_linked_list_0.append(var_1)
        assert len(doubly_linked_list_0) == 2
        var_3 = doubly_linked_list_0.__iter__()
        assert len(var_3) == 2
        var_4 = var_3.append(var_3)
        assert len(doubly_linked_list_0) == 3
        assert len(var_3) == 3
        var_5 = var_3.insert(var_3, var_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_3) == 4
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        str_0 = '{sQ*%g\t>14:@;'
        singly_linked_node_0 = module_0.SinglyLinkedNode(str_0)
        var_7 = singly_linked_list_0.append(var_3)
        assert len(singly_linked_list_0) == 2
        var_8 = singly_linked_list_0.append(var_7)
        assert len(singly_linked_list_0) == 3
>       with pytest.raises(StopIteration):
E       Failed: DID NOT RAISE <class 'StopIteration'>

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:313: Failed
   - [# 151] SDL linkedList1: 
--------------------------------------------------------------------------------
  146:             a.prev = c
  147:             self.cursor = self.head
  148:         else:
  149:             
- 150:             a = self.head
+ 150:             pass
  151:             for x in range(index - 1):
  152:                 a = a.next
  153:             
  154:             
--------------------------------------------------------------------------------
[0.10061 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
        var_8 = doubly_linked_list_1.__getitem__(var_3)
        doubly_linked_list_2 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_2) == 0
        var_9 = doubly_linked_list_0.__len__()
        assert var_9 == 2
>       var_10 = doubly_linked_list_1.insert(doubly_linked_list_0, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecea6350>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecea7070>, index = 2

>   ???
E   UnboundLocalError: local variable 'a' referenced before assignment

linkedList1:152: UnboundLocalError
   - [# 152] SDL linkedList1: 
--------------------------------------------------------------------------------
  148:         else:
  149:             
  150:             a = self.head
  151:             for x in range(index - 1):
- 152:                 a = a.next
+ 152:                 pass
  153:             
  154:             
  155:             
  156:             b = a.next
--------------------------------------------------------------------------------
[0.14638 s] survived
   - [# 153] SDL linkedList1: 
--------------------------------------------------------------------------------
  152:                 a = a.next
  153:             
  154:             
  155:             
- 156:             b = a.next
+ 156:             pass
  157:             c = DoublyLinkedNode(data)
  158:             
  159:             
  160:             
--------------------------------------------------------------------------------
[0.10479 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
        var_8 = doubly_linked_list_1.__getitem__(var_3)
        doubly_linked_list_2 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_2) == 0
        var_9 = doubly_linked_list_0.__len__()
        assert var_9 == 2
>       var_10 = doubly_linked_list_1.insert(doubly_linked_list_0, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ed0af2e0>
data = <linkedList1.DoublyLinkedList object at 0x7f24ed0aeb90>, index = 2

>   ???
E   NameError: name 'b' is not defined

linkedList1:162: NameError
   - [# 154] SDL linkedList1: 
--------------------------------------------------------------------------------
  153:             
  154:             
  155:             
  156:             b = a.next
- 157:             c = DoublyLinkedNode(data)
+ 157:             pass
  158:             
  159:             
  160:             
  161:             
--------------------------------------------------------------------------------
[0.10500 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
        var_8 = doubly_linked_list_1.__getitem__(var_3)
        doubly_linked_list_2 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_2) == 0
        var_9 = doubly_linked_list_0.__len__()
        assert var_9 == 2
>       var_10 = doubly_linked_list_1.insert(doubly_linked_list_0, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9e0430>
data = <linkedList1.DoublyLinkedList object at 0x7f24ec9e08b0>, index = 2

>   ???
E   UnboundLocalError: local variable 'c' referenced before assignment

linkedList1:162: UnboundLocalError
   - [# 155] SDL linkedList1: 
--------------------------------------------------------------------------------
  158:             
  159:             
  160:             
  161:             
- 162:             b.prev = c
+ 162:             pass
  163:             c.next = b
  164:             
  165:             
  166:             
--------------------------------------------------------------------------------
[0.13839 s] survived
   - [# 156] SDL linkedList1: 
--------------------------------------------------------------------------------
  159:             
  160:             
  161:             
  162:             b.prev = c
- 163:             c.next = b
+ 163:             pass
  164:             
  165:             
  166:             
  167:             
--------------------------------------------------------------------------------
[0.13188 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:142: AssertionError
   - [# 157] SDL linkedList1: 
--------------------------------------------------------------------------------
  164:             
  165:             
  166:             
  167:             
- 168:             a.next = c
+ 168:             pass
  169:             c.prev = a
  170:         
  171:         self.size += 1
  172: 
--------------------------------------------------------------------------------
[0.10406 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:142: AssertionError
   - [# 158] SDL linkedList1: 
--------------------------------------------------------------------------------
  165:             
  166:             
  167:             
  168:             a.next = c
- 169:             c.prev = a
+ 169:             pass
  170:         
  171:         self.size += 1
  172: 
  173: 
--------------------------------------------------------------------------------
[0.13929 s] survived
   - [# 159] SDL linkedList1: 
--------------------------------------------------------------------------------
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
- 177:         super(DoublyLinkedNode, self).__init__(data)
+ 177:         pass
  178:         self.prev = None
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
--------------------------------------------------------------------------------
[0.09762 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
>       assert doubly_linked_node_0.data == {}
E       AttributeError: 'DoublyLinkedNode' object has no attribute 'data'

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:45: AttributeError
   - [# 160] SDL linkedList1: 
--------------------------------------------------------------------------------
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
  177:         super(DoublyLinkedNode, self).__init__(data)
- 178:         self.prev = None
+ 178:         pass
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
--------------------------------------------------------------------------------
[0.11244 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
>       assert doubly_linked_node_0.prev is None
E       AttributeError: 'DoublyLinkedNode' object has no attribute 'prev'

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:47: AttributeError
   - [# 161] SDL linkedList1: 
--------------------------------------------------------------------------------
  177:         super(DoublyLinkedNode, self).__init__(data)
  178:         self.prev = None
  179: 
  180: if __name__ == '__main__':
- 181:     test = SinglyLinkedList()
+ 181:     pass
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
  185:     
--------------------------------------------------------------------------------
[0.18074 s] survived
   - [# 162] SDL linkedList1: 
--------------------------------------------------------------------------------
  178:         self.prev = None
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
- 182:     test.append(2)
+ 182:     pass
  183:     test.append(3)
  184:     test.append(4)
  185:     
  186:     print(test[0])
--------------------------------------------------------------------------------
[0.14978 s] survived
   - [# 163] SDL linkedList1: 
--------------------------------------------------------------------------------
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
- 183:     test.append(3)
+ 183:     pass
  184:     test.append(4)
  185:     
  186:     print(test[0])
  187:     print(test[1])
--------------------------------------------------------------------------------
[0.17689 s] survived
   - [# 164] SDL linkedList1: 
--------------------------------------------------------------------------------
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
  183:     test.append(3)
- 184:     test.append(4)
+ 184:     pass
  185:     
  186:     print(test[0])
  187:     print(test[1])
  188:     print(test[2])
--------------------------------------------------------------------------------
[0.14390 s] survived
   - [# 165] SDL linkedList1: 
--------------------------------------------------------------------------------
  182:     test.append(2)
  183:     test.append(3)
  184:     test.append(4)
  185:     
- 186:     print(test[0])
+ 186:     pass
  187:     print(test[1])
  188:     print(test[2])
  189:     print(test[-1])
--------------------------------------------------------------------------------
[0.16331 s] survived
   - [# 166] SDL linkedList1: 
--------------------------------------------------------------------------------
  183:     test.append(3)
  184:     test.append(4)
  185:     
  186:     print(test[0])
- 187:     print(test[1])
+ 187:     pass
  188:     print(test[2])
  189:     print(test[-1])
--------------------------------------------------------------------------------
[0.18930 s] survived
   - [# 167] SDL linkedList1: 
--------------------------------------------------------------------------------
  184:     test.append(4)
  185:     
  186:     print(test[0])
  187:     print(test[1])
- 188:     print(test[2])
+ 188:     pass
  189:     print(test[-1])
--------------------------------------------------------------------------------
[0.21801 s] survived
   - [# 168] SDL linkedList1: 
--------------------------------------------------------------------------------
  185:     
  186:     print(test[0])
  187:     print(test[1])
  188:     print(test[2])
- 189:     print(test[-1])
+ 189:     pass
--------------------------------------------------------------------------------
[0.15138 s] survived
   - [# 169] SVD linkedList1: 
--------------------------------------------------------------------------------
    6: class SinglyLinkedList(object):
    7:     __next__ = next
    8:     
    9:     def __init__(self):
-  10:         self.head = None
+  10:         head = None
   11:         self.size = 0
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 170] SVD linkedList1: 
--------------------------------------------------------------------------------
    7:     __next__ = next
    8:     
    9:     def __init__(self):
   10:         self.head = None
-  11:         self.size = 0
+  11:         size = 0
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
   15:         return self.size
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 171] SVD linkedList1: 
--------------------------------------------------------------------------------
    8:     
    9:     def __init__(self):
   10:         self.head = None
   11:         self.size = 0
-  12:         self.cursor = None
+  12:         cursor = None
   13:     
   14:     def __len__(self):
   15:         return self.size
   16:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 172] SVD linkedList1: 
--------------------------------------------------------------------------------
   11:         self.size = 0
   12:         self.cursor = None
   13:     
   14:     def __len__(self):
-  15:         return self.size
+  15:         return size
   16:     
   17:     def __iter__(self):
   18:         return self
   19:     
--------------------------------------------------------------------------------
[0.11329 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
>       assert len(doubly_linked_list_0) == 0

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecc8f160>

>   ???
E   NameError: name 'size' is not defined

linkedList1:15: NameError
   - [# 173] SVD linkedList1: 
--------------------------------------------------------------------------------
   17:     def __iter__(self):
   18:         return self
   19:     
   20:     def __contains__(self, item):
-  21:         if self.head is not None:
+  21:         if head is not None:
   22:             cur = self.head
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
--------------------------------------------------------------------------------
[0.11126 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
>       var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecdfd8d0>
item = <linkedList1.SinglyLinkedList object at 0x7f24ecdfd8d0>

>   ???
E   NameError: name 'head' is not defined

linkedList1:21: NameError
   - [# 174] SVD linkedList1: 
--------------------------------------------------------------------------------
   18:         return self
   19:     
   20:     def __contains__(self, item):
   21:         if self.head is not None:
-  22:             cur = self.head
+  22:             cur = head
   23:             while cur is not None:
   24:                 if cur.data is item:
   25:                     return True
   26:                 cur = cur.next
--------------------------------------------------------------------------------
[0.10473 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
>       var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec9db430>
item = <linkedList1.SinglyLinkedList object at 0x7f24ec9db430>

>   ???
E   NameError: name 'head' is not defined

linkedList1:22: NameError
   - [# 175] SVD linkedList1: 
--------------------------------------------------------------------------------
   31:         for linked lists they run in O(n) time making them less
   32:         efficient than a list() for lookups
   33:     '''
   34:     def __getitem__(self, index):
-  35:         if (index >= self.size or index < 0):
+  35:         if (index >= size or index < 0):
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
--------------------------------------------------------------------------------
[0.11536 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24eced79d0>, index = False

>   ???
E   NameError: name 'size' is not defined

linkedList1:35: NameError
   - [# 176] SVD linkedList1: 
--------------------------------------------------------------------------------
   34:     def __getitem__(self, index):
   35:         if (index >= self.size or index < 0):
   36:             raise IndexError()
   37:         else:
-  38:             cur = self.head
+  38:             cur = head
   39:             for x in range(index):
   40:                 cur = cur.next
   41:             return cur.data
   42:     
--------------------------------------------------------------------------------
[0.13929 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
        var_2 = singly_linked_list_0.__setitem__(var_0, var_0)
>       var_3 = singly_linked_list_0.__getitem__(bool_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec9d99c0>, index = False

>   ???
E   NameError: name 'head' is not defined

linkedList1:38: NameError
   - [# 177] SVD linkedList1: 
--------------------------------------------------------------------------------
   40:                 cur = cur.next
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
-  44:         if (index >= self.size or index < 0):
+  44:         if (index >= size or index < 0):
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
--------------------------------------------------------------------------------
[0.10071 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecf14f40>, index = False
value = False

>   ???
E   NameError: name 'size' is not defined

linkedList1:44: NameError
   - [# 178] SVD linkedList1: 
--------------------------------------------------------------------------------
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
   45:             raise IndexError()
   46:         else:
-  47:             cur = self.head
+  47:             cur = head
   48:             for x in range(index):
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
--------------------------------------------------------------------------------
[0.11284 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
        var_1 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_2 = singly_linked_list_0.__setitem__(var_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ec951180>, index = False
value = False

>   ???
E   NameError: name 'head' is not defined

linkedList1:47: NameError
   - [# 179] SVD linkedList1: 
--------------------------------------------------------------------------------
   49:                 cur = cur.next
   50:             cur.data = value
   51:     
   52:     def next(self):
-  53:         if self.cursor is None:
+  53:         if cursor is None:
   54:             raise StopIteration()
   55:         else:
   56:             node = self.cursor.data
   57:             self.cursor = self.cursor.next
--------------------------------------------------------------------------------
[0.11641 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_0

def test_case_0():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:10: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecb05ab0>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:53: NameError
   - [# 180] SVD linkedList1: 
--------------------------------------------------------------------------------
   52:     def next(self):
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
-  56:             node = self.cursor.data
+  56:             node = cursor.data
   57:             self.cursor = self.cursor.next
   58:             return node
   59:     
   60:     def append(self, data):
--------------------------------------------------------------------------------
[0.12545 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_17

def test_case_17():
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_1 = singly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecea4730>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:56: NameError
   - [# 181] SVD linkedList1: 
--------------------------------------------------------------------------------
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
   56:             node = self.cursor.data
-  57:             self.cursor = self.cursor.next
+  57:             cursor = self.cursor.next
   58:             return node
   59:     
   60:     def append(self, data):
   61:         ''' Note: The average time for append is O(n)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 182] SVD linkedList1: 
--------------------------------------------------------------------------------
   53:         if self.cursor is None:
   54:             raise StopIteration()
   55:         else:
   56:             node = self.cursor.data
-  57:             self.cursor = self.cursor.next
+  57:             self.cursor = cursor.next
   58:             return node
   59:     
   60:     def append(self, data):
   61:         ''' Note: The average time for append is O(n)
--------------------------------------------------------------------------------
[0.12001 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_17

def test_case_17():
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 1
>       var_1 = singly_linked_list_0.next()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecca7700>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:57: NameError
   - [# 183] SVD linkedList1: 
--------------------------------------------------------------------------------
   61:         ''' Note: The average time for append is O(n)
   62:             however, insertion is O(1), giving it an
   63:             advantage over arrays.
   64:         '''
-  65:         if self.head is None:
+  65:         if head is None:
   66:             self.head = SinglyLinkedNode(data)
   67:             self.cursor = self.head
   68:         else:
   69:             node = self.head
--------------------------------------------------------------------------------
[0.12115 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       var_1 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecb067a0>
data = <linkedList1.SinglyLinkedList object at 0x7f24ecb067a0>

>   ???
E   NameError: name 'head' is not defined

linkedList1:65: NameError
   - [# 184] SVD linkedList1: 
--------------------------------------------------------------------------------
   62:             however, insertion is O(1), giving it an
   63:             advantage over arrays.
   64:         '''
   65:         if self.head is None:
-  66:             self.head = SinglyLinkedNode(data)
+  66:             head = SinglyLinkedNode(data)
   67:             self.cursor = self.head
   68:         else:
   69:             node = self.head
   70:             
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 185] SVD linkedList1: 
--------------------------------------------------------------------------------
   63:             advantage over arrays.
   64:         '''
   65:         if self.head is None:
   66:             self.head = SinglyLinkedNode(data)
-  67:             self.cursor = self.head
+  67:             cursor = self.head
   68:         else:
   69:             node = self.head
   70:             
   71:             while node.next is not None:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 186] SVD linkedList1: 
--------------------------------------------------------------------------------
   63:             advantage over arrays.
   64:         '''
   65:         if self.head is None:
   66:             self.head = SinglyLinkedNode(data)
-  67:             self.cursor = self.head
+  67:             self.cursor = head
   68:         else:
   69:             node = self.head
   70:             
   71:             while node.next is not None:
--------------------------------------------------------------------------------
[0.12922 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_1

def test_case_1():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       var_1 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24ecc8c0d0>
data = <linkedList1.SinglyLinkedList object at 0x7f24ecc8c0d0>

>   ???
E   NameError: name 'head' is not defined

linkedList1:67: NameError
   - [# 187] SVD linkedList1: 
--------------------------------------------------------------------------------
   65:         if self.head is None:
   66:             self.head = SinglyLinkedNode(data)
   67:             self.cursor = self.head
   68:         else:
-  69:             node = self.head
+  69:             node = head
   70:             
   71:             while node.next is not None:
   72:                 node = node.next
   73:             
--------------------------------------------------------------------------------
[0.11830 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
>       var_3 = singly_linked_list_0.append(singly_linked_list_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.SinglyLinkedList object at 0x7f24eced0be0>
data = <linkedList1.SinglyLinkedList object at 0x7f24eced0be0>

>   ???
E   NameError: name 'head' is not defined

linkedList1:69: NameError
   - [# 188] SVD linkedList1: 
--------------------------------------------------------------------------------
   76:             
   77:             
   78:             node.next = new_node
   79:         
-  80:         self.size += 1
+  80:         size += 1
   81: 
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 189] SVD linkedList1: 
--------------------------------------------------------------------------------
   81: 
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
-  85:         self.data = data
+  85:         data = data
   86:         self.next = None
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 190] SVD linkedList1: 
--------------------------------------------------------------------------------
   82: 
   83: class SinglyLinkedNode(object):
   84:     def __init__(self, data):
   85:         self.data = data
-  86:         self.next = None
+  86:         next = None
   87: 
   88: 
   89: class DoublyLinkedList(SinglyLinkedList):
   90:     def __init__(self):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 191] SVD linkedList1: 
--------------------------------------------------------------------------------
   91:         
   92:         super(DoublyLinkedList, self).__init__()
   93:     
   94:     def previous(self):
-  95:         if self.cursor.prev is None:
+  95:         if cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
--------------------------------------------------------------------------------
[0.10889 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(dict_0)
        assert len(doubly_linked_list_0) == 1
        with pytest.raises(StopIteration):
>           doubly_linked_list_0.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec950370>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:95: NameError
   - [# 192] SVD linkedList1: 
--------------------------------------------------------------------------------
   94:     def previous(self):
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
-  98:             self.cursor.prev
+  98:             cursor.prev
   99:             self.cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
  102:     def append(self, data):
--------------------------------------------------------------------------------
[0.14889 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
>       var_7 = var_2.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:419: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9e3310>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:98: NameError
   - [# 193] SVD linkedList1: 
--------------------------------------------------------------------------------
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
-  99:             self.cursor = self.cursor.prev
+  99:             cursor = self.cursor.prev
  100:             return self.cursor.data
  101:     
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 194] SVD linkedList1: 
--------------------------------------------------------------------------------
   95:         if self.cursor.prev is None:
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
-  99:             self.cursor = self.cursor.prev
+  99:             self.cursor = cursor.prev
  100:             return self.cursor.data
  101:     
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
--------------------------------------------------------------------------------
[0.16316 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
>       var_7 = var_2.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:419: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec966a70>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:99: NameError
   - [# 195] SVD linkedList1: 
--------------------------------------------------------------------------------
   96:             raise StopIteration()
   97:         else:
   98:             self.cursor.prev
   99:             self.cursor = self.cursor.prev
- 100:             return self.cursor.data
+ 100:             return cursor.data
  101:     
  102:     def append(self, data):
  103:         ''' Note: The average time for append is O(n)
  104:             however, insertion is O(1), giving it an
--------------------------------------------------------------------------------
[0.15807 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py::test_case_27

def test_case_27():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__iter__()
        assert len(var_2) == 2
        var_3 = var_2.append(var_2)
        assert len(doubly_linked_list_0) == 3
        assert len(var_2) == 3
        var_4 = var_2.__contains__(var_0)
        assert var_4 is True
        var_5 = var_2.next()
        assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.DoublyLinkedList'
        assert len(var_5) == 3
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_6 = singly_linked_list_0.append(var_4)
        assert len(singly_linked_list_0) == 1
>       var_7 = var_2.previous()

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_MOSA.py:419: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecd49120>

>   ???
E   NameError: name 'cursor' is not defined

linkedList1:100: NameError
   - [# 196] SVD linkedList1: 
--------------------------------------------------------------------------------
  103:         ''' Note: The average time for append is O(n)
  104:             however, insertion is O(1), giving it an
  105:             advantage over arrays.
  106:         '''
- 107:         if self.head is None:
+ 107:         if head is None:
  108:             self.head = DoublyLinkedNode(data)
  109:             self.cursor = self.head
  110:         else:
  111:             node = self.head
--------------------------------------------------------------------------------
[0.14852 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
>       var_0 = doubly_linked_list_0.append(dict_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24eced2950>, data = {}

>   ???
E   NameError: name 'head' is not defined

linkedList1:107: NameError
   - [# 197] SVD linkedList1: 
--------------------------------------------------------------------------------
  104:             however, insertion is O(1), giving it an
  105:             advantage over arrays.
  106:         '''
  107:         if self.head is None:
- 108:             self.head = DoublyLinkedNode(data)
+ 108:             head = DoublyLinkedNode(data)
  109:             self.cursor = self.head
  110:         else:
  111:             node = self.head
  112:             
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 198] SVD linkedList1: 
--------------------------------------------------------------------------------
  105:             advantage over arrays.
  106:         '''
  107:         if self.head is None:
  108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
+ 109:             cursor = self.head
  110:         else:
  111:             node = self.head
  112:             
  113:             while node.next is not None:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 199] SVD linkedList1: 
--------------------------------------------------------------------------------
  105:             advantage over arrays.
  106:         '''
  107:         if self.head is None:
  108:             self.head = DoublyLinkedNode(data)
- 109:             self.cursor = self.head
+ 109:             self.cursor = head
  110:         else:
  111:             node = self.head
  112:             
  113:             while node.next is not None:
--------------------------------------------------------------------------------
[0.10874 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_3

def test_case_3():
        dict_0 = {}
        doubly_linked_node_0 = module_0.DoublyLinkedNode(dict_0)
        assert doubly_linked_node_0.data == {}
        assert doubly_linked_node_0.next is None
        assert doubly_linked_node_0.prev is None
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
>       var_0 = doubly_linked_list_0.append(dict_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24eca12050>, data = {}

>   ???
E   NameError: name 'head' is not defined

linkedList1:109: NameError
   - [# 200] SVD linkedList1: 
--------------------------------------------------------------------------------
  107:         if self.head is None:
  108:             self.head = DoublyLinkedNode(data)
  109:             self.cursor = self.head
  110:         else:
- 111:             node = self.head
+ 111:             node = head
  112:             
  113:             while node.next is not None:
  114:                 node = node.next
  115:             
--------------------------------------------------------------------------------
[0.10694 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
>       var_1 = doubly_linked_list_0.append(var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecdf3400>, data = None

>   ???
E   NameError: name 'head' is not defined

linkedList1:111: NameError
   - [# 201] SVD linkedList1: 
--------------------------------------------------------------------------------
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
  119:             new_node.prev = node
- 120:         self.size += 1
+ 120:         size += 1
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 202] SVD linkedList1: 
--------------------------------------------------------------------------------
  119:             new_node.prev = node
  120:         self.size += 1
  121:     
  122:     def insert(self, data, index):
- 123:         if index >= self.size:
+ 123:         if index >= size:
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
--------------------------------------------------------------------------------
[0.10754 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecbac8e0>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecbac8e0>, index = 2

>   ???
E   NameError: name 'size' is not defined

linkedList1:123: NameError
   - [# 203] SVD linkedList1: 
--------------------------------------------------------------------------------
  121:     
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
- 125:         if self.head is None:
+ 125:         if head is None:
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
--------------------------------------------------------------------------------
[0.10495 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecdf1900>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecdf1900>, index = 2

>   ???
E   NameError: name 'head' is not defined

linkedList1:125: NameError
   - [# 204] SVD linkedList1: 
--------------------------------------------------------------------------------
  122:     def insert(self, data, index):
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
- 126:             self.head = DoublyLinkedNode(data)
+ 126:             head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
  130:         elif index == self.size - 1:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 205] SVD linkedList1: 
--------------------------------------------------------------------------------
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
- 127:             self.cursor = self.head
+ 127:             cursor = self.head
  128:         
  129:         
  130:         elif index == self.size - 1:
  131:             
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 206] SVD linkedList1: 
--------------------------------------------------------------------------------
  123:         if index >= self.size:
  124:             raise IndexError()
  125:         if self.head is None:
  126:             self.head = DoublyLinkedNode(data)
- 127:             self.cursor = self.head
+ 127:             self.cursor = head
  128:         
  129:         
  130:         elif index == self.size - 1:
  131:             
--------------------------------------------------------------------------------
[0.12412 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
>       var_0 = doubly_linked_list_0.insert(int_0, int_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ec9bd9c0>, data = -440
index = -440

>   ???
E   NameError: name 'head' is not defined

linkedList1:127: NameError
   - [# 207] SVD linkedList1: 
--------------------------------------------------------------------------------
  126:             self.head = DoublyLinkedNode(data)
  127:             self.cursor = self.head
  128:         
  129:         
- 130:         elif index == self.size - 1:
+ 130:         elif index == size - 1:
  131:             
  132:             self.append(data)
  133:         
  134:         elif index == 0:
--------------------------------------------------------------------------------
[0.11427 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecd91840>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecd91840>, index = 2

>   ???
E   NameError: name 'size' is not defined

linkedList1:130: NameError
   - [# 208] SVD linkedList1: 
--------------------------------------------------------------------------------
  128:         
  129:         
  130:         elif index == self.size - 1:
  131:             
- 132:             self.append(data)
+ 132:             append(data)
  133:         
  134:         elif index == 0:
  135:             
  136:             
--------------------------------------------------------------------------------
[0.12051 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
>       var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecf17130>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecf17130>, index = 2

>   ???
E   NameError: name 'append' is not defined

linkedList1:132: NameError
   - [# 209] SVD linkedList1: 
--------------------------------------------------------------------------------
  134:         elif index == 0:
  135:             
  136:             
  137:             
- 138:             a = self.head
+ 138:             a = head
  139:             c = DoublyLinkedNode(data)
  140:             
  141:             
  142:             
--------------------------------------------------------------------------------
[0.14491 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_5

def test_case_5():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.__len__()
        assert var_0 == 0
        var_1 = doubly_linked_list_0.__len__()
        assert var_1 == 0
        var_2 = doubly_linked_list_1.append(var_0)
        assert len(doubly_linked_list_1) == 1
        var_3 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 2
>       var_4 = doubly_linked_list_1.insert(doubly_linked_list_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ecc841c0>
data = <linkedList1.DoublyLinkedList object at 0x7f24ecc843a0>, index = 0

>   ???
E   NameError: name 'head' is not defined

linkedList1:138: NameError
   - [# 210] SVD linkedList1: 
--------------------------------------------------------------------------------
  140:             
  141:             
  142:             
  143:             
- 144:             self.head = c
+ 144:             head = c
  145:             c.next = a
  146:             a.prev = c
  147:             self.cursor = self.head
  148:         else:
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 211] SVD linkedList1: 
--------------------------------------------------------------------------------
  143:             
  144:             self.head = c
  145:             c.next = a
  146:             a.prev = c
- 147:             self.cursor = self.head
+ 147:             cursor = self.head
  148:         else:
  149:             
  150:             a = self.head
  151:             for x in range(index - 1):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 212] SVD linkedList1: 
--------------------------------------------------------------------------------
  143:             
  144:             self.head = c
  145:             c.next = a
  146:             a.prev = c
- 147:             self.cursor = self.head
+ 147:             self.cursor = head
  148:         else:
  149:             
  150:             a = self.head
  151:             for x in range(index - 1):
--------------------------------------------------------------------------------
[0.11145 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_5

def test_case_5():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.__len__()
        assert var_0 == 0
        var_1 = doubly_linked_list_0.__len__()
        assert var_1 == 0
        var_2 = doubly_linked_list_1.append(var_0)
        assert len(doubly_linked_list_1) == 1
        var_3 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 2
>       var_4 = doubly_linked_list_1.insert(doubly_linked_list_0, var_0)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24eced0af0>
data = <linkedList1.DoublyLinkedList object at 0x7f24eced2c20>, index = 0

>   ???
E   NameError: name 'head' is not defined

linkedList1:147: NameError
   - [# 213] SVD linkedList1: 
--------------------------------------------------------------------------------
  146:             a.prev = c
  147:             self.cursor = self.head
  148:         else:
  149:             
- 150:             a = self.head
+ 150:             a = head
  151:             for x in range(index - 1):
  152:                 a = a.next
  153:             
  154:             
--------------------------------------------------------------------------------
[0.14950 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
        var_8 = doubly_linked_list_1.__getitem__(var_3)
        doubly_linked_list_2 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_2) == 0
        var_9 = doubly_linked_list_0.__len__()
        assert var_9 == 2
>       var_10 = doubly_linked_list_1.insert(doubly_linked_list_0, var_2)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24eced01f0>
data = <linkedList1.DoublyLinkedList object at 0x7f24eced1a80>, index = 2

>   ???
E   NameError: name 'head' is not defined

linkedList1:150: NameError
   - [# 214] SVD linkedList1: 
--------------------------------------------------------------------------------
  167:             
  168:             a.next = c
  169:             c.prev = a
  170:         
- 171:         self.size += 1
+ 171:         size += 1
  172: 
  173: 
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 215] SVD linkedList1: 
--------------------------------------------------------------------------------
  174: class DoublyLinkedNode(SinglyLinkedNode):
  175:     def __init__(self, data):
  176:         
  177:         super(DoublyLinkedNode, self).__init__(data)
- 178:         self.prev = None
+ 178:         prev = None
  179: 
  180: if __name__ == '__main__':
  181:     test = SinglyLinkedList()
  182:     test.append(2)
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [# 216] ZIL linkedList1: 
--------------------------------------------------------------------------------
   20:     def __contains__(self, item):
   21:         if self.head is not None:
   22:             cur = self.head
   23:             while cur is not None:
-  24:                 if cur.data is item:
-  25:                     return True
-  26:                 cur = cur.next
+  24:                 break
+  25:         
+  26:         
   27:         return False
   28:     
   29:     ''' Both getitem and setitem represent the magic methods
   30:         for the object[index] and object[index] = other operations
--------------------------------------------------------------------------------
[0.14115 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
>       assert var_2 is True
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:33: AssertionError
   - [# 217] ZIL linkedList1: 
--------------------------------------------------------------------------------
   36:             raise IndexError()
   37:         else:
   38:             cur = self.head
   39:             for x in range(index):
-  40:                 cur = cur.next
+  40:                 break
   41:             return cur.data
   42:     
   43:     def __setitem__(self, index, value):
   44:         if (index >= self.size or index < 0):
--------------------------------------------------------------------------------
[0.16274 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_7

def test_case_7():
        int_0 = -440
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        var_0 = doubly_linked_list_0.insert(int_0, int_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.insert(var_0, int_0)
        assert len(doubly_linked_list_0) == 3
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 3
        var_4 = doubly_linked_list_0.__iter__()
        assert len(var_4) == 3
        var_5 = var_4.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 4
        assert len(var_4) == 4
        var_6 = var_4.append(var_5)
        assert len(doubly_linked_list_0) == 5
        assert len(var_4) == 5
        object_0 = module_1.object()
        var_7 = doubly_linked_list_0.__getitem__(var_3)
>       assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'linkedList1.DoublyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:142: AssertionError
   - [# 218] ZIL linkedList1: 
--------------------------------------------------------------------------------
   45:             raise IndexError()
   46:         else:
   47:             cur = self.head
   48:             for x in range(index):
-  49:                 cur = cur.next
+  49:                 break
   50:             cur.data = value
   51:     
   52:     def next(self):
   53:         if self.cursor is None:
--------------------------------------------------------------------------------
[0.13481 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_2

def test_case_2():
        bool_0 = False
        singly_linked_list_0 = module_0.SinglyLinkedList()
        assert len(singly_linked_list_0) == 0
        var_0 = singly_linked_list_0.__iter__()
        assert len(var_0) == 0
        var_1 = var_0.append(var_0)
        assert len(singly_linked_list_0) == 1
        assert len(var_0) == 1
        var_2 = singly_linked_list_0.__contains__(singly_linked_list_0)
        assert var_2 is True
        var_3 = singly_linked_list_0.append(singly_linked_list_0)
        assert len(singly_linked_list_0) == 2
        assert len(var_0) == 2
        var_4 = singly_linked_list_0.__setitem__(var_2, var_2)
        var_5 = singly_linked_list_0.__getitem__(bool_0)
>       assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList1.SinglyLinkedList'
E       AssertionError

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:39: AssertionError
   - [# 219] ZIL linkedList1: 
--------------------------------------------------------------------------------
   68:         else:
   69:             node = self.head
   70:             
   71:             while node.next is not None:
-  72:                 node = node.next
+  72:                 break
   73:             
   74:             
   75:             new_node = SinglyLinkedNode(data)
   76:             
--------------------------------------------------------------------------------
[0.15574 s] survived
   - [# 220] ZIL linkedList1: 
--------------------------------------------------------------------------------
  110:         else:
  111:             node = self.head
  112:             
  113:             while node.next is not None:
- 114:                 node = node.next
+ 114:                 break
  115:             
  116:             
  117:             new_node = DoublyLinkedNode(data)
  118:             node.next = new_node
--------------------------------------------------------------------------------
[0.14718 s] killed by DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py::test_case_4

def test_case_4():
        doubly_linked_list_0 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_0) == 0
        doubly_linked_list_1 = module_0.DoublyLinkedList()
        assert len(doubly_linked_list_1) == 0
        var_0 = doubly_linked_list_0.append(doubly_linked_list_0)
        assert len(doubly_linked_list_0) == 1
        var_1 = doubly_linked_list_0.append(var_0)
        assert len(doubly_linked_list_0) == 2
        var_2 = doubly_linked_list_0.__len__()
        assert var_2 == 2
        var_3 = doubly_linked_list_0.__len__()
        assert var_3 == 2
        var_4 = doubly_linked_list_1.append(var_2)
        assert len(doubly_linked_list_1) == 1
        var_5 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 2
        var_6 = doubly_linked_list_1.append(var_4)
        assert len(doubly_linked_list_1) == 3
        var_7 = doubly_linked_list_1.insert(doubly_linked_list_1, var_2)
        assert len(doubly_linked_list_1) == 5
>       var_8 = doubly_linked_list_1.__getitem__(var_3)

DYNAMOSA-MIO-MOSA-WHOLE_SUITE/test_linkedList1_WHOLE_SUITE.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <linkedList1.DoublyLinkedList object at 0x7f24ece7a2f0>, index = 2

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

linkedList1:41: AttributeError
   - [# 221] ZIL linkedList1: 
--------------------------------------------------------------------------------
  148:         else:
  149:             
  150:             a = self.head
  151:             for x in range(index - 1):
- 152:                 a = a.next
+ 152:                 break
  153:             
  154:             
  155:             
  156:             b = a.next
--------------------------------------------------------------------------------
[0.14765 s] survived
[*] Mutation score [64.56298 s]: 74.7%
   - all: 221
   - killed: 130 (58.8%)
   - survived: 45 (20.4%)
   - incompetent: 43 (19.5%)
   - timeout: 3 (1.4%)
