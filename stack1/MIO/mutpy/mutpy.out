[34m[*][0m Start mutation process:
[36m   -[0m targets: stack1.py
[36m   -[0m tests: ./MIO
[34m[*][0m 15 tests passed:
[36m   -[0m test_stack1_MIO [0.27411 s]
[34m[*][0m Start mutants generation and execution:
[36m   -[0m [#   1] AOR stack1: 
--------------------------------------------------------------------------------
   90:         The add function can also be accessed via the ``operator``
   91:         module.
   92:     """
   93:     stack = Stack()
[34m-  94:     ops = {'+': lambda a, b: (a + b), \[0m
[32m+  94:     ops = {'+': lambda a, b: (a - b), \[0m
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
--------------------------------------------------------------------------------
[0.13566 s] [31msurvived[0m
[36m   -[0m [#   2] AOR stack1: 
--------------------------------------------------------------------------------
   91:         module.
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
[34m-  95:         '-': lambda a, b: (a - b), \[0m
[32m+  95:         '-': lambda a, b: (a + b), \[0m
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
--------------------------------------------------------------------------------
[0.14522 s] [31msurvived[0m
[36m   -[0m [#   3] AOR stack1: 
--------------------------------------------------------------------------------
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
[34m-  96:         '*': lambda a, b: (a * b), \[0m
[32m+  96:         '*': lambda a, b: (a / b), \[0m
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
--------------------------------------------------------------------------------
[0.13475 s] [31msurvived[0m
[36m   -[0m [#   4] AOR stack1: 
--------------------------------------------------------------------------------
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
[34m-  96:         '*': lambda a, b: (a * b), \[0m
[32m+  96:         '*': lambda a, b: (a // b), \[0m
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
--------------------------------------------------------------------------------
[0.13844 s] [31msurvived[0m
[36m   -[0m [#   5] AOR stack1: 
--------------------------------------------------------------------------------
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
[34m-  96:         '*': lambda a, b: (a * b), \[0m
[32m+  96:         '*': lambda a, b: (a ** b), \[0m
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
--------------------------------------------------------------------------------
[0.15323 s] [31msurvived[0m
[36m   -[0m [#   6] AOR stack1: 
--------------------------------------------------------------------------------
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
[34m-  97:         '/': lambda a, b: (a / b), \[0m
[32m+  97:         '/': lambda a, b: (a // b), \[0m
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
--------------------------------------------------------------------------------
[0.13560 s] [31msurvived[0m
[36m   -[0m [#   7] AOR stack1: 
--------------------------------------------------------------------------------
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
[34m-  97:         '/': lambda a, b: (a / b), \[0m
[32m+  97:         '/': lambda a, b: (a * b), \[0m
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
--------------------------------------------------------------------------------
[0.15410 s] [31msurvived[0m
[36m   -[0m [#   8] AOR stack1: 
--------------------------------------------------------------------------------
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
[34m-  98:         '%': lambda a, b: (a % b), \[0m
[32m+  98:         '%': lambda a, b: (a * b), \[0m
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
  102:     tokens = string.split(' ')
--------------------------------------------------------------------------------
[0.13567 s] [31msurvived[0m
[36m   -[0m [#   9] AOR stack1: 
--------------------------------------------------------------------------------
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
[34m-  99:         '^': lambda a, b: (a ** b)}[0m
[32m+  99:         '^': lambda a, b: (a * b)}[0m
  100:     
  101:     
  102:     tokens = string.split(' ')
  103:     
--------------------------------------------------------------------------------
[0.14746 s] [31msurvived[0m
[36m   -[0m [#  10] ASR stack1: 
--------------------------------------------------------------------------------
   22:             
   23:             self.top = item2
   24:             item2.next = item1
   25:         
[34m-  26:         self.size += 1[0m
[32m+  26:         self.size -= 1[0m
   27:     
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
--------------------------------------------------------------------------------
[0.21452 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        var_0 = stack_0.push(stack_0)
>       assert len(stack_0) == 1
E       ValueError: __len__() should return >= 0

MIO/test_stack1_MIO.py:9: ValueError
[36m   -[0m [#  11] ASR stack1: 
--------------------------------------------------------------------------------
   31:         else:
   32:             top_data = self.top.data
   33:             
   34:             self.top = self.top.next
[34m-  35:             self.size -= 1[0m
[32m+  35:             self.size += 1[0m
   36:             return top_data
   37:     
   38:     def peek(self):
   39:         if self.top is None:
--------------------------------------------------------------------------------
[0.21323 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  12] CDI stack1: 
--------------------------------------------------------------------------------
    3:     thomas moll 2015
    4: '''
    5: 
    6: class Stack(object):
[34m-   7:     def __init__(self):[0m
[34m-   8:         self.size = 0[0m
[34m-   9:         self.top = None[0m
[34m-  10:     [0m
[32m+   7:     @classmethod[0m
[32m+   8:     def __init__(self):[0m
[32m+   9:         self.size = 0[0m
[32m+  10:         self.top = None[0m
   11:     def __len__(self):
   12:         return self.size
   13:     
   14:     def push(self, item):
--------------------------------------------------------------------------------
[0.13650 s] [31msurvived[0m
[36m   -[0m [#  13] CDI stack1: 
--------------------------------------------------------------------------------
    7:     def __init__(self):
    8:         self.size = 0
    9:         self.top = None
   10:     
[34m-  11:     def __len__(self):[0m
[34m-  12:         return self.size[0m
[34m-  13:     [0m
[32m+  11:     @classmethod[0m
[32m+  12:     def __len__(self):[0m
[32m+  13:         return self.size[0m
   14:     def push(self, item):
   15:         if self.top is None:
   16:             self.top = StackNode(item)
   17:         else:
--------------------------------------------------------------------------------
[0.15287 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       assert len(stack_0) == 0

MIO/test_stack1_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack1.Stack'>

>   ???
E   AttributeError: type object 'Stack' has no attribute 'size'

stack1:13: AttributeError
[36m   -[0m [#  14] CDI stack1: 
--------------------------------------------------------------------------------
   10:     
   11:     def __len__(self):
   12:         return self.size
   13:     
[34m-  14:     def push(self, item):[0m
[34m-  15:         if self.top is None:[0m
[34m-  16:             self.top = StackNode(item)[0m
[34m-  17:         else:[0m
[34m-  18:             [0m
[34m-  19:             item1 = self.top[0m
[34m-  20:             item2 = StackNode(item)[0m
[34m-  21:             [0m
[32m+  14:     @classmethod[0m
[32m+  15:     def push(self, item):[0m
[32m+  16:         if self.top is None:[0m
[32m+  17:             self.top = StackNode(item)[0m
[32m+  18:         else:[0m
[32m+  19:             [0m
[32m+  20:             item1 = self.top[0m
[32m+  21:             item2 = StackNode(item)[0m
   22:             
[34m-  23:             self.top = item2[0m
[34m-  24:             item2.next = item1[0m
[34m-  25:         [0m
[34m-  26:         self.size += 1[0m
[34m-  27:     [0m
[32m+  23:             [0m
[32m+  24:             self.top = item2[0m
[32m+  25:             item2.next = item1[0m
[32m+  26:         [0m
[32m+  27:         self.size += 1[0m
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
   31:         else:
--------------------------------------------------------------------------------
[0.14968 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
>       var_0 = stack_0.push(stack_0)

MIO/test_stack1_MIO.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack1.Stack'>, item = <stack1.Stack object at 0x7f3ef9e8dff0>

>   ???
E   AttributeError: type object 'Stack' has no attribute 'top'

stack1:16: AttributeError
[36m   -[0m [#  15] CDI stack1: 
--------------------------------------------------------------------------------
   24:             item2.next = item1
   25:         
   26:         self.size += 1
   27:     
[34m-  28:     def pop(self):[0m
[34m-  29:         if self.top is None:[0m
[34m-  30:             raise ValueError()[0m
[34m-  31:         else:[0m
[34m-  32:             top_data = self.top.data[0m
[34m-  33:             [0m
[34m-  34:             self.top = self.top.next[0m
[34m-  35:             self.size -= 1[0m
[34m-  36:             return top_data[0m
[34m-  37:     [0m
[32m+  28:     @classmethod[0m
[32m+  29:     def pop(self):[0m
[32m+  30:         if self.top is None:[0m
[32m+  31:             raise ValueError()[0m
[32m+  32:         else:[0m
[32m+  33:             top_data = self.top.data[0m
[32m+  34:             [0m
[32m+  35:             self.top = self.top.next[0m
[32m+  36:             self.size -= 1[0m
[32m+  37:             return top_data[0m
   38:     def peek(self):
   39:         if self.top is None:
   40:             raise ValueError()
   41:         else:
--------------------------------------------------------------------------------
[0.16486 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack1.Stack'>

>   ???
E   AttributeError: type object 'Stack' has no attribute 'top'

stack1:30: AttributeError
[36m   -[0m [#  16] CDI stack1: 
--------------------------------------------------------------------------------
   34:             self.top = self.top.next
   35:             self.size -= 1
   36:             return top_data
   37:     
[34m-  38:     def peek(self):[0m
[34m-  39:         if self.top is None:[0m
[34m-  40:             raise ValueError()[0m
[34m-  41:         else:[0m
[34m-  42:             return self.top.data[0m
[34m-  43: [0m
[32m+  38:     @classmethod[0m
[32m+  39:     def peek(self):[0m
[32m+  40:         if self.top is None:[0m
[32m+  41:             raise ValueError()[0m
[32m+  42:         else:[0m
[32m+  43:             return self.top.data[0m
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
   47:         self.data = item
--------------------------------------------------------------------------------
[0.17139 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        with pytest.raises(ValueError):
>           stack_0.peek()

MIO/test_stack1_MIO.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack1.Stack'>

>   ???
E   AttributeError: type object 'Stack' has no attribute 'top'

stack1:40: AttributeError
[36m   -[0m [#  17] CDI stack1: 
--------------------------------------------------------------------------------
   42:             return self.top.data
   43: 
   44: class StackNode(object):
   45:     ''' Look familiar? '''
[34m-  46:     def __init__(self, item):[0m
[34m-  47:         self.data = item[0m
[34m-  48:         self.next = None[0m
[34m-  49: [0m
[32m+  46:     @classmethod[0m
[32m+  47:     def __init__(self, item):[0m
[32m+  48:         self.data = item[0m
[32m+  49:         self.next = None[0m
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
--------------------------------------------------------------------------------
[0.13934 s] [31msurvived[0m
[36m   -[0m [#  18] COI stack1: 
--------------------------------------------------------------------------------
   11:     def __len__(self):
   12:         return self.size
   13:     
   14:     def push(self, item):
[34m-  15:         if self.top is None:[0m
[32m+  15:         if not (self.top is None):[0m
   16:             self.top = StackNode(item)
   17:         else:
   18:             
   19:             item1 = self.top
--------------------------------------------------------------------------------
[0.14881 s] [31msurvived[0m
[36m   -[0m [#  19] COI stack1: 
--------------------------------------------------------------------------------
   25:         
   26:         self.size += 1
   27:     
   28:     def pop(self):
[34m-  29:         if self.top is None:[0m
[32m+  29:         if not (self.top is None):[0m
   30:             raise ValueError()
   31:         else:
   32:             top_data = self.top.data
   33:             
--------------------------------------------------------------------------------
[0.15922 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_2

def test_case_2():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        with pytest.raises(ValueError):
>           stack_0.pop()

MIO/test_stack1_MIO.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3efa0a6740>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack1:32: AttributeError
[36m   -[0m [#  20] COI stack1: 
--------------------------------------------------------------------------------
   35:             self.size -= 1
   36:             return top_data
   37:     
   38:     def peek(self):
[34m-  39:         if self.top is None:[0m
[32m+  39:         if not (self.top is None):[0m
   40:             raise ValueError()
   41:         else:
   42:             return self.top.data
   43: 
--------------------------------------------------------------------------------
[0.21706 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        with pytest.raises(ValueError):
>           stack_0.peek()

MIO/test_stack1_MIO.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3efa0a7160>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack1:42: AttributeError
[36m   -[0m [#  21] COI stack1: 
--------------------------------------------------------------------------------
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
   54:     
   55:     for character in string:
   56:         
[34m-  57:         if character in brackets.keys():[0m
[32m+  57:         if not (character in brackets.keys()):[0m
   58:             stack.push(character)
   59:         
   60:         
   61:         if character in brackets.values():
--------------------------------------------------------------------------------
[0.22285 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = 'p(hy;{K\nEB];*A}L\\'

>   ???
E   KeyError: ']'

stack1:66: KeyError
[36m   -[0m [#  22] COI stack1: 
--------------------------------------------------------------------------------
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
   54:     
   55:     for character in string:
   56:         
[34m-  57:         if character in brackets.keys():[0m
[32m+  57:         if character not in brackets.keys():[0m
   58:             stack.push(character)
   59:         
   60:         
   61:         if character in brackets.values():
--------------------------------------------------------------------------------
[0.16537 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = 'p(hy;{K\nEB];*A}L\\'

>   ???
E   KeyError: ']'

stack1:66: KeyError
[36m   -[0m [#  23] COI stack1: 
--------------------------------------------------------------------------------
   57:         if character in brackets.keys():
   58:             stack.push(character)
   59:         
   60:         
[34m-  61:         if character in brackets.values():[0m
[32m+  61:         if not (character in brackets.values()):[0m
   62:             try:
   63:                 other = stack.pop()
   64:                 
   65:                 
--------------------------------------------------------------------------------
[0.18069 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:50: AssertionError
[36m   -[0m [#  24] COI stack1: 
--------------------------------------------------------------------------------
   57:         if character in brackets.keys():
   58:             stack.push(character)
   59:         
   60:         
[34m-  61:         if character in brackets.values():[0m
[32m+  61:         if character not in brackets.values():[0m
   62:             try:
   63:                 other = stack.pop()
   64:                 
   65:                 
--------------------------------------------------------------------------------
[0.17406 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:50: AssertionError
[36m   -[0m [#  25] COI stack1: 
--------------------------------------------------------------------------------
   62:             try:
   63:                 other = stack.pop()
   64:                 
   65:                 
[34m-  66:                 if brackets[other] != character:[0m
[32m+  66:                 if not (brackets[other] != character):[0m
   67:                     return False
   68:             
   69:             except ValueError:
   70:                 return False
--------------------------------------------------------------------------------
[0.16940 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:14: AssertionError
[36m   -[0m [#  26] COI stack1: 
--------------------------------------------------------------------------------
   68:             
   69:             except ValueError:
   70:                 return False
   71:     
[34m-  72:     if stack.size != 0:[0m
[32m+  72:     if not (stack.size != 0):[0m
   73:         return False
   74:     else:
   75:         
   76:         return True
--------------------------------------------------------------------------------
[0.17934 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [#  27] COI stack1: 
--------------------------------------------------------------------------------
  102:     tokens = string.split(' ')
  103:     
  104:     for character in tokens:
  105:         
[34m- 106:         if character in ops.keys():[0m
[32m+ 106:         if not (character in ops.keys()):[0m
  107:             try:
  108:                 
  109:                 right = stack.pop()
  110:                 left = stack.pop()
--------------------------------------------------------------------------------
[0.15701 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:118: in postfix_eval
    ???
stack1:109: in postfix_eval
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f50520>

>   ???
E   ValueError

stack1:30: ValueError
[36m   -[0m [#  28] COI stack1: 
--------------------------------------------------------------------------------
  102:     tokens = string.split(' ')
  103:     
  104:     for character in tokens:
  105:         
[34m- 106:         if character in ops.keys():[0m
[32m+ 106:         if character not in ops.keys():[0m
  107:             try:
  108:                 
  109:                 right = stack.pop()
  110:                 left = stack.pop()
--------------------------------------------------------------------------------
[0.16459 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:118: in postfix_eval
    ???
stack1:109: in postfix_eval
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9da79d0>

>   ???
E   ValueError

stack1:30: ValueError
[36m   -[0m [#  29] COI stack1: 
--------------------------------------------------------------------------------
  126:             except ValueError as e:
  127:                 raise e
  128:     
  129:     
[34m- 130:     if stack.size > 1:[0m
[32m+ 130:     if not (stack.size > 1):[0m
  131:         raise ValueError()
  132:     
  133:     return stack.pop()
--------------------------------------------------------------------------------
[0.15391 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   ValueError

stack1:131: ValueError
[36m   -[0m [#  30] CRP stack1: 
--------------------------------------------------------------------------------
    4: '''
    5: 
    6: class Stack(object):
    7:     def __init__(self):
[34m-   8:         self.size = 0[0m
[32m+   8:         self.size = 1[0m
    9:         self.top = None
   10:     
   11:     def __len__(self):
   12:         return self.size
--------------------------------------------------------------------------------
[0.16943 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       assert len(stack_0) == 0
E       AssertionError

MIO/test_stack1_MIO.py:7: AssertionError
[36m   -[0m [#  31] CRP stack1: 
--------------------------------------------------------------------------------
   22:             
   23:             self.top = item2
   24:             item2.next = item1
   25:         
[34m-  26:         self.size += 1[0m
[32m+  26:         self.size += 2[0m
   27:     
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
--------------------------------------------------------------------------------
[0.21885 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        var_0 = stack_0.push(stack_0)
>       assert len(stack_0) == 1
E       AssertionError

MIO/test_stack1_MIO.py:9: AssertionError
[36m   -[0m [#  32] CRP stack1: 
--------------------------------------------------------------------------------
   31:         else:
   32:             top_data = self.top.data
   33:             
   34:             self.top = self.top.next
[34m-  35:             self.size -= 1[0m
[32m+  35:             self.size -= 2[0m
   36:             return top_data
   37:     
   38:     def peek(self):
   39:         if self.top is None:
--------------------------------------------------------------------------------
[0.16456 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  33] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'mutpy': '}', '[': ']', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.17310 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [#  34] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'': '}', '[': ']', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.17166 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [#  35] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', 'mutpy': ']', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.16333 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  36] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '': ']', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.16352 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  37] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '[': ']', 'mutpy': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.13593 s] [31msurvived[0m
[36m   -[0m [#  38] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '[': ']', '': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.15534 s] [31msurvived[0m
[36m   -[0m [#  39] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': 'mutpy', '[': ']', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.16624 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:50: AssertionError
[36m   -[0m [#  40] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '', '[': ']', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.17217 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:50: AssertionError
[36m   -[0m [#  41] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '[': 'mutpy', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.18154 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  42] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '[': '', '(': ')'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.23985 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  43] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '[': ']', '(': 'mutpy'}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.14613 s] [31msurvived[0m
[36m   -[0m [#  44] CRP stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     brackets = {'{': '}', '[': ']', '(': ''}[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.15381 s] [31msurvived[0m
[36m   -[0m [#  45] CRP stack1: 
--------------------------------------------------------------------------------
   68:             
   69:             except ValueError:
   70:                 return False
   71:     
[34m-  72:     if stack.size != 0:[0m
[32m+  72:     if stack.size != 1:[0m
   73:         return False
   74:     else:
   75:         
   76:         return True
--------------------------------------------------------------------------------
[0.15954 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [#  46] CRP stack1: 
--------------------------------------------------------------------------------
   90:         The add function can also be accessed via the ``operator``
   91:         module.
   92:     """
   93:     stack = Stack()
[34m-  94:     ops = {'+': lambda a, b: (a + b), \[0m
[32m+  94:     ops = {'mutpy': lambda a, b: (a + b), \[0m
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
--------------------------------------------------------------------------------
[0.13528 s] [31msurvived[0m
[36m   -[0m [#  47] CRP stack1: 
--------------------------------------------------------------------------------
   90:         The add function can also be accessed via the ``operator``
   91:         module.
   92:     """
   93:     stack = Stack()
[34m-  94:     ops = {'+': lambda a, b: (a + b), \[0m
[32m+  94:     ops = {'': lambda a, b: (a + b), \[0m
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
--------------------------------------------------------------------------------
[0.13478 s] [31msurvived[0m
[36m   -[0m [#  48] CRP stack1: 
--------------------------------------------------------------------------------
   91:         module.
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
[34m-  95:         '-': lambda a, b: (a - b), \[0m
[32m+  95:         'mutpy': lambda a, b: (a - b), \[0m
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
--------------------------------------------------------------------------------
[0.13500 s] [31msurvived[0m
[36m   -[0m [#  49] CRP stack1: 
--------------------------------------------------------------------------------
   91:         module.
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
[34m-  95:         '-': lambda a, b: (a - b), \[0m
[32m+  95:         '': lambda a, b: (a - b), \[0m
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
--------------------------------------------------------------------------------
[0.14766 s] [31msurvived[0m
[36m   -[0m [#  50] CRP stack1: 
--------------------------------------------------------------------------------
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
[34m-  96:         '*': lambda a, b: (a * b), \[0m
[32m+  96:         'mutpy': lambda a, b: (a * b), \[0m
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
--------------------------------------------------------------------------------
[0.15028 s] [31msurvived[0m
[36m   -[0m [#  51] CRP stack1: 
--------------------------------------------------------------------------------
   92:     """
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
[34m-  96:         '*': lambda a, b: (a * b), \[0m
[32m+  96:         '': lambda a, b: (a * b), \[0m
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
--------------------------------------------------------------------------------
[0.15470 s] [31msurvived[0m
[36m   -[0m [#  52] CRP stack1: 
--------------------------------------------------------------------------------
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
[34m-  97:         '/': lambda a, b: (a / b), \[0m
[32m+  97:         'mutpy': lambda a, b: (a / b), \[0m
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
--------------------------------------------------------------------------------
[0.14850 s] [31msurvived[0m
[36m   -[0m [#  53] CRP stack1: 
--------------------------------------------------------------------------------
   93:     stack = Stack()
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
[34m-  97:         '/': lambda a, b: (a / b), \[0m
[32m+  97:         '': lambda a, b: (a / b), \[0m
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
--------------------------------------------------------------------------------
[0.20655 s] [31msurvived[0m
[36m   -[0m [#  54] CRP stack1: 
--------------------------------------------------------------------------------
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
[34m-  98:         '%': lambda a, b: (a % b), \[0m
[32m+  98:         'mutpy': lambda a, b: (a % b), \[0m
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
  102:     tokens = string.split(' ')
--------------------------------------------------------------------------------
[0.14654 s] [31msurvived[0m
[36m   -[0m [#  55] CRP stack1: 
--------------------------------------------------------------------------------
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
[34m-  98:         '%': lambda a, b: (a % b), \[0m
[32m+  98:         '': lambda a, b: (a % b), \[0m
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
  102:     tokens = string.split(' ')
--------------------------------------------------------------------------------
[0.14710 s] [31msurvived[0m
[36m   -[0m [#  56] CRP stack1: 
--------------------------------------------------------------------------------
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
[34m-  99:         '^': lambda a, b: (a ** b)}[0m
[32m+  99:         'mutpy': lambda a, b: (a ** b)}[0m
  100:     
  101:     
  102:     tokens = string.split(' ')
  103:     
--------------------------------------------------------------------------------
[0.15238 s] [31msurvived[0m
[36m   -[0m [#  57] CRP stack1: 
--------------------------------------------------------------------------------
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
   98:         '%': lambda a, b: (a % b), \
[34m-  99:         '^': lambda a, b: (a ** b)}[0m
[32m+  99:         '': lambda a, b: (a ** b)}[0m
  100:     
  101:     
  102:     tokens = string.split(' ')
  103:     
--------------------------------------------------------------------------------
[0.15324 s] [31msurvived[0m
[36m   -[0m [#  58] CRP stack1: 
--------------------------------------------------------------------------------
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
[34m- 102:     tokens = string.split(' ')[0m
[32m+ 102:     tokens = string.split('mutpy')[0m
  103:     
  104:     for character in tokens:
  105:         
  106:         if character in ops.keys():
--------------------------------------------------------------------------------
[0.14911 s] [31msurvived[0m
[36m   -[0m [#  59] CRP stack1: 
--------------------------------------------------------------------------------
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
[34m- 102:     tokens = string.split(' ')[0m
[32m+ 102:     tokens = string.split('')[0m
  103:     
  104:     for character in tokens:
  105:         
  106:         if character in ops.keys():
--------------------------------------------------------------------------------
[0.17241 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   ValueError: empty separator

stack1:102: ValueError
[36m   -[0m [#  60] CRP stack1: 
--------------------------------------------------------------------------------
  126:             except ValueError as e:
  127:                 raise e
  128:     
  129:     
[34m- 130:     if stack.size > 1:[0m
[32m+ 130:     if stack.size > 2:[0m
  131:         raise ValueError()
  132:     
  133:     return stack.pop()
--------------------------------------------------------------------------------
[0.14677 s] [31msurvived[0m
[36m   -[0m [#  61] EHD stack1: 
--------------------------------------------------------------------------------
   66:                 if brackets[other] != character:
   67:                     return False
   68:             
   69:             except ValueError:
[34m-  70:                 return False[0m
[32m+  70:                 raise[0m
   71:     
   72:     if stack.size != 0:
   73:         return False
   74:     else:
--------------------------------------------------------------------------------
[0.17782 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9fba590>

>   ???
E   ValueError

stack1:30: ValueError
[36m   -[0m [#  62] EXS stack1: 
--------------------------------------------------------------------------------
   66:                 if brackets[other] != character:
   67:                     return False
   68:             
   69:             except ValueError:
[34m-  70:                 return False[0m
[32m+  70:                 pass[0m
   71:     
   72:     if stack.size != 0:
   73:         return False
   74:     else:
--------------------------------------------------------------------------------
[0.17914 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:50: AssertionError
[36m   -[0m [#  63] EXS stack1: 
--------------------------------------------------------------------------------
  114:                 stack.push(result)
  115:             
  116:             
  117:             except ValueError as e:
[34m- 118:                 raise e[0m
[32m+ 118:                 pass[0m
  119:         else:
  120:             
  121:             try:
  122:                 
--------------------------------------------------------------------------------
[0.15566 s] [31msurvived[0m
[36m   -[0m [#  64] EXS stack1: 
--------------------------------------------------------------------------------
  123:                 value = int(character)
  124:                 stack.push(value)
  125:             
  126:             except ValueError as e:
[34m- 127:                 raise e[0m
[32m+ 127:                 pass[0m
  128:     
  129:     
  130:     if stack.size > 1:
  131:         raise ValueError()
--------------------------------------------------------------------------------
[0.19570 s] [31msurvived[0m
[36m   -[0m [#  65] OIL stack1: 
--------------------------------------------------------------------------------
   66:                 if brackets[other] != character:
   67:                     return False
   68:             
   69:             except ValueError:
[34m-  70:                 return False[0m
[32m+  70:                 return Falsebreak[0m
   71:     
   72:     if stack.size != 0:
   73:         return False
   74:     else:
--------------------------------------------------------------------------------
[0.17490 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:14: AssertionError
[36m   -[0m [#  66] OIL stack1: 
--------------------------------------------------------------------------------
  123:                 value = int(character)
  124:                 stack.push(value)
  125:             
  126:             except ValueError as e:
[34m- 127:                 raise e[0m
[32m+ 127:                 raise ebreak[0m
  128:     
  129:     
  130:     if stack.size > 1:
  131:         raise ValueError()
--------------------------------------------------------------------------------
[0.15476 s] [31msurvived[0m
[36m   -[0m [#  67] RIL stack1: 
--------------------------------------------------------------------------------
   51:     stack = Stack()
   52:     
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
   54:     
[34m-  55:     for character in string:[0m
[32m+  55:     for character in reversed(string):[0m
   56:         
   57:         if character in brackets.keys():
   58:             stack.push(character)
   59:         
--------------------------------------------------------------------------------
[0.18307 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [#  68] RIL stack1: 
--------------------------------------------------------------------------------
  100:     
  101:     
  102:     tokens = string.split(' ')
  103:     
[34m- 104:     for character in tokens:[0m
[32m+ 104:     for character in reversed(tokens):[0m
  105:         
  106:         if character in ops.keys():
  107:             try:
  108:                 
--------------------------------------------------------------------------------
[0.15667 s] [31msurvived[0m
[36m   -[0m [#  69] ROR stack1: 
--------------------------------------------------------------------------------
   62:             try:
   63:                 other = stack.pop()
   64:                 
   65:                 
[34m-  66:                 if brackets[other] != character:[0m
[32m+  66:                 if brackets[other] == character:[0m
   67:                     return False
   68:             
   69:             except ValueError:
   70:                 return False
--------------------------------------------------------------------------------
[0.16903 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:14: AssertionError
[36m   -[0m [#  70] ROR stack1: 
--------------------------------------------------------------------------------
   68:             
   69:             except ValueError:
   70:                 return False
   71:     
[34m-  72:     if stack.size != 0:[0m
[32m+  72:     if stack.size == 0:[0m
   73:         return False
   74:     else:
   75:         
   76:         return True
--------------------------------------------------------------------------------
[0.17376 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [#  71] ROR stack1: 
--------------------------------------------------------------------------------
  126:             except ValueError as e:
  127:                 raise e
  128:     
  129:     
[34m- 130:     if stack.size > 1:[0m
[32m+ 130:     if stack.size < 1:[0m
  131:         raise ValueError()
  132:     
  133:     return stack.pop()
--------------------------------------------------------------------------------
[0.13636 s] [31msurvived[0m
[36m   -[0m [#  72] ROR stack1: 
--------------------------------------------------------------------------------
  126:             except ValueError as e:
  127:                 raise e
  128:     
  129:     
[34m- 130:     if stack.size > 1:[0m
[32m+ 130:     if stack.size >= 1:[0m
  131:         raise ValueError()
  132:     
  133:     return stack.pop()
--------------------------------------------------------------------------------
[0.15543 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   ValueError

stack1:131: ValueError
[36m   -[0m [#  73] SDI stack1: 
--------------------------------------------------------------------------------
    3:     thomas moll 2015
    4: '''
    5: 
    6: class Stack(object):
[34m-   7:     def __init__(self):[0m
[34m-   8:         self.size = 0[0m
[34m-   9:         self.top = None[0m
[34m-  10:     [0m
[32m+   7:     @staticmethod[0m
[32m+   8:     def __init__(self):[0m
[32m+   9:         self.size = 0[0m
[32m+  10:         self.top = None[0m
   11:     def __len__(self):
   12:         return self.size
   13:     
   14:     def push(self, item):
--------------------------------------------------------------------------------
[0.15072 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack1/MIO/test_stack1_MIO.py:6: TypeError: Stack.__init__() missing 1 required positional argument: 'self'

[36m   -[0m [#  74] SDI stack1: 
--------------------------------------------------------------------------------
    7:     def __init__(self):
    8:         self.size = 0
    9:         self.top = None
   10:     
[34m-  11:     def __len__(self):[0m
[34m-  12:         return self.size[0m
[34m-  13:     [0m
[32m+  11:     @staticmethod[0m
[32m+  12:     def __len__(self):[0m
[32m+  13:         return self.size[0m
   14:     def push(self, item):
   15:         if self.top is None:
   16:             self.top = StackNode(item)
   17:         else:
--------------------------------------------------------------------------------
[0.20048 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack1/MIO/test_stack1_MIO.py:7: TypeError: Stack.__len__() missing 1 required positional argument: 'self'

[36m   -[0m [#  75] SDI stack1: 
--------------------------------------------------------------------------------
   10:     
   11:     def __len__(self):
   12:         return self.size
   13:     
[34m-  14:     def push(self, item):[0m
[34m-  15:         if self.top is None:[0m
[34m-  16:             self.top = StackNode(item)[0m
[34m-  17:         else:[0m
[34m-  18:             [0m
[34m-  19:             item1 = self.top[0m
[34m-  20:             item2 = StackNode(item)[0m
[34m-  21:             [0m
[32m+  14:     @staticmethod[0m
[32m+  15:     def push(self, item):[0m
[32m+  16:         if self.top is None:[0m
[32m+  17:             self.top = StackNode(item)[0m
[32m+  18:         else:[0m
[32m+  19:             [0m
[32m+  20:             item1 = self.top[0m
[32m+  21:             item2 = StackNode(item)[0m
   22:             
[34m-  23:             self.top = item2[0m
[34m-  24:             item2.next = item1[0m
[34m-  25:         [0m
[34m-  26:         self.size += 1[0m
[34m-  27:     [0m
[32m+  23:             [0m
[32m+  24:             self.top = item2[0m
[32m+  25:             item2.next = item1[0m
[32m+  26:         [0m
[32m+  27:         self.size += 1[0m
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
   31:         else:
--------------------------------------------------------------------------------
[0.16513 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack1/MIO/test_stack1_MIO.py:8: TypeError: Stack.push() missing 1 required positional argument: 'item'

[36m   -[0m [#  76] SDI stack1: 
--------------------------------------------------------------------------------
   24:             item2.next = item1
   25:         
   26:         self.size += 1
   27:     
[34m-  28:     def pop(self):[0m
[34m-  29:         if self.top is None:[0m
[34m-  30:             raise ValueError()[0m
[34m-  31:         else:[0m
[34m-  32:             top_data = self.top.data[0m
[34m-  33:             [0m
[34m-  34:             self.top = self.top.next[0m
[34m-  35:             self.size -= 1[0m
[34m-  36:             return top_data[0m
[34m-  37:     [0m
[32m+  28:     @staticmethod[0m
[32m+  29:     def pop(self):[0m
[32m+  30:         if self.top is None:[0m
[32m+  31:             raise ValueError()[0m
[32m+  32:         else:[0m
[32m+  33:             top_data = self.top.data[0m
[32m+  34:             [0m
[32m+  35:             self.top = self.top.next[0m
[32m+  36:             self.size -= 1[0m
[32m+  37:             return top_data[0m
   38:     def peek(self):
   39:         if self.top is None:
   40:             raise ValueError()
   41:         else:
--------------------------------------------------------------------------------
[0.15474 s] [36mincompetent[0m

TypeError: stack1:63: TypeError: Stack.pop() missing 1 required positional argument: 'self'

[36m   -[0m [#  77] SDI stack1: 
--------------------------------------------------------------------------------
   34:             self.top = self.top.next
   35:             self.size -= 1
   36:             return top_data
   37:     
[34m-  38:     def peek(self):[0m
[34m-  39:         if self.top is None:[0m
[34m-  40:             raise ValueError()[0m
[34m-  41:         else:[0m
[34m-  42:             return self.top.data[0m
[34m-  43: [0m
[32m+  38:     @staticmethod[0m
[32m+  39:     def peek(self):[0m
[32m+  40:         if self.top is None:[0m
[32m+  41:             raise ValueError()[0m
[32m+  42:         else:[0m
[32m+  43:             return self.top.data[0m
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
   47:         self.data = item
--------------------------------------------------------------------------------
[0.16172 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack1/MIO/test_stack1_MIO.py:31: TypeError: Stack.peek() missing 1 required positional argument: 'self'

[36m   -[0m [#  78] SDI stack1: 
--------------------------------------------------------------------------------
   42:             return self.top.data
   43: 
   44: class StackNode(object):
   45:     ''' Look familiar? '''
[34m-  46:     def __init__(self, item):[0m
[34m-  47:         self.data = item[0m
[34m-  48:         self.next = None[0m
[34m-  49: [0m
[32m+  46:     @staticmethod[0m
[32m+  47:     def __init__(self, item):[0m
[32m+  48:         self.data = item[0m
[32m+  49:         self.next = None[0m
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
--------------------------------------------------------------------------------
[0.17086 s] [36mincompetent[0m

TypeError: stack1:16: TypeError: StackNode.__init__() missing 1 required positional argument: 'item'

[36m   -[0m [#  79] SDL stack1: 
--------------------------------------------------------------------------------
    4: '''
    5: 
    6: class Stack(object):
    7:     def __init__(self):
[34m-   8:         self.size = 0[0m
[32m+   8:         pass[0m
    9:         self.top = None
   10:     
   11:     def __len__(self):
   12:         return self.size
--------------------------------------------------------------------------------
[0.16495 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       assert len(stack_0) == 0

MIO/test_stack1_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9daef80>

>   ???
E   AttributeError: 'Stack' object has no attribute 'size'

stack1:12: AttributeError
[36m   -[0m [#  80] SDL stack1: 
--------------------------------------------------------------------------------
    5: 
    6: class Stack(object):
    7:     def __init__(self):
    8:         self.size = 0
[34m-   9:         self.top = None[0m
[32m+   9:         pass[0m
   10:     
   11:     def __len__(self):
   12:         return self.size
   13:     
--------------------------------------------------------------------------------
[0.16294 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
>       var_0 = stack_0.push(stack_0)

MIO/test_stack1_MIO.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9dad090>
item = <stack1.Stack object at 0x7f3ef9dad090>

>   ???
E   AttributeError: 'Stack' object has no attribute 'top'

stack1:15: AttributeError
[36m   -[0m [#  81] SDL stack1: 
--------------------------------------------------------------------------------
    8:         self.size = 0
    9:         self.top = None
   10:     
   11:     def __len__(self):
[34m-  12:         return self.size[0m
[32m+  12:         pass[0m
   13:     
   14:     def push(self, item):
   15:         if self.top is None:
   16:             self.top = StackNode(item)
--------------------------------------------------------------------------------
[0.17083 s] [36mincompetent[0m

TypeError: /home/lucca/desktop/ic/experimento/testes/python_experiments/stack1/MIO/test_stack1_MIO.py:7: TypeError: 'NoneType' object cannot be interpreted as an integer

[36m   -[0m [#  82] SDL stack1: 
--------------------------------------------------------------------------------
   12:         return self.size
   13:     
   14:     def push(self, item):
   15:         if self.top is None:
[34m-  16:             self.top = StackNode(item)[0m
[32m+  16:             pass[0m
   17:         else:
   18:             
   19:             item1 = self.top
   20:             item2 = StackNode(item)
--------------------------------------------------------------------------------
[0.16978 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:133: in postfix_eval
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f735e0>

>   ???
E   ValueError

stack1:30: ValueError
[36m   -[0m [#  83] SDL stack1: 
--------------------------------------------------------------------------------
   15:         if self.top is None:
   16:             self.top = StackNode(item)
   17:         else:
   18:             
[34m-  19:             item1 = self.top[0m
[32m+  19:             pass[0m
   20:             item2 = StackNode(item)
   21:             
   22:             
   23:             self.top = item2
--------------------------------------------------------------------------------
[0.17301 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:58: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9da61d0>, item = '{'

>   ???
E   NameError: name 'item1' is not defined

stack1:24: NameError
[36m   -[0m [#  84] SDL stack1: 
--------------------------------------------------------------------------------
   16:             self.top = StackNode(item)
   17:         else:
   18:             
   19:             item1 = self.top
[34m-  20:             item2 = StackNode(item)[0m
[32m+  20:             pass[0m
   21:             
   22:             
   23:             self.top = item2
   24:             item2.next = item1
--------------------------------------------------------------------------------
[0.21736 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:58: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f524a0>, item = '{'

>   ???
E   NameError: name 'item2' is not defined

stack1:23: NameError
[36m   -[0m [#  85] SDL stack1: 
--------------------------------------------------------------------------------
   19:             item1 = self.top
   20:             item2 = StackNode(item)
   21:             
   22:             
[34m-  23:             self.top = item2[0m
[32m+  23:             pass[0m
   24:             item2.next = item1
   25:         
   26:         self.size += 1
   27:     
--------------------------------------------------------------------------------
[0.19608 s] [31msurvived[0m
[36m   -[0m [#  86] SDL stack1: 
--------------------------------------------------------------------------------
   20:             item2 = StackNode(item)
   21:             
   22:             
   23:             self.top = item2
[34m-  24:             item2.next = item1[0m
[32m+  24:             pass[0m
   25:         
   26:         self.size += 1
   27:     
   28:     def pop(self):
--------------------------------------------------------------------------------
[0.14902 s] [31msurvived[0m
[36m   -[0m [#  87] SDL stack1: 
--------------------------------------------------------------------------------
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
   31:         else:
[34m-  32:             top_data = self.top.data[0m
[32m+  32:             pass[0m
   33:             
   34:             self.top = self.top.next
   35:             self.size -= 1
   36:             return top_data
--------------------------------------------------------------------------------
[0.17107 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9e8eb60>

>   ???
E   NameError: name 'top_data' is not defined

stack1:36: NameError
[36m   -[0m [#  88] SDL stack1: 
--------------------------------------------------------------------------------
   30:             raise ValueError()
   31:         else:
   32:             top_data = self.top.data
   33:             
[34m-  34:             self.top = self.top.next[0m
[32m+  34:             pass[0m
   35:             self.size -= 1
   36:             return top_data
   37:     
   38:     def peek(self):
--------------------------------------------------------------------------------
[0.15572 s] [31msurvived[0m
[36m   -[0m [#  89] SDL stack1: 
--------------------------------------------------------------------------------
   32:             top_data = self.top.data
   33:             
   34:             self.top = self.top.next
   35:             self.size -= 1
[34m-  36:             return top_data[0m
[32m+  36:             pass[0m
   37:     
   38:     def peek(self):
   39:         if self.top is None:
   40:             raise ValueError()
--------------------------------------------------------------------------------
[0.16759 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = 'p(hy;{K\nEB];*A}L\\'

>   ???
E   KeyError: None

stack1:66: KeyError
[36m   -[0m [#  90] SDL stack1: 
--------------------------------------------------------------------------------
   38:     def peek(self):
   39:         if self.top is None:
   40:             raise ValueError()
   41:         else:
[34m-  42:             return self.top.data[0m
[32m+  42:             pass[0m
   43: 
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
--------------------------------------------------------------------------------
[0.17101 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_5

def test_case_5():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        var_0 = stack_0.push(stack_0)
        assert len(stack_0) == 1
        var_1 = stack_0.peek()
>       assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'stack1.Stack'
E       AssertionError

MIO/test_stack1_MIO.py:39: AssertionError
[36m   -[0m [#  91] SDL stack1: 
--------------------------------------------------------------------------------
   43: 
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
[34m-  47:         self.data = item[0m
[32m+  47:         pass[0m
   48:         self.next = None
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
--------------------------------------------------------------------------------
[0.16845 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f02650>

>   ???
E   AttributeError: 'StackNode' object has no attribute 'data'

stack1:32: AttributeError
[36m   -[0m [#  92] SDL stack1: 
--------------------------------------------------------------------------------
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
   47:         self.data = item
[34m-  48:         self.next = None[0m
[32m+  48:         pass[0m
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
--------------------------------------------------------------------------------
[0.17637 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:133: in postfix_eval
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9e239d0>

>   ???
E   AttributeError: 'StackNode' object has no attribute 'next'

stack1:34: AttributeError
[36m   -[0m [#  93] SDL stack1: 
--------------------------------------------------------------------------------
   47:         self.data = item
   48:         self.next = None
   49: 
   50: def check_parenthesis(string):
[34m-  51:     stack = Stack()[0m
[32m+  51:     pass[0m
   52:     
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
   54:     
   55:     for character in string:
--------------------------------------------------------------------------------
[0.16774 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = 'p(hy;{K\nEB];*A}L\\'

>   ???
E   NameError: name 'stack' is not defined

stack1:58: NameError
[36m   -[0m [#  94] SDL stack1: 
--------------------------------------------------------------------------------
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
[34m-  53:     brackets = {'{': '}', '[': ']', '(': ')'}[0m
[32m+  53:     pass[0m
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
--------------------------------------------------------------------------------
[0.15544 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = 'p(hy;{K\nEB];*A}L\\'

>   ???
E   NameError: name 'brackets' is not defined

stack1:57: NameError
[36m   -[0m [#  95] SDL stack1: 
--------------------------------------------------------------------------------
   54:     
   55:     for character in string:
   56:         
   57:         if character in brackets.keys():
[34m-  58:             stack.push(character)[0m
[32m+  58:             pass[0m
   59:         
   60:         
   61:         if character in brackets.values():
   62:             try:
--------------------------------------------------------------------------------
[0.21862 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [#  96] SDL stack1: 
--------------------------------------------------------------------------------
   59:         
   60:         
   61:         if character in brackets.values():
   62:             try:
[34m-  63:                 other = stack.pop()[0m
[32m+  63:                 pass[0m
   64:                 
   65:                 
   66:                 if brackets[other] != character:
   67:                     return False
--------------------------------------------------------------------------------
[0.21757 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = 'p(hy;{K\nEB];*A}L\\'

>   ???
E   NameError: name 'other' is not defined

stack1:66: NameError
[36m   -[0m [#  97] SDL stack1: 
--------------------------------------------------------------------------------
   63:                 other = stack.pop()
   64:                 
   65:                 
   66:                 if brackets[other] != character:
[34m-  67:                     return False[0m
[32m+  67:                     pass[0m
   68:             
   69:             except ValueError:
   70:                 return False
   71:     
--------------------------------------------------------------------------------
[0.16934 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:14: AssertionError
[36m   -[0m [#  98] SDL stack1: 
--------------------------------------------------------------------------------
   66:                 if brackets[other] != character:
   67:                     return False
   68:             
   69:             except ValueError:
[34m-  70:                 return False[0m
[32m+  70:                 pass[0m
   71:     
   72:     if stack.size != 0:
   73:         return False
   74:     else:
--------------------------------------------------------------------------------
[0.17646 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_7

def test_case_7():
        str_0 = '}'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:50: AssertionError
[36m   -[0m [#  99] SDL stack1: 
--------------------------------------------------------------------------------
   69:             except ValueError:
   70:                 return False
   71:     
   72:     if stack.size != 0:
[34m-  73:         return False[0m
[32m+  73:         pass[0m
   74:     else:
   75:         
   76:         return True
   77: 
--------------------------------------------------------------------------------
[0.17566 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_6

def test_case_6():
        str_0 = 'b#:{&1y=1zRW~A-l9@@y'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:45: AssertionError
[36m   -[0m [# 100] SDL stack1: 
--------------------------------------------------------------------------------
   72:     if stack.size != 0:
   73:         return False
   74:     else:
   75:         
[34m-  76:         return True[0m
[32m+  76:         pass[0m
   77: 
   78: def postfix_eval(string):
   79:     """ Here we setup a dictionary relating the characters of 
   80:         operations to lambda functions. It's similar to saying:
--------------------------------------------------------------------------------
[0.17859 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_9

def test_case_9():
        str_0 = '1~ZY[]TI0m%"BbE3G^'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is True
E       AssertionError

MIO/test_stack1_MIO.py:60: AssertionError
[36m   -[0m [# 101] SDL stack1: 
--------------------------------------------------------------------------------
   89: 
   90:         The add function can also be accessed via the ``operator``
   91:         module.
   92:     """
[34m-  93:     stack = Stack()[0m
[32m+  93:     pass[0m
   94:     ops = {'+': lambda a, b: (a + b), \
   95:         '-': lambda a, b: (a - b), \
   96:         '*': lambda a, b: (a * b), \
   97:         '/': lambda a, b: (a / b), \
--------------------------------------------------------------------------------
[0.16998 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   NameError: name 'stack' is not defined

stack1:124: NameError
[36m   -[0m [# 102] SDL stack1: 
--------------------------------------------------------------------------------
   90:         The add function can also be accessed via the ``operator``
   91:         module.
   92:     """
   93:     stack = Stack()
[34m-  94:     ops = {'+': lambda a, b: (a + b), \[0m
[34m-  95:         '-': lambda a, b: (a - b), \[0m
[34m-  96:         '*': lambda a, b: (a * b), \[0m
[34m-  97:         '/': lambda a, b: (a / b), \[0m
[34m-  98:         '%': lambda a, b: (a % b), \[0m
[34m-  99:         '^': lambda a, b: (a ** b)}[0m
[32m+  94:     pass[0m
[32m+  95:     [0m
[32m+  96:     [0m
[32m+  97:     [0m
[32m+  98:     [0m
[32m+  99:     [0m
  100:     
  101:     
  102:     tokens = string.split(' ')
  103:     
--------------------------------------------------------------------------------
[0.16787 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   NameError: name 'ops' is not defined

stack1:106: NameError
[36m   -[0m [# 103] SDL stack1: 
--------------------------------------------------------------------------------
   98:         '%': lambda a, b: (a % b), \
   99:         '^': lambda a, b: (a ** b)}
  100:     
  101:     
[34m- 102:     tokens = string.split(' ')[0m
[32m+ 102:     pass[0m
  103:     
  104:     for character in tokens:
  105:         
  106:         if character in ops.keys():
--------------------------------------------------------------------------------
[0.17442 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   NameError: name 'tokens' is not defined

stack1:104: NameError
[36m   -[0m [# 104] SDL stack1: 
--------------------------------------------------------------------------------
  105:         
  106:         if character in ops.keys():
  107:             try:
  108:                 
[34m- 109:                 right = stack.pop()[0m
[32m+ 109:                 pass[0m
  110:                 left = stack.pop()
  111:                 
  112:                 
  113:                 result = ops[character](left, right)
--------------------------------------------------------------------------------
[0.15618 s] [31msurvived[0m
[36m   -[0m [# 105] SDL stack1: 
--------------------------------------------------------------------------------
  106:         if character in ops.keys():
  107:             try:
  108:                 
  109:                 right = stack.pop()
[34m- 110:                 left = stack.pop()[0m
[32m+ 110:                 pass[0m
  111:                 
  112:                 
  113:                 result = ops[character](left, right)
  114:                 stack.push(result)
--------------------------------------------------------------------------------
[0.15342 s] [31msurvived[0m
[36m   -[0m [# 106] SDL stack1: 
--------------------------------------------------------------------------------
  109:                 right = stack.pop()
  110:                 left = stack.pop()
  111:                 
  112:                 
[34m- 113:                 result = ops[character](left, right)[0m
[32m+ 113:                 pass[0m
  114:                 stack.push(result)
  115:             
  116:             
  117:             except ValueError as e:
--------------------------------------------------------------------------------
[0.14885 s] [31msurvived[0m
[36m   -[0m [# 107] SDL stack1: 
--------------------------------------------------------------------------------
  110:                 left = stack.pop()
  111:                 
  112:                 
  113:                 result = ops[character](left, right)
[34m- 114:                 stack.push(result)[0m
[32m+ 114:                 pass[0m
  115:             
  116:             
  117:             except ValueError as e:
  118:                 raise e
--------------------------------------------------------------------------------
[0.15522 s] [31msurvived[0m
[36m   -[0m [# 108] SDL stack1: 
--------------------------------------------------------------------------------
  119:         else:
  120:             
  121:             try:
  122:                 
[34m- 123:                 value = int(character)[0m
[32m+ 123:                 pass[0m
  124:                 stack.push(value)
  125:             
  126:             except ValueError as e:
  127:                 raise e
--------------------------------------------------------------------------------
[0.17477 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

string = '4'

>   ???
E   NameError: name 'value' is not defined

stack1:124: NameError
[36m   -[0m [# 109] SDL stack1: 
--------------------------------------------------------------------------------
  120:             
  121:             try:
  122:                 
  123:                 value = int(character)
[34m- 124:                 stack.push(value)[0m
[32m+ 124:                 pass[0m
  125:             
  126:             except ValueError as e:
  127:                 raise e
  128:     
--------------------------------------------------------------------------------
[0.16848 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:133: in postfix_eval
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f50610>

>   ???
E   ValueError

stack1:30: ValueError
[36m   -[0m [# 110] SDL stack1: 
--------------------------------------------------------------------------------
  129:     
  130:     if stack.size > 1:
  131:         raise ValueError()
  132:     
[34m- 133:     return stack.pop()[0m
[32m+ 133:     pass[0m
--------------------------------------------------------------------------------
[0.17309 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
        var_0 = module_0.postfix_eval(str_0)
>       assert var_0 == 4
E       AssertionError

MIO/test_stack1_MIO.py:25: AssertionError
[36m   -[0m [# 111] SVD stack1: 
--------------------------------------------------------------------------------
    4: '''
    5: 
    6: class Stack(object):
    7:     def __init__(self):
[34m-   8:         self.size = 0[0m
[32m+   8:         size = 0[0m
    9:         self.top = None
   10:     
   11:     def __len__(self):
   12:         return self.size
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 112] SVD stack1: 
--------------------------------------------------------------------------------
    5: 
    6: class Stack(object):
    7:     def __init__(self):
    8:         self.size = 0
[34m-   9:         self.top = None[0m
[32m+   9:         top = None[0m
   10:     
   11:     def __len__(self):
   12:         return self.size
   13:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 113] SVD stack1: 
--------------------------------------------------------------------------------
    8:         self.size = 0
    9:         self.top = None
   10:     
   11:     def __len__(self):
[34m-  12:         return self.size[0m
[32m+  12:         return size[0m
   13:     
   14:     def push(self, item):
   15:         if self.top is None:
   16:             self.top = StackNode(item)
--------------------------------------------------------------------------------
[0.17156 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       assert len(stack_0) == 0

MIO/test_stack1_MIO.py:7: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9e217b0>

>   ???
E   NameError: name 'size' is not defined

stack1:12: NameError
[36m   -[0m [# 114] SVD stack1: 
--------------------------------------------------------------------------------
   11:     def __len__(self):
   12:         return self.size
   13:     
   14:     def push(self, item):
[34m-  15:         if self.top is None:[0m
[32m+  15:         if top is None:[0m
   16:             self.top = StackNode(item)
   17:         else:
   18:             
   19:             item1 = self.top
--------------------------------------------------------------------------------
[0.17203 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
>       var_0 = stack_0.push(stack_0)

MIO/test_stack1_MIO.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f530a0>
item = <stack1.Stack object at 0x7f3ef9f530a0>

>   ???
E   NameError: name 'top' is not defined

stack1:15: NameError
[36m   -[0m [# 115] SVD stack1: 
--------------------------------------------------------------------------------
   12:         return self.size
   13:     
   14:     def push(self, item):
   15:         if self.top is None:
[34m-  16:             self.top = StackNode(item)[0m
[32m+  16:             top = StackNode(item)[0m
   17:         else:
   18:             
   19:             item1 = self.top
   20:             item2 = StackNode(item)
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 116] SVD stack1: 
--------------------------------------------------------------------------------
   15:         if self.top is None:
   16:             self.top = StackNode(item)
   17:         else:
   18:             
[34m-  19:             item1 = self.top[0m
[32m+  19:             item1 = top[0m
   20:             item2 = StackNode(item)
   21:             
   22:             
   23:             self.top = item2
--------------------------------------------------------------------------------
[0.16806 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:58: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9e21f00>, item = '{'

>   ???
E   NameError: name 'top' is not defined

stack1:19: NameError
[36m   -[0m [# 117] SVD stack1: 
--------------------------------------------------------------------------------
   19:             item1 = self.top
   20:             item2 = StackNode(item)
   21:             
   22:             
[34m-  23:             self.top = item2[0m
[32m+  23:             top = item2[0m
   24:             item2.next = item1
   25:         
   26:         self.size += 1
   27:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 118] SVD stack1: 
--------------------------------------------------------------------------------
   22:             
   23:             self.top = item2
   24:             item2.next = item1
   25:         
[34m-  26:         self.size += 1[0m
[32m+  26:         size += 1[0m
   27:     
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 119] SVD stack1: 
--------------------------------------------------------------------------------
   25:         
   26:         self.size += 1
   27:     
   28:     def pop(self):
[34m-  29:         if self.top is None:[0m
[32m+  29:         if top is None:[0m
   30:             raise ValueError()
   31:         else:
   32:             top_data = self.top.data
   33:             
--------------------------------------------------------------------------------
[0.17318 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9e22740>

>   ???
E   NameError: name 'top' is not defined

stack1:29: NameError
[36m   -[0m [# 120] SVD stack1: 
--------------------------------------------------------------------------------
   28:     def pop(self):
   29:         if self.top is None:
   30:             raise ValueError()
   31:         else:
[34m-  32:             top_data = self.top.data[0m
[32m+  32:             top_data = top.data[0m
   33:             
   34:             self.top = self.top.next
   35:             self.size -= 1
   36:             return top_data
--------------------------------------------------------------------------------
[0.17458 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f52e00>

>   ???
E   NameError: name 'top' is not defined

stack1:32: NameError
[36m   -[0m [# 121] SVD stack1: 
--------------------------------------------------------------------------------
   30:             raise ValueError()
   31:         else:
   32:             top_data = self.top.data
   33:             
[34m-  34:             self.top = self.top.next[0m
[32m+  34:             top = self.top.next[0m
   35:             self.size -= 1
   36:             return top_data
   37:     
   38:     def peek(self):
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 122] SVD stack1: 
--------------------------------------------------------------------------------
   30:             raise ValueError()
   31:         else:
   32:             top_data = self.top.data
   33:             
[34m-  34:             self.top = self.top.next[0m
[32m+  34:             self.top = top.next[0m
   35:             self.size -= 1
   36:             return top_data
   37:     
   38:     def peek(self):
--------------------------------------------------------------------------------
[0.16646 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
>       var_0 = module_0.check_parenthesis(str_0)

MIO/test_stack1_MIO.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:63: in check_parenthesis
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f51ba0>

>   ???
E   NameError: name 'top' is not defined

stack1:34: NameError
[36m   -[0m [# 123] SVD stack1: 
--------------------------------------------------------------------------------
   31:         else:
   32:             top_data = self.top.data
   33:             
   34:             self.top = self.top.next
[34m-  35:             self.size -= 1[0m
[32m+  35:             size -= 1[0m
   36:             return top_data
   37:     
   38:     def peek(self):
   39:         if self.top is None:
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 124] SVD stack1: 
--------------------------------------------------------------------------------
   35:             self.size -= 1
   36:             return top_data
   37:     
   38:     def peek(self):
[34m-  39:         if self.top is None:[0m
[32m+  39:         if top is None:[0m
   40:             raise ValueError()
   41:         else:
   42:             return self.top.data
   43: 
--------------------------------------------------------------------------------
[0.17978 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_4

def test_case_4():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        with pytest.raises(ValueError):
>           stack_0.peek()

MIO/test_stack1_MIO.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f52da0>

>   ???
E   NameError: name 'top' is not defined

stack1:39: NameError
[36m   -[0m [# 125] SVD stack1: 
--------------------------------------------------------------------------------
   38:     def peek(self):
   39:         if self.top is None:
   40:             raise ValueError()
   41:         else:
[34m-  42:             return self.top.data[0m
[32m+  42:             return top.data[0m
   43: 
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
--------------------------------------------------------------------------------
[0.17100 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_5

def test_case_5():
        stack_0 = module_0.Stack()
        assert len(stack_0) == 0
        var_0 = stack_0.push(stack_0)
        assert len(stack_0) == 1
>       var_1 = stack_0.peek()

MIO/test_stack1_MIO.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3ef9f53280>

>   ???
E   NameError: name 'top' is not defined

stack1:42: NameError
[36m   -[0m [# 126] SVD stack1: 
--------------------------------------------------------------------------------
   43: 
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
[34m-  47:         self.data = item[0m
[32m+  47:         data = item[0m
   48:         self.next = None
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 127] SVD stack1: 
--------------------------------------------------------------------------------
   44: class StackNode(object):
   45:     ''' Look familiar? '''
   46:     def __init__(self, item):
   47:         self.data = item
[34m-  48:         self.next = None[0m
[32m+  48:         next = None[0m
   49: 
   50: def check_parenthesis(string):
   51:     stack = Stack()
   52:     
--------------------------------------------------------------------------------
[0.00000 s] [36mincompetent[0m

ValueError: expression must have Store context but has Load instead

[36m   -[0m [# 128] ZIL stack1: 
--------------------------------------------------------------------------------
   53:     brackets = {'{': '}', '[': ']', '(': ')'}
   54:     
   55:     for character in string:
   56:         
[34m-  57:         if character in brackets.keys():[0m
[34m-  58:             stack.push(character)[0m
[34m-  59:         [0m
[34m-  60:         [0m
[34m-  61:         if character in brackets.values():[0m
[34m-  62:             try:[0m
[34m-  63:                 other = stack.pop()[0m
[34m-  64:                 [0m
[34m-  65:                 [0m
[34m-  66:                 if brackets[other] != character:[0m
[34m-  67:                     return False[0m
[34m-  68:             [0m
[34m-  69:             except ValueError:[0m
[34m-  70:                 return False[0m
[32m+  57:         break[0m
[32m+  58:     [0m
[32m+  59:     [0m
[32m+  60:     [0m
[32m+  61:     [0m
[32m+  62:     [0m
[32m+  63:     [0m
[32m+  64:     [0m
[32m+  65:     [0m
[32m+  66:     [0m
[32m+  67:     [0m
[32m+  68:     [0m
[32m+  69:     [0m
[32m+  70:     [0m
   71:     
   72:     if stack.size != 0:
   73:         return False
   74:     else:
--------------------------------------------------------------------------------
[0.16970 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_1

def test_case_1():
        str_0 = 'p(hy;{K\nEB];*A}L\\'
        var_0 = module_0.check_parenthesis(str_0)
>       assert var_0 is False
E       AssertionError

MIO/test_stack1_MIO.py:14: AssertionError
[36m   -[0m [# 129] ZIL stack1: 
--------------------------------------------------------------------------------
  102:     tokens = string.split(' ')
  103:     
  104:     for character in tokens:
  105:         
[34m- 106:         if character in ops.keys():[0m
[34m- 107:             try:[0m
[34m- 108:                 [0m
[34m- 109:                 right = stack.pop()[0m
[34m- 110:                 left = stack.pop()[0m
[34m- 111:                 [0m
[34m- 112:                 [0m
[34m- 113:                 result = ops[character](left, right)[0m
[34m- 114:                 stack.push(result)[0m
[34m- 115:             [0m
[34m- 116:             [0m
[34m- 117:             except ValueError as e:[0m
[34m- 118:                 raise e[0m
[34m- 119:         else:[0m
[34m- 120:             [0m
[34m- 121:             try:[0m
[34m- 122:                 [0m
[34m- 123:                 value = int(character)[0m
[34m- 124:                 stack.push(value)[0m
[34m- 125:             [0m
[34m- 126:             except ValueError as e:[0m
[34m- 127:                 raise e[0m
[32m+ 106:         break[0m
[32m+ 107:     [0m
[32m+ 108:     [0m
[32m+ 109:     [0m
[32m+ 110:     [0m
[32m+ 111:     [0m
[32m+ 112:     [0m
[32m+ 113:     [0m
[32m+ 114:     [0m
[32m+ 115:     [0m
[32m+ 116:     [0m
[32m+ 117:     [0m
[32m+ 118:     [0m
[32m+ 119:     [0m
[32m+ 120:     [0m
[32m+ 121:     [0m
[32m+ 122:     [0m
[32m+ 123:     [0m
[32m+ 124:     [0m
[32m+ 125:     [0m
[32m+ 126:     [0m
[32m+ 127:     [0m
  128:     
  129:     
  130:     if stack.size > 1:
  131:         raise ValueError()
--------------------------------------------------------------------------------
[0.20130 s] [32mkilled[0m by MIO/test_stack1_MIO.py::test_case_3

def test_case_3():
        str_0 = '4'
>       var_0 = module_0.postfix_eval(str_0)

MIO/test_stack1_MIO.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack1:133: in postfix_eval
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack1.Stack object at 0x7f3efa0a5c00>

>   ???
E   ValueError

stack1:30: ValueError
[34m[*][0m Mutation score [30.11498 s]: [1m[34m62.8%[0m
[36m   -[0m all: 129
[36m   -[0m killed: 71 (55.0%)
[36m   -[0m survived: 42 (32.6%)
[36m   -[0m incompetent: 16 (12.4%)
[36m   -[0m timeout: 0 (0.0%)
