#Pyguin test cases converted from /home/auri/temp/lucca/python_experiments/linkedList3/RANDOM/test_linkedList3.py
import pytest
import linkedList3 as module_0
import builtins as module_1

def test_case_0():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True

def test_case_1():
    singly_linked_list_0 = module_0.SinglyLinkedList()

def test_case_2():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()

def test_case_3():
    int_0 = 0
    node_0 = module_0.Node(int_0)

def test_case_4():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)

def test_case_5():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    var_0 = singly_linked_list_3.remove()

def test_case_6():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    node_3 = singly_linked_list_0.getHeadNode()

def test_case_7():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_8():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_9():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    list_0 = singly_linked_list_7.toArray()

def test_case_10():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'

def test_case_11():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_12():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    node_6 = singly_linked_list_7.getHeadNode()

def test_case_13():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    bool_2 = singly_linked_list_0.isEmpty()
    assert bool_2 is True

def test_case_14():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()

def test_case_15():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_16():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)

def test_case_17():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_8.remove()

def test_case_18():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_19():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    str_3 = singly_linked_list_4.__str__()

def test_case_20():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_0)

def test_case_21():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_22():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'

def test_case_23():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    list_0 = singly_linked_list_4.toArray()

def test_case_24():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    none_type_1 = singly_linked_list_7.add(int_0)

def test_case_25():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()

def test_case_26():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_11.getHeadNode()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_15.getHeadNode()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    int_3 = 0
    node_8 = module_0.Node(int_3)
    var_1 = singly_linked_list_6.remove()
    none_type_1 = singly_linked_list_6.add(var_1)

def test_case_27():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    node_4 = singly_linked_list_9.getHeadNode()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_7 = module_0.Node(none_type_0)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'

def test_case_28():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    node_3 = singly_linked_list_9.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_0.remove()
    str_5 = var_1.__str__()
    assert str_5 == 'None'

def test_case_29():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()

def test_case_30():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_31():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_2.getHeadNode()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'

def test_case_32():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = 4318
    node_2 = module_0.Node(int_2)

def test_case_33():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True

def test_case_34():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_6 = module_0.Node(none_type_1)
    var_1 = singly_linked_list_9.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None

def test_case_35():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    str_4 = singly_linked_list_2.__str__()
    assert str_4 == '[None]'

def test_case_36():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    node_8 = singly_linked_list_8.getHeadNode()

def test_case_37():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_6 = module_0.Node(none_type_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    node_7 = singly_linked_list_14.getHeadNode()
    int_3 = singly_linked_list_2.getSize()

def test_case_38():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    node_4 = singly_linked_list_7.getHeadNode()
    node_5 = singly_linked_list_6.getHeadNode()

def test_case_39():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_3.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_11.add(singly_linked_list_11)
    node_4 = singly_linked_list_5.getHeadNode()

def test_case_40():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'

def test_case_41():
    bool_0 = False
    node_0 = module_0.Node(bool_0)

def test_case_42():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()

def test_case_43():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_8 = module_0.Node(none_type_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    node_9 = singly_linked_list_12.getHeadNode()
    node_10 = singly_linked_list_12.getHeadNode()

def test_case_44():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.remove()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    int_4 = singly_linked_list_2.getSize()

def test_case_45():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'

def test_case_46():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_0 = singly_linked_list_6.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()

def test_case_47():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True

def test_case_48():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'

def test_case_49():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_1.getHead()

def test_case_50():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()

def test_case_51():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True

def test_case_52():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'

def test_case_53():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_1 = var_1.__str__()
    list_0 = singly_linked_list_0.toArray()

def test_case_54():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_3 = singly_linked_list_1.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    node_5 = module_0.Node(singly_linked_list_5)

def test_case_55():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    node_3 = singly_linked_list_2.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    str_5 = singly_linked_list_4.__str__()
    assert str_5 == '[None]'
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_8 = module_0.Node(none_type_1)
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()

def test_case_56():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()

def test_case_57():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()

def test_case_58():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)

def test_case_59():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    node_5 = singly_linked_list_5.getHeadNode()
    node_6 = module_0.Node(none_type_2)

def test_case_60():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    node_3 = module_0.Node(node_2)

def test_case_61():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True

def test_case_62():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_0.getSize()

def test_case_63():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_64():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_65():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None

def test_case_66():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_9.isEmpty()
    assert bool_6 is True

def test_case_67():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(bool_1)

def test_case_68():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)

def test_case_69():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_1 = var_1.__str__()
    int_2 = singly_linked_list_2.getSize()

def test_case_70():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_0.getHead()

def test_case_71():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    list_0 = singly_linked_list_6.toArray()

def test_case_72():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    node_3 = module_0.Node(str_2)
    assert node_3.value == '[None]'

def test_case_73():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_1 = module_0.Node(str_1)
    assert node_1.value == '[None]'

def test_case_74():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_4 = var_1.__str__()
    var_2 = singly_linked_list_0.getHead()

def test_case_75():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    node_4 = singly_linked_list_11.getHeadNode()
    list_0 = singly_linked_list_6.toArray()

def test_case_76():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    node_1 = singly_linked_list_5.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_5 = var_3.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    int_1 = singly_linked_list_10.getSize()

def test_case_77():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(none_type_2)
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_11.add(none_type_4)
    none_type_6 = singly_linked_list_11.add(none_type_4)
    int_2 = 0
    node_9 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_12.remove()
    list_0 = singly_linked_list_5.toArray()

def test_case_78():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.getHead()
    str_8 = var_3.__str__()
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_79():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_80():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_5.add(none_type_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_4 = var_1.__str__()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True

def test_case_81():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    var_3 = singly_linked_list_2.getHead()

def test_case_82():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    list_0 = singly_linked_list_3.toArray()

def test_case_83():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.remove()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_11.add(none_type_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_84():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_2 = var_0.__str__()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_5 = module_0.Node(int_1)
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_9 = module_0.Node(none_type_1)
    int_3 = singly_linked_list_10.getSize()
    assert int_3 == 0

def test_case_85():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    var_2 = singly_linked_list_0.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert var_2.value is None
    assert var_2.next is None

def test_case_86():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_3.getHeadNode()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    str_1 = var_0.__str__()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    node_5 = module_0.Node(str_0)
    assert node_5.value == '[None]'

def test_case_87():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()

def test_case_88():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_7.isEmpty()
    assert bool_5 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_7.getHeadNode()
    var_1 = singly_linked_list_8.getHead()

def test_case_89():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_6.getHeadNode()

def test_case_90():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bytes_0 = b'\xbe\xdd65\xb93\xc9E\x03\xa7'
    none_type_4 = singly_linked_list_2.add(bytes_0)

def test_case_91():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()

def test_case_92():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()

def test_case_93():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_94():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()

def test_case_95():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()

def test_case_96():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_1 = var_1.__str__()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    none_type_0 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(none_type_0)
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_11.isEmpty()
    assert bool_7 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_13.getHeadNode()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    int_4 = singly_linked_list_11.getSize()

def test_case_97():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    node_6 = singly_linked_list_6.getHeadNode()

def test_case_98():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    none_type_2 = singly_linked_list_9.add(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    var_3 = singly_linked_list_12.remove()

def test_case_99():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()

def test_case_100():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_0.getHeadNode()

def test_case_101():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()

def test_case_102():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(none_type_3)
    none_type_5 = singly_linked_list_6.add(none_type_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_6 = var_3.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()

def test_case_103():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()

def test_case_104():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_2 = var_1.__str__()
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True

def test_case_105():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()

def test_case_106():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_6.remove()
    str_3 = var_0.__str__()
    assert str_3 == 'None'

def test_case_107():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()

def test_case_108():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_3 = singly_linked_list_6.getSize()

def test_case_109():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    bool_1 = False
    none_type_2 = singly_linked_list_1.add(bool_1)

def test_case_110():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    str_4 = var_1.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_13.getSize()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'

def test_case_111():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_112():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)

def test_case_113():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()

def test_case_114():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_115():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_3 = var_3.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_5 = var_4.__str__()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True

def test_case_116():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    var_0 = singly_linked_list_0.remove()

def test_case_117():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    node_6 = singly_linked_list_11.getHeadNode()
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    none_type_4 = singly_linked_list_5.add(none_type_3)

def test_case_118():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)

def test_case_119():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()

def test_case_120():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_1 = var_3.__str__()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_121():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True

def test_case_122():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    var_3 = singly_linked_list_1.remove()

def test_case_123():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_0 = var_2.__str__()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()

def test_case_124():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_15.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_13.getHead()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    none_type_0 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_125():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_0 = var_1.__str__()
    int_1 = singly_linked_list_4.getSize()
    node_5 = module_0.Node(singly_linked_list_3)

def test_case_126():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()

def test_case_127():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_1 = var_1.__str__()
    int_1 = singly_linked_list_5.getSize()
    node_4 = singly_linked_list_5.getHeadNode()

def test_case_128():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_11.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    int_5 = 0
    node_6 = module_0.Node(int_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_14.__str__()
    assert str_2 == '[None]'
    node_7 = singly_linked_list_13.getHeadNode()
    int_6 = singly_linked_list_9.getSize()

def test_case_129():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_5 = singly_linked_list_6.add(str_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_6 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_6 = var_1.__str__()
    list_0 = singly_linked_list_6.toArray()

def test_case_130():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    str_1 = var_0.__str__()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_7 = module_0.Node(none_type_1)
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True

def test_case_131():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    var_1 = singly_linked_list_1.getHead()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.remove()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_8)

def test_case_132():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    node_3 = singly_linked_list_1.getHeadNode()

def test_case_133():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_134():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None

def test_case_135():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'

def test_case_136():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_6.getHead()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    bool_1 = singly_linked_list_13.isEmpty()
    assert bool_1 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(singly_linked_list_15)

def test_case_137():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_138():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_2.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.getHead()
    str_7 = var_4.__str__()
    int_1 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    none_type_4 = singly_linked_list_14.add(str_8)
    var_5 = singly_linked_list_14.getHead()
    assert var_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_15.__str__()
    assert str_9 == '[None]'
    var_6 = singly_linked_list_15.remove()
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is True

def test_case_139():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    int_2 = singly_linked_list_2.getSize()

def test_case_140():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    var_1 = singly_linked_list_1.remove()

def test_case_141():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    bool_1 = singly_linked_list_11.isEmpty()
    assert bool_1 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_17.getHeadNode()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_18.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_18.getSize()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_20.remove()
    var_2 = singly_linked_list_15.getHead()
    str_7 = var_2.__str__()

def test_case_142():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    str_2 = var_0.__str__()
    int_0 = singly_linked_list_6.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_3 = singly_linked_list_9.add(str_3)
    var_1 = singly_linked_list_9.getHead()
    assert var_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    str_5 = singly_linked_list_0.__str__()
    assert str_5 == '[None]'

def test_case_143():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_2 = var_2.__str__()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_1.getHead()

def test_case_144():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()

def test_case_145():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True

def test_case_146():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    var_0 = singly_linked_list_11.remove()
    node_1 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_12.add(none_type_0)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_15.remove()
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_13.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_16.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_17.getHead()
    str_6 = var_3.__str__()
    int_0 = singly_linked_list_16.getSize()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_18.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_18.add(singly_linked_list_18)
    none_type_3 = singly_linked_list_18.add(str_7)
    var_4 = singly_linked_list_18.getHead()
    assert var_4 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_19.__str__()
    assert str_8 == '[None]'
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()

def test_case_147():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_2 = singly_linked_list_8.add(str_3)
    var_4 = singly_linked_list_8.getHead()
    assert var_4 == '[None]'
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_9.add(none_type_3)
    none_type_5 = singly_linked_list_9.add(none_type_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_148():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_2 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'

def test_case_149():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_3 = singly_linked_list_6.add(str_4)
    list_0 = singly_linked_list_5.toArray()

def test_case_150():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_1 = singly_linked_list_0.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_5.getHeadNode()
    var_2 = singly_linked_list_0.getHead()

def test_case_151():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_152():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_7 = module_0.Node(none_type_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_14.add(none_type_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_15.__str__()
    assert str_3 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_18.__str__()
    assert str_4 == '[None]'
    var_4 = singly_linked_list_18.remove()
    node_10 = singly_linked_list_18.getHeadNode()
    assert f'{type(node_10).__module__}.{type(node_10).__qualname__}' == 'linkedList3.Node'
    assert node_10.value is None
    assert node_10.next is None
    list_1 = singly_linked_list_0.toArray()

def test_case_153():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_9.getHeadNode()
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.getHead()
    str_3 = var_0.__str__()
    int_4 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    int_5 = singly_linked_list_9.getSize()

def test_case_154():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_2 = singly_linked_list_3.add(str_0)
    var_0 = singly_linked_list_3.getHead()
    assert var_0 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    none_type_5 = singly_linked_list_4.add(none_type_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_6.add(none_type_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_8 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    node_5 = singly_linked_list_8.getHeadNode()
    var_2 = singly_linked_list_0.getHead()

def test_case_155():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()

def test_case_156():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)

def test_case_157():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(var_0)

def test_case_158():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_159():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True

def test_case_160():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1

def test_case_161():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    list_0 = singly_linked_list_3.toArray()

def test_case_162():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    none_type_0 = singly_linked_list_1.add(bool_1)

def test_case_163():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_15.toArray()

def test_case_164():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    list_0 = singly_linked_list_3.toArray()

def test_case_165():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_0 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_15.isEmpty()
    assert bool_0 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_19.remove()
    bool_1 = singly_linked_list_19.isEmpty()
    assert bool_1 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()

def test_case_166():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True

def test_case_167():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_1)
    var_0 = singly_linked_list_1.getHead()
    assert var_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    var_4 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_9.getHeadNode()

def test_case_168():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_3.remove()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_7.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True

def test_case_169():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_6.remove()
    node_3 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_170():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_5 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    str_6 = var_2.__str__()
    int_1 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True

def test_case_171():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_2.remove()

def test_case_172():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_173():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    list_1 = singly_linked_list_3.toArray()

def test_case_174():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_0 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_3 = var_2.__str__()
    int_0 = singly_linked_list_7.getSize()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    var_5 = singly_linked_list_7.remove()

def test_case_175():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_4 = singly_linked_list_5.add(str_3)
    var_0 = singly_linked_list_5.getHead()
    assert var_0 == '[None]'
    str_4 = singly_linked_list_5.__str__()

def test_case_176():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    node_4 = singly_linked_list_6.getHeadNode()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.getHead()
    str_5 = var_0.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_2 = singly_linked_list_10.getHead()
    list_0 = singly_linked_list_11.toArray()
    str_7 = var_0.__str__()

def test_case_177():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_13.isEmpty()
    assert bool_1 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    none_type_0 = singly_linked_list_15.add(singly_linked_list_15)
    int_2 = singly_linked_list_15.getSize()
    assert int_2 == 1
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_16.add(none_type_1)
    none_type_3 = singly_linked_list_16.add(none_type_1)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_178():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    node_2 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True

def test_case_179():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()

def test_case_180():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()

def test_case_181():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    int_1 = singly_linked_list_0.getSize()

def test_case_182():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 2

def test_case_183():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'

def test_case_184():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_3 = singly_linked_list_4.getHead()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_5 = singly_linked_list_7.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    var_6 = singly_linked_list_10.remove()
    bool_0 = singly_linked_list_10.isEmpty()
    assert bool_0 is True
    int_2 = singly_linked_list_4.getSize()

def test_case_185():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    var_0 = singly_linked_list_4.getHead()

def test_case_186():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    none_type_5 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None, None]'

def test_case_187():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_3 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    var_5 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    int_2 = singly_linked_list_9.getSize()
    assert int_2 == 1
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    node_4 = module_0.Node(singly_linked_list_7)

def test_case_188():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_1 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_189():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_12.remove()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    int_4 = singly_linked_list_5.getSize()

def test_case_190():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    node_3 = module_0.Node(none_type_1)

def test_case_191():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_1 = singly_linked_list_4.getHead()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_9.remove()
    none_type_3 = singly_linked_list_3.add(singly_linked_list_6)

def test_case_192():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_0 = var_1.__str__()
    int_2 = singly_linked_list_6.getSize()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()

def test_case_193():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    list_0 = singly_linked_list_2.toArray()

def test_case_194():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_2)
    var_3 = singly_linked_list_5.getHead()
    assert var_3 == '[None]'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_3 = singly_linked_list_9.add(str_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_10.remove()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(bool_0)
    assert node_5.value is True

def test_case_195():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False

def test_case_196():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_2)
    var_0 = singly_linked_list_4.getHead()
    assert var_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'

def test_case_197():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_11.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_1 = singly_linked_list_9.getHead()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_12.isEmpty()
    assert bool_0 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_12.remove()

def test_case_198():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_4 = singly_linked_list_4.add(str_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    none_type_6 = singly_linked_list_16.add(singly_linked_list_16)
    none_type_7 = singly_linked_list_16.add(str_7)
    var_3 = singly_linked_list_16.getHead()
    assert var_3 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_199():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()

def test_case_200():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_9.toArray()
    str_5 = var_0.__str__()
    assert str_5 == 'None'

def test_case_201():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True

def test_case_202():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    node_2 = module_0.Node(str_1)
    assert node_2.value == '[None]'

def test_case_203():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    var_2 = singly_linked_list_11.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.getHead()
    bool_0 = False
    node_6 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(none_type_2)
    none_type_4 = singly_linked_list_15.add(none_type_2)
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is False
    node_7 = module_0.Node(bool_0)

def test_case_204():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_3.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_4)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    str_6 = singly_linked_list_7.__str__()
    assert str_6 == '[None]'
    var_1 = singly_linked_list_2.getHead()

def test_case_205():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    node_1 = singly_linked_list_0.getHeadNode()

def test_case_206():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_3 = singly_linked_list_1.add(str_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    str_3 = singly_linked_list_0.__str__()

def test_case_207():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_0)
    var_1 = singly_linked_list_3.getHead()
    assert var_1 == '[None]'
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_208():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_209():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_5.remove()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    none_type_2 = singly_linked_list_8.add(none_type_0)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is False
    list_0 = singly_linked_list_6.toArray()

def test_case_210():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_2 = singly_linked_list_11.getHead()
    list_2 = singly_linked_list_12.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_14.getHeadNode()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_15.add(singly_linked_list_15)
    int_3 = singly_linked_list_15.getSize()
    assert int_3 == 1
    int_4 = singly_linked_list_15.getSize()
    assert int_4 == 1

def test_case_211():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_1.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_3 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    int_3 = singly_linked_list_7.getSize()

def test_case_212():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    str_4 = var_1.__str__()
    assert str_4 == 'None'

def test_case_213():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    var_4 = singly_linked_list_7.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_12.getHeadNode()
    node_3 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    node_5 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_14.getSize()
    var_7 = singly_linked_list_13.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_16.add(singly_linked_list_16)
    none_type_2 = singly_linked_list_16.add(str_5)
    var_8 = singly_linked_list_16.getHead()
    assert var_8 == '[None]'
    str_6 = var_5.__str__()
    assert str_6 == 'None'

def test_case_214():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_2)
    var_1 = singly_linked_list_4.getHead()
    assert var_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()

def test_case_215():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)

def test_case_216():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_4 = singly_linked_list_7.getHead()
    list_0 = singly_linked_list_8.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(none_type_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.remove()
    str_5 = var_5.__str__()
    assert str_5 == 'None'
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_14.remove()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_15.add(singly_linked_list_15)
    int_4 = singly_linked_list_15.getSize()
    assert int_4 == 1
    node_6 = singly_linked_list_15.getHeadNode()
    int_5 = singly_linked_list_9.getSize()
    assert int_5 == 0

def test_case_217():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()

def test_case_218():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    str_4 = var_1.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    var_2 = singly_linked_list_2.getHead()

def test_case_219():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)

def test_case_220():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    node_5 = singly_linked_list_6.getHeadNode()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    int_3 = singly_linked_list_7.getSize()
    assert int_3 == 1
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    none_type_1 = None
    node_7 = module_0.Node(none_type_1)
    node_8 = singly_linked_list_4.getHeadNode()

def test_case_221():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    list_0 = singly_linked_list_0.toArray()

def test_case_222():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_1 = singly_linked_list_1.getHead()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_3 = singly_linked_list_4.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    node_5 = singly_linked_list_8.getHeadNode()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    str_3 = var_2.__str__()
    int_4 = singly_linked_list_10.getSize()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'

def test_case_223():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_224():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_225():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_0.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value is None
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'

def test_case_226():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_6.toArray()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = None
    node_6 = module_0.Node(none_type_5)
    list_2 = singly_linked_list_8.toArray()

def test_case_227():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_1 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_13.getSize()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.remove()
    none_type_4 = singly_linked_list_13.add(node_2)

def test_case_228():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is False
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_229():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)
    none_type_4 = singly_linked_list_9.add(none_type_2)
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is False

def test_case_230():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_1 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_9.remove()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_2 = singly_linked_list_13.add(str_5)
    node_4 = singly_linked_list_7.getHeadNode()

def test_case_231():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_5 = singly_linked_list_8.add(int_0)

def test_case_232():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    none_type_4 = None
    node_3 = module_0.Node(none_type_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_11.remove()
    node_5 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_12.remove()
    none_type_5 = singly_linked_list_9.add(singly_linked_list_8)

def test_case_233():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_3.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_0 = singly_linked_list_9.remove()
    node_1 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    none_type_2 = singly_linked_list_5.add(node_2)

def test_case_234():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()

def test_case_235():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    node_2 = singly_linked_list_2.getHeadNode()

def test_case_236():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    none_type_3 = singly_linked_list_9.add(none_type_1)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is False
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_11.remove()
    int_1 = singly_linked_list_7.getSize()

def test_case_237():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    var_3 = singly_linked_list_11.getHead()
    var_4 = singly_linked_list_5.remove()

def test_case_238():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_12.remove()
    node_4 = module_0.Node(var_0)
    assert node_4.value is None

def test_case_239():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()

def test_case_240():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_3.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    str_4 = var_3.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_1 = singly_linked_list_8.add(str_5)
    var_4 = singly_linked_list_8.getHead()
    assert var_4 == '[None]'
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    node_6 = singly_linked_list_5.getHeadNode()

def test_case_241():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)

def test_case_242():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_15.getSize()
    bool_2 = singly_linked_list_16.isEmpty()
    assert bool_2 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_17.getHeadNode()
    node_7 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_18.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_18.getSize()
    var_3 = singly_linked_list_17.remove()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_20.add(none_type_0)
    none_type_2 = singly_linked_list_20.add(none_type_0)
    list_0 = singly_linked_list_3.toArray()

def test_case_243():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)

def test_case_244():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_3 = module_0.Node(complex_0)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_2 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_5.getHeadNode()
    node_8 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_2 = None
    node_9 = module_0.Node(none_type_2)
    node_10 = singly_linked_list_4.getHeadNode()

def test_case_245():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_11.remove()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(none_type_3)
    none_type_5 = singly_linked_list_12.add(none_type_3)
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is False
    var_3 = singly_linked_list_12.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value is None
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'

def test_case_246():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_247():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    node_3 = singly_linked_list_5.getHeadNode()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    int_1 = singly_linked_list_6.getSize()
    assert int_1 == 1
    node_5 = singly_linked_list_6.getHeadNode()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_2 = var_1.__str__()
    var_2 = singly_linked_list_2.getHead()

def test_case_248():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_11.getSize()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'

def test_case_249():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_6.remove()
    node_2 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_250():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    list_0 = singly_linked_list_0.toArray()

def test_case_251():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_4.getHead()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    var_3 = singly_linked_list_5.remove()

def test_case_252():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    node_6 = singly_linked_list_6.getHeadNode()
    var_2 = singly_linked_list_5.remove()

def test_case_253():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_6.remove()
    node_1 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    node_3 = singly_linked_list_7.getHeadNode()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'

def test_case_254():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)

def test_case_255():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_3 = singly_linked_list_6.getHead()
    list_0 = singly_linked_list_7.toArray()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    none_type_3 = singly_linked_list_10.add(none_type_1)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    str_3 = var_4.__str__()
    assert str_3 == 'None'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    int_3 = singly_linked_list_2.getSize()
    assert int_3 == 0

def test_case_256():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_2 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_3 = singly_linked_list_2.getHeadNode()
    int_1 = singly_linked_list_3.getSize()

def test_case_257():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_8.__str__()
    assert str_0 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_3.getHead()

def test_case_258():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()

def test_case_259():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    int_3 = singly_linked_list_2.getSize()

def test_case_260():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()

def test_case_261():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()

def test_case_262():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_4 = singly_linked_list_5.add(str_4)
    var_1 = singly_linked_list_5.getHead()
    assert var_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_8.__str__()
    assert str_6 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    var_3 = singly_linked_list_8.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.getHead()
    node_5 = module_0.Node(var_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(bool_0)

def test_case_263():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_3.remove()

def test_case_264():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_2 = singly_linked_list_6.getHead()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.remove()
    int_4 = 0
    node_6 = module_0.Node(int_4)
    var_4 = singly_linked_list_12.getHead()
    list_0 = singly_linked_list_13.toArray()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(none_type_3)
    none_type_5 = singly_linked_list_15.add(none_type_3)
    bool_5 = singly_linked_list_15.isEmpty()
    assert bool_5 is False
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    var_5 = singly_linked_list_16.remove()
    var_6 = singly_linked_list_14.remove()

def test_case_265():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_0)
    var_1 = singly_linked_list_5.getHead()
    assert var_1 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    none_type_4 = singly_linked_list_6.add(none_type_2)
    node_5 = module_0.Node(singly_linked_list_5)

def test_case_266():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_13.add(singly_linked_list_11)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(none_type_2)
    none_type_4 = singly_linked_list_15.add(none_type_2)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    node_3 = module_0.Node(var_1)
    assert node_3.value is None

def test_case_267():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)

def test_case_268():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    none_type_2 = singly_linked_list_8.add(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    node_4 = module_0.Node(var_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_16.getHeadNode()
    node_6 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_17.getSize()
    bool_2 = singly_linked_list_18.isEmpty()
    assert bool_2 is True
    var_5 = singly_linked_list_18.getHead()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_19.isEmpty()
    assert bool_3 is True
    list_1 = singly_linked_list_9.toArray()

def test_case_269():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    none_type_3 = singly_linked_list_8.add(node_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    var_3 = singly_linked_list_11.remove()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_270():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_271():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_272():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    bool_6 = singly_linked_list_7.isEmpty()
    assert bool_6 is True

def test_case_273():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_1 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    node_6 = module_0.Node(var_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_6 = var_4.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_3 = singly_linked_list_15.add(str_7)
    var_5 = singly_linked_list_4.remove()

def test_case_274():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    none_type_2 = singly_linked_list_10.add(node_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_8.remove()

def test_case_275():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_4 = singly_linked_list_3.add(str_0)
    var_0 = singly_linked_list_3.getHead()
    assert var_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_7 = singly_linked_list_8.add(str_4)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_12.getHeadNode()
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.getHead()
    str_7 = var_2.__str__()
    int_2 = singly_linked_list_12.getSize()
    str_8 = singly_linked_list_10.__str__()
    assert str_8 == '[None]'

def test_case_276():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()

def test_case_277():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()

def test_case_278():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_3 = singly_linked_list_8.add(str_3)
    var_3 = singly_linked_list_8.getHead()
    assert var_3 == '[None]'
    bool_4 = False
    node_1 = module_0.Node(bool_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    int_3 = singly_linked_list_12.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_13.isEmpty()
    assert bool_5 is True
    node_5 = module_0.Node(str_2)
    assert node_5.value == '[None]'

def test_case_279():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_9.getHead()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_13.__str__()
    assert str_1 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_2.isEmpty()
    assert bool_6 is True

def test_case_280():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_0.getHead()

def test_case_281():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_4.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_14.remove()
    node_4 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    complex_0 = 1389 + 116.582j
    node_7 = module_0.Node(complex_0)
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()

def test_case_282():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    node_1 = module_0.Node(var_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()

def test_case_283():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    list_1 = singly_linked_list_2.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_2 = module_0.Node(var_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_8)
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_11.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_284():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()

def test_case_285():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_3 = singly_linked_list_6.getSize()
    assert int_3 == 1
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    none_type_3 = singly_linked_list_9.add(none_type_1)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()

def test_case_286():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_4 = singly_linked_list_8.add(str_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_5 = module_0.Node(int_1)
    var_5 = singly_linked_list_12.remove()
    node_6 = module_0.Node(none_type_4)

def test_case_287():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True

def test_case_288():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    node_2 = module_0.Node(var_0)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'

def test_case_289():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(none_type_2)
    none_type_4 = singly_linked_list_2.add(none_type_2)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    none_type_5 = None
    node_2 = module_0.Node(none_type_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    list_0 = singly_linked_list_5.toArray()

def test_case_290():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_9.add(none_type_3)
    none_type_5 = singly_linked_list_9.add(none_type_3)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    node_4 = singly_linked_list_13.getHeadNode()
    var_2 = singly_linked_list_5.remove()

def test_case_291():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_292():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    str_1 = var_1.__str__()
    assert str_1 == 'None'

def test_case_293():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_294():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_0)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    var_1 = singly_linked_list_6.getHead()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()

def test_case_295():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_3 = singly_linked_list_2.add(node_1)
    str_1 = singly_linked_list_2.__str__()

def test_case_296():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    list_1 = singly_linked_list_2.toArray()

def test_case_297():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_1 = singly_linked_list_6.getHeadNode()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_2 = singly_linked_list_8.add(str_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    var_3 = singly_linked_list_11.remove()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_3.__str__()
    assert str_6 == '[None]'

def test_case_298():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_14.remove()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_12.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    none_type_0 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_1 = singly_linked_list_15.add(str_6)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_18.remove()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_19.isEmpty()
    assert bool_5 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_20.__str__()
    assert str_8 == '[None]'
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_21.getHeadNode()
    str_9 = singly_linked_list_19.__str__()
    assert str_9 == '[None]'
    list_1 = singly_linked_list_11.toArray()

def test_case_299():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_300():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    str_1 = var_2.__str__()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_3.remove()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_4.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_3 = var_4.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = var_0.__str__()
    assert str_6 == 'None'

def test_case_301():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_3 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_9.remove()
    var_3 = singly_linked_list_0.remove()
    str_6 = var_3.__str__()
    assert str_6 == 'None'

def test_case_302():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    var_0 = singly_linked_list_0.remove()

def test_case_303():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_0)
    var_0 = singly_linked_list_2.getHead()
    assert var_0 == '[None]'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    var_3 = singly_linked_list_9.getHead()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_18.add(none_type_2)
    none_type_4 = singly_linked_list_18.add(none_type_2)
    bool_3 = singly_linked_list_18.isEmpty()
    assert bool_3 is False
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_19.toArray()
    bool_4 = singly_linked_list_3.isEmpty()
    assert bool_4 is True

def test_case_304():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'

def test_case_305():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()

def test_case_306():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(str_2)
    assert node_4.value == '[None]'

def test_case_307():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    var_3 = singly_linked_list_6.remove()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    none_type_3 = singly_linked_list_7.add(none_type_1)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_11.getHeadNode()
    node_9 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_4 = 0
    node_10 = module_0.Node(int_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'

def test_case_308():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_4.getHead()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is False
    bool_5 = False
    node_3 = module_0.Node(bool_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_309():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_10.add(singly_linked_list_10)
    int_1 = singly_linked_list_10.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_15.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    var_2 = singly_linked_list_13.getHead()
    list_0 = singly_linked_list_14.toArray()
    node_6 = singly_linked_list_14.getHeadNode()

def test_case_310():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    node_4 = singly_linked_list_10.getHeadNode()
    int_4 = singly_linked_list_5.getSize()

def test_case_311():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.remove()
    str_2 = var_4.__str__()
    assert str_2 == 'None'
    none_type_1 = singly_linked_list_5.add(node_4)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(none_type_2)
    var_5 = singly_linked_list_5.getHead()

def test_case_312():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is False
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None, None]'

def test_case_313():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    node_2 = module_0.Node(singly_linked_list_0)

def test_case_314():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_2.remove()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()

def test_case_315():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True

def test_case_316():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_8.remove()
    node_0 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_10.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    str_4 = var_2.__str__()
    int_0 = singly_linked_list_10.getSize()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    node_6 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.remove()
    str_5 = var_3.__str__()
    assert str_5 == 'None'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    str_7 = singly_linked_list_17.__str__()
    assert str_7 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()

def test_case_317():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_0)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_6 = module_0.Node(complex_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    str_6 = singly_linked_list_2.__str__()
    assert str_6 == '[None]'

def test_case_318():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    list_0 = singly_linked_list_0.toArray()

def test_case_319():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    str_1 = var_2.__str__()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_2 = singly_linked_list_9.add(str_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    var_3 = singly_linked_list_13.remove()
    node_5 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(singly_linked_list_15)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_16.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_17.add(singly_linked_list_15)
    node_6 = module_0.Node(singly_linked_list_14)

def test_case_320():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)

def test_case_321():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_322():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_323():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    node_6 = module_0.Node(var_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_8.getHeadNode()
    node_8 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_324():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_1 = singly_linked_list_7.remove()
    node_1 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_1)
    assert node_2.value is None

def test_case_325():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_1.remove()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_3)
    var_2 = singly_linked_list_6.getHead()
    assert var_2 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(none_type_3)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    node_6 = singly_linked_list_11.getHeadNode()

def test_case_326():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    node_2 = singly_linked_list_3.getHeadNode()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.remove()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(str_1)

def test_case_327():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()

def test_case_328():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_4 = module_0.Node(node_0)

def test_case_329():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    node_4 = singly_linked_list_6.getHeadNode()

def test_case_330():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_1 = module_0.Node(var_2)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_14.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_15.add(singly_linked_list_13)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_17.isEmpty()
    assert bool_2 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_18.__str__()
    assert str_4 == '[None]'
    node_4 = singly_linked_list_17.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_19.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_19.add(singly_linked_list_19)
    int_3 = singly_linked_list_19.getSize()
    assert int_3 == 1
    singly_linked_list_20 = module_0.SinglyLinkedList()

def test_case_331():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_2 = singly_linked_list_5.getHead()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    list_0 = singly_linked_list_0.toArray()

def test_case_332():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'

def test_case_333():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_1 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_2 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_9.toArray()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    str_3 = var_3.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    var_4 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_13.isEmpty()
    assert bool_5 is True
    node_4 = module_0.Node(list_0)
    assert node_4.value == [None]

def test_case_334():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    node_7 = singly_linked_list_11.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    bool_6 = False
    node_9 = module_0.Node(bool_6)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_14.getHead()
    str_3 = var_1.__str__()
    int_2 = singly_linked_list_13.getSize()
    list_1 = singly_linked_list_3.toArray()

def test_case_335():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_2 = singly_linked_list_3.add(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_0 = singly_linked_list_6.getHead()
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    int_4 = 0
    node_5 = module_0.Node(int_4)
    var_2 = singly_linked_list_10.getHead()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_5 = singly_linked_list_13.add(str_3)
    var_3 = singly_linked_list_13.getHead()
    assert var_3 == '[None]'
    none_type_6 = singly_linked_list_4.add(singly_linked_list_2)

def test_case_336():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    str_2 = var_3.__str__()
    assert str_2 == 'None'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_1 = singly_linked_list_8.add(str_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_10.getHeadNode()
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_11.getSize()
    var_4 = singly_linked_list_10.remove()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.remove()
    var_6 = singly_linked_list_1.getHead()

def test_case_337():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()

def test_case_338():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_1)
    var_1 = singly_linked_list_2.getHead()
    assert var_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True

def test_case_339():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_4 = singly_linked_list_3.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    int_6 = 0
    node_5 = module_0.Node(int_6)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_7 = module_0.Node(none_type_2)
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'

def test_case_340():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    var_0 = singly_linked_list_0.getHead()

def test_case_341():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_4 = singly_linked_list_0.isEmpty()
    assert bool_4 is True

def test_case_342():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True

def test_case_343():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'

def test_case_344():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)

def test_case_345():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    node_2 = module_0.Node(singly_linked_list_4)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    int_3 = singly_linked_list_0.getSize()

def test_case_346():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = var_1.__str__()
    assert str_4 == 'None'
    var_2 = singly_linked_list_7.getHead()

def test_case_347():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_2)
    var_1 = singly_linked_list_2.getHead()
    assert var_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.getHead()
    node_7 = module_0.Node(var_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_14.getSize()
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_19.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_19.remove()
    node_9 = singly_linked_list_19.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    var_5 = singly_linked_list_17.getHead()

def test_case_348():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    node_1 = singly_linked_list_3.getHeadNode()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True

def test_case_349():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_8.remove()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    str_3 = var_2.__str__()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    none_type_3 = singly_linked_list_10.add(none_type_1)
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    node_4 = module_0.Node(bool_1)
    assert node_4.value is True

def test_case_350():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_351():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_352():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()

def test_case_353():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    var_1 = singly_linked_list_1.getHead()
    assert var_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_2 = singly_linked_list_1.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert var_2.value == '[None]'
    assert f'{type(var_2.next).__module__}.{type(var_2.next).__qualname__}' == 'linkedList3.Node'

def test_case_354():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_9.remove()
    node_4 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    var_2 = singly_linked_list_8.getHead()

def test_case_355():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'

def test_case_356():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()

def test_case_357():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_1 = singly_linked_list_3.getHead()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    node_4 = module_0.Node(node_3)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    node_7 = module_0.Node(var_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_13.getSize()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_15.__str__()
    assert str_3 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_16.add(singly_linked_list_16)
    node_9 = module_0.Node(singly_linked_list_4)

def test_case_358():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_1 = singly_linked_list_9.add(str_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = var_3.__str__()
    assert str_5 == 'None'
    int_2 = 0
    node_6 = module_0.Node(int_2)
    none_type_2 = None
    node_7 = module_0.Node(none_type_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_4 = singly_linked_list_12.add(str_6)
    var_4 = singly_linked_list_12.getHead()
    assert var_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_16.getHead()
    none_type_5 = singly_linked_list_4.add(node_5)

def test_case_359():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    bool_3 = False
    node_1 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    list_1 = singly_linked_list_7.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)
    none_type_4 = singly_linked_list_9.add(none_type_2)
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_360():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_361():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_3)
    str_4 = singly_linked_list_0.__str__()
    assert str_4 == '[None]'

def test_case_362():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_4.remove()
    var_3 = singly_linked_list_3.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value is None
    assert var_3.next is None

def test_case_363():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(none_type_4)
    none_type_6 = singly_linked_list_9.add(none_type_4)
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    none_type_7 = singly_linked_list_10.add(singly_linked_list_10)
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is False

def test_case_364():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_8)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_2 = singly_linked_list_13.add(str_6)
    var_0 = singly_linked_list_13.getHead()
    assert var_0 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_14.getSize()

def test_case_365():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(none_type_4)
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_366():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_2.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = 0
    node_5 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    node_6 = module_0.Node(singly_linked_list_9)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    none_type_3 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(none_type_3)
    none_type_5 = singly_linked_list_13.add(none_type_3)
    str_4 = var_0.__str__()
    assert str_4 == 'None'

def test_case_367():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_0 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_9.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    str_5 = var_2.__str__()
    int_2 = singly_linked_list_10.getSize()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_13.getHead()
    list_0 = singly_linked_list_13.toArray()
    list_1 = singly_linked_list_3.toArray()

def test_case_368():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_369():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()

def test_case_370():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    str_2 = var_0.__str__()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    node_6 = module_0.Node(node_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    node_8 = module_0.Node(singly_linked_list_8)
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True

def test_case_371():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    node_7 = singly_linked_list_2.getHeadNode()

def test_case_372():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_8.__str__()
    assert str_0 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.remove()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_11.__str__()
    assert str_1 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_11.isEmpty()
    assert bool_6 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.remove()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None, None]'

def test_case_373():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_6.getHead()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_3 = singly_linked_list_9.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(none_type_0)
    none_type_2 = singly_linked_list_11.add(none_type_0)
    list_1 = singly_linked_list_11.toArray()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    node_7 = module_0.Node(var_4)
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_14.remove()
    str_5 = var_6.__str__()
    assert str_5 == 'None'
    none_type_4 = singly_linked_list_13.add(node_8)
    list_2 = singly_linked_list_2.toArray()

def test_case_374():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_0.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_9.__str__()
    assert str_0 == '[None]'
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_7.toArray()

def test_case_375():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_0.add(none_type_1)
    none_type_3 = singly_linked_list_0.add(none_type_0)

def test_case_376():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(none_type_4)
    none_type_6 = singly_linked_list_6.add(none_type_4)
    list_1 = singly_linked_list_6.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_7 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_7.add(none_type_7)
    none_type_9 = singly_linked_list_7.add(none_type_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    var_2 = singly_linked_list_8.getHead()

def test_case_377():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_2)
    var_1 = singly_linked_list_2.getHead()
    assert var_1 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    str_3 = var_2.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_5.add(none_type_4)
    none_type_6 = singly_linked_list_5.add(none_type_4)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    str_5 = var_3.__str__()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    node_3 = module_0.Node(node_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.getHead()
    node_4 = module_0.Node(var_4)
    none_type_7 = singly_linked_list_8.add(none_type_4)

def test_case_378():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    none_type_1 = singly_linked_list_2.add(node_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    var_4 = singly_linked_list_7.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_6 = module_0.Node(none_type_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_14.getHead()
    str_5 = var_5.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_379():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)

def test_case_380():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_5.getHead()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    str_1 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(str_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_0)

def test_case_381():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1

def test_case_382():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None

def test_case_383():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_384():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_3 = singly_linked_list_9.add(node_4)
    node_5 = module_0.Node(var_1)
    assert f'{type(node_5.value).__module__}.{type(node_5.value).__qualname__}' == 'linkedList3.Node'

def test_case_385():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    str_2 = var_3.__str__()
    assert str_2 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.getHead()
    node_2 = module_0.Node(var_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.getHead()
    str_5 = var_5.__str__()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_19.getSize()
    var_6 = singly_linked_list_6.getHead()

def test_case_386():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    none_type_5 = singly_linked_list_4.add(none_type_3)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    int_0 = 0
    node_5 = module_0.Node(int_0)
    var_1 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_16.remove()
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_18.add(singly_linked_list_18)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_19.getHeadNode()
    node_8 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_20.getHeadNode()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_20.getSize()
    var_4 = singly_linked_list_19.remove()
    bool_5 = singly_linked_list_21.isEmpty()
    assert bool_5 is True

def test_case_387():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_388():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()

def test_case_389():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    node_5 = module_0.Node(none_type_0)

def test_case_390():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    var_3 = singly_linked_list_8.getHead()
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 0

def test_case_391():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    str_3 = singly_linked_list_0.__str__()
    assert str_3 == '[None]'

def test_case_392():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_2)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(singly_linked_list_6)
    str_3 = var_0.__str__()
    assert str_3 == 'None'

def test_case_393():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    node_3 = module_0.Node(node_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    str_2 = var_0.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_12.add(singly_linked_list_12)
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    none_type_1 = singly_linked_list_13.add(node_7)
    list_0 = singly_linked_list_4.toArray()

def test_case_394():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_1.add(none_type_3)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    list_1 = singly_linked_list_1.toArray()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    node_3 = module_0.Node(node_2)
    none_type_5 = singly_linked_list_0.add(singly_linked_list_1)

def test_case_395():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_6.isEmpty()
    assert bool_5 is True
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_6.isEmpty()
    assert bool_6 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_8.isEmpty()
    assert bool_7 is True
    node_7 = singly_linked_list_6.getHeadNode()

def test_case_396():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()

def test_case_397():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = None
    node_3 = module_0.Node(none_type_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_11.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_1 = singly_linked_list_9.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_14.isEmpty()
    assert bool_2 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_16.toArray()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_17.add(none_type_5)
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True

def test_case_398():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_3.getSize()

def test_case_399():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    list_1 = singly_linked_list_2.toArray()

def test_case_400():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    node_4 = module_0.Node(singly_linked_list_9)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_12.add(none_type_0)
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.remove()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    var_3 = singly_linked_list_13.getHead()
    list_2 = singly_linked_list_14.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_16.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_17.isEmpty()
    assert bool_5 is True
    bool_6 = singly_linked_list_17.isEmpty()
    assert bool_6 is True
    int_4 = 0
    node_7 = module_0.Node(int_4)
    var_5 = singly_linked_list_16.remove()
    int_5 = singly_linked_list_15.getSize()
    assert int_5 == 0

def test_case_401():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = None
    node_3 = module_0.Node(none_type_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.getHead()
    int_2 = singly_linked_list_8.getSize()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    int_4 = 0
    node_5 = module_0.Node(int_4)
    node_6 = singly_linked_list_0.getHeadNode()

def test_case_402():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()

def test_case_403():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(str_1)
    assert node_4.value == '[None]'

def test_case_404():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_4.remove()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    str_4 = var_4.__str__()
    assert str_4 == 'None'
    node_5 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None

def test_case_405():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.remove()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_12.__str__()
    assert str_1 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.getHead()
    int_4 = singly_linked_list_14.getSize()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_16.remove()
    str_2 = var_4.__str__()
    assert str_2 == 'None'
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_3 = var_4.__str__()
    assert str_3 == 'None'
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_18.getHead()
    str_4 = var_5.__str__()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'

def test_case_406():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_8.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.remove()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    node_6 = module_0.Node(node_5)
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(none_type_0)
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_7.getHead()

def test_case_407():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_1 = singly_linked_list_1.remove()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    node_5 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None

def test_case_408():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_8.remove()
    node_4 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    none_type_0 = None
    node_7 = module_0.Node(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    str_3 = var_3.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(str_3)
    none_type_2 = singly_linked_list_11.add(node_2)

def test_case_409():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    int_4 = singly_linked_list_6.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_7.getSize()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    int_6 = singly_linked_list_6.getSize()
    assert int_6 == 1

def test_case_410():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_2.getHeadNode()

def test_case_411():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    node_4 = module_0.Node(singly_linked_list_5)
    int_4 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_412():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_1 = singly_linked_list_1.getHead()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_4 = singly_linked_list_5.add(str_2)
    var_2 = singly_linked_list_5.getHead()
    assert var_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_5 = var_3.__str__()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_13.getHeadNode()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.getHead()

def test_case_413():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(var_0)
    assert node_2.value is None

def test_case_414():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_1.getHead()

def test_case_415():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_4.getHead()
    list_0 = singly_linked_list_4.toArray()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_2.getHead()

def test_case_416():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(str_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    str_1 = var_2.__str__()
    int_0 = singly_linked_list_3.getSize()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_417():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_3.toArray()
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1

def test_case_418():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_14.isEmpty()
    assert bool_2 is True
    node_6 = module_0.Node(singly_linked_list_12)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.getHead()
    node_7 = module_0.Node(var_2)
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_16.add(none_type_0)
    none_type_2 = singly_linked_list_16.add(none_type_0)
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is False
    bool_5 = False
    node_9 = module_0.Node(bool_5)
    none_type_3 = None
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_17.add(none_type_3)
    none_type_5 = singly_linked_list_17.add(none_type_3)
    bool_6 = singly_linked_list_17.isEmpty()
    assert bool_6 is False
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_19.__str__()
    assert str_5 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_20.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_20.remove()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_21.isEmpty()
    assert bool_7 is True
    bool_8 = singly_linked_list_21.isEmpty()
    assert bool_8 is True
    list_1 = singly_linked_list_11.toArray()

def test_case_419():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_7 = module_0.Node(complex_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    var_3 = singly_linked_list_12.getHead()
    list_0 = singly_linked_list_13.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_15.isEmpty()
    assert bool_2 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_17.toArray()
    var_4 = singly_linked_list_16.getHead()
    int_4 = singly_linked_list_13.getSize()

def test_case_420():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    node_4 = module_0.Node(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    var_2 = singly_linked_list_6.getHead()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()

def test_case_421():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    node_1 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_4.add(none_type_4)
    none_type_6 = singly_linked_list_4.add(none_type_4)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value is None
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'

def test_case_422():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_7.__str__()
    assert str_6 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    list_0 = singly_linked_list_4.toArray()

def test_case_423():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_1)
    var_1 = singly_linked_list_1.getHead()
    assert var_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_5 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_6.add(none_type_5)
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_7)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_7 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_10.add(none_type_7)
    none_type_9 = singly_linked_list_10.add(none_type_7)
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    none_type_10 = singly_linked_list_0.add(singly_linked_list_3)

def test_case_424():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_3.add(none_type_4)
    none_type_6 = singly_linked_list_3.add(none_type_4)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_7 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_8 = singly_linked_list_6.add(str_3)
    var_2 = singly_linked_list_6.getHead()
    assert var_2 == '[None]'
    list_1 = singly_linked_list_1.toArray()

def test_case_425():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'

def test_case_426():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False

def test_case_427():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    node_5 = singly_linked_list_7.getHeadNode()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'

def test_case_428():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    var_1 = singly_linked_list_1.getHead()

def test_case_429():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(str_3)
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_6 = singly_linked_list_8.add(str_4)
    var_2 = singly_linked_list_8.getHead()
    assert var_2 == '[None]'
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is False

def test_case_430():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_431():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_2 = singly_linked_list_12.add(str_3)
    var_2 = singly_linked_list_12.getHead()
    assert var_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(none_type_0)

def test_case_432():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_3.getHeadNode()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_6 = singly_linked_list_4.add(str_2)
    var_0 = singly_linked_list_4.getHead()
    assert var_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_3 = module_0.Node(int_3)
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_7.remove()
    bool_5 = singly_linked_list_7.isEmpty()
    assert bool_5 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_433():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()

def test_case_434():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    none_type_2 = singly_linked_list_4.add(node_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_4 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(str_4)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    int_3 = singly_linked_list_10.getSize()
    assert int_3 == 1
    node_6 = singly_linked_list_10.getHeadNode()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_15.add(singly_linked_list_15)
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    none_type_6 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_16.add(none_type_6)
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    list_0 = singly_linked_list_16.toArray()
    var_4 = singly_linked_list_16.getHead()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_17.getHeadNode()
    bool_7 = False
    node_10 = module_0.Node(bool_7)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_18.getHead()
    str_8 = var_5.__str__()
    int_5 = singly_linked_list_17.getSize()
    int_6 = singly_linked_list_1.getSize()

def test_case_435():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_3 = 0
    node_2 = module_0.Node(int_3)
    var_1 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_436():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_6.getSize()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    int_5 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_437():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)

def test_case_438():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_7.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    node_6 = module_0.Node(singly_linked_list_8)
    none_type_8 = singly_linked_list_10.add(none_type_5)

def test_case_439():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    list_0 = singly_linked_list_0.toArray()

def test_case_440():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None

def test_case_441():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_2)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'

def test_case_442():
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)

def test_case_443():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_1 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(none_type_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_444():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_0.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_4 = singly_linked_list_3.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_4.getSize()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    int_6 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    var_0 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_445():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'

def test_case_446():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_2)
    var_1 = singly_linked_list_4.getHead()
    assert var_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    var_2 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'

def test_case_447():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_2 = module_0.Node(var_0)
    node_3 = module_0.Node(bool_0)
    assert node_3.value is True

def test_case_448():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    node_4 = module_0.Node(var_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_10.remove()
    node_5 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    int_0 = 0
    node_6 = module_0.Node(int_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    int_1 = singly_linked_list_11.getSize()
    assert int_1 == 1
    node_7 = singly_linked_list_11.getHeadNode()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_12.getSize()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    node_9 = singly_linked_list_6.getHeadNode()

def test_case_449():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    str_2 = 'P{"'
    node_3 = module_0.Node(str_2)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_5 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    node_6 = module_0.Node(singly_linked_list_3)
    int_1 = 0
    node_7 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    int_4 = singly_linked_list_11.getSize()
    assert int_4 == 1
    node_10 = singly_linked_list_11.getHeadNode()
    node_11 = singly_linked_list_11.getHeadNode()

def test_case_450():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    none_type_4 = singly_linked_list_3.add(none_type_2)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    str_1 = var_2.__str__()
    int_3 = singly_linked_list_10.getSize()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    none_type_5 = None
    node_8 = module_0.Node(none_type_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    none_type_6 = None
    node_9 = module_0.Node(none_type_6)
    var_3 = singly_linked_list_3.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value is None
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'

def test_case_451():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_2.remove()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    node_3 = module_0.Node(node_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_5.getHead()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_5 = singly_linked_list_6.isEmpty()
    assert bool_5 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    none_type_5 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    var_4 = singly_linked_list_0.getHead()

def test_case_452():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_4.add(none_type_4)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_6 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_5.add(none_type_6)
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    list_0 = singly_linked_list_5.toArray()
    var_1 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_1.toArray()

def test_case_453():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_4 = singly_linked_list_5.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    var_6 = singly_linked_list_7.getHead()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_11.getHead()
    str_3 = var_7.__str__()
    int_4 = singly_linked_list_10.getSize()
    node_7 = singly_linked_list_6.getHeadNode()

def test_case_454():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    str_1 = 'P{"'
    node_3 = module_0.Node(str_1)
    none_type_6 = None
    node_4 = module_0.Node(none_type_6)
    var_1 = singly_linked_list_0.getHead()

def test_case_455():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_11.getHeadNode()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.getHead()
    str_5 = var_3.__str__()
    int_1 = singly_linked_list_11.getSize()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.remove()
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    bool_7 = False
    node_4 = module_0.Node(bool_7)
    none_type_2 = None
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_18.add(none_type_2)
    str_8 = singly_linked_list_18.__str__()
    assert str_8 == '[None]'
    str_9 = var_3.__str__()

def test_case_456():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    str_1 = var_0.__str__()
    int_0 = singly_linked_list_4.getSize()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.remove()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    var_2 = singly_linked_list_11.getHead()
    list_1 = singly_linked_list_12.toArray()
    str_6 = var_1.__str__()
    assert str_6 == 'None'

def test_case_457():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_2 = singly_linked_list_0.isEmpty()
    assert bool_2 is True

def test_case_458():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True

def test_case_459():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_1 = singly_linked_list_4.add(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    str_1 = var_3.__str__()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_460():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_1.getHeadNode()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    node_4 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    node_6 = singly_linked_list_5.getHeadNode()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(singly_linked_list_10)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_13.toArray()
    none_type_3 = None
    node_8 = module_0.Node(none_type_3)
    var_1 = singly_linked_list_8.remove()

def test_case_461():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'

def test_case_462():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_3)
    int_1 = singly_linked_list_5.getSize()
    var_0 = singly_linked_list_2.getHead()

def test_case_463():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.getHead()
    str_3 = var_4.__str__()
    bool_5 = singly_linked_list_2.isEmpty()
    assert bool_5 is True

def test_case_464():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_1 = module_0.Node(bool_0)
    assert node_1.value is True

def test_case_465():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_4.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    list_1 = singly_linked_list_2.toArray()

def test_case_466():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_9.getHeadNode()
    var_2 = singly_linked_list_3.getHead()

def test_case_467():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    node_1 = singly_linked_list_7.getHeadNode()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_9.add(none_type_6)
    none_type_8 = singly_linked_list_9.add(none_type_6)
    list_0 = singly_linked_list_9.toArray()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'

def test_case_468():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_3.remove()

def test_case_469():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_1.remove()

def test_case_470():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_1 = var_1.__str__()
    node_6 = singly_linked_list_2.getHeadNode()

def test_case_471():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_5.remove()
    node_3 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None

def test_case_472():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_6.add(node_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    list_1 = singly_linked_list_3.toArray()

def test_case_473():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(none_type_2)
    none_type_4 = singly_linked_list_10.add(none_type_2)
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.getHead()
    int_2 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_15.isEmpty()
    assert bool_5 is True
    node_5 = module_0.Node(singly_linked_list_13)
    int_4 = singly_linked_list_15.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_16.getSize()
    bool_6 = singly_linked_list_17.isEmpty()
    assert bool_6 is True
    var_2 = singly_linked_list_17.getHead()
    list_2 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_18.getHead()
    node_7 = module_0.Node(var_3)
    node_8 = singly_linked_list_2.getHeadNode()

def test_case_474():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_10.remove()
    node_2 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    var_4 = singly_linked_list_11.remove()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_14.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_6 = singly_linked_list_12.getHead()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_15.toArray()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_16.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_8 = singly_linked_list_17.remove()
    str_6 = var_8.__str__()
    assert str_6 == 'None'
    none_type_0 = singly_linked_list_16.add(node_5)
    list_1 = singly_linked_list_2.toArray()

def test_case_475():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_0)
    var_0 = singly_linked_list_2.getHead()
    assert var_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_4 = singly_linked_list_6.getHead()
    list_0 = singly_linked_list_7.toArray()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.getHead()
    str_3 = var_5.__str__()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    node_6 = module_0.Node(node_5)
    none_type_3 = singly_linked_list_5.add(singly_linked_list_4)

def test_case_476():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'

def test_case_477():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    var_1 = singly_linked_list_2.getHead()
    assert var_1 == '[None]'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_3)
    int_3 = singly_linked_list_5.getSize()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_478():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_10.remove()
    node_1 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_12.add(none_type_2)
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    list_0 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_15.isEmpty()
    assert bool_5 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_16.remove()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    none_type_4 = None
    node_9 = module_0.Node(none_type_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_6 = singly_linked_list_17.getSize()
    list_1 = singly_linked_list_0.toArray()

def test_case_479():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    bool_2 = singly_linked_list_0.isEmpty()
    assert bool_2 is False

def test_case_480():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_1.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_3.getHead()

def test_case_481():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    int_1 = singly_linked_list_2.getSize()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    int_4 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_17.getSize()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_18.getHead()
    list_0 = singly_linked_list_18.toArray()
    list_1 = singly_linked_list_15.toArray()

def test_case_482():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_1 = var_0.__str__()
    int_2 = singly_linked_list_3.getSize()

def test_case_483():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    var_2 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_484():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_1 = singly_linked_list_0.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'

def test_case_485():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_5)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    none_type_5 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    node_5 = module_0.Node(var_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_12.remove()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None, None]'

def test_case_486():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    var_2 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_10.toArray()
    none_type_0 = singly_linked_list_9.add(singly_linked_list_1)

def test_case_487():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_4 = singly_linked_list_8.add(str_2)
    var_0 = singly_linked_list_8.getHead()
    assert var_0 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    node_5 = singly_linked_list_10.getHeadNode()
    str_3 = singly_linked_list_8.__str__()

def test_case_488():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(singly_linked_list_7)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_6 = None
    node_6 = module_0.Node(none_type_6)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_13.__str__()
    assert str_1 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_14.add(singly_linked_list_14)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_15.__str__()
    assert str_2 == '[None]'
    none_type_8 = singly_linked_list_15.add(singly_linked_list_15)
    int_5 = singly_linked_list_15.getSize()
    assert int_5 == 1
    node_8 = singly_linked_list_15.getHeadNode()
    bool_5 = singly_linked_list_15.isEmpty()
    assert bool_5 is False
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_16.remove()
    str_3 = var_0.__str__()
    assert str_3 == 'None'
    int_6 = 0
    node_9 = module_0.Node(int_6)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_4 = var_0.__str__()
    assert str_4 == 'None'
    bool_6 = singly_linked_list_6.isEmpty()
    assert bool_6 is True

def test_case_489():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(none_type_3)
    none_type_5 = singly_linked_list_6.add(none_type_3)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    var_2 = singly_linked_list_8.getHead()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_4 = module_0.Node(bytes_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    none_type_6 = None
    node_5 = module_0.Node(none_type_6)
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    none_type_7 = singly_linked_list_13.add(singly_linked_list_13)
    int_2 = singly_linked_list_13.getSize()
    assert int_2 == 1
    node_7 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_14.remove()
    node_8 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_490():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_1)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_6.toArray()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_491():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'

def test_case_492():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_3.add(node_2)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_10.remove()
    node_4 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_12.getSize()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_13.getHead()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_4 = None
    node_9 = module_0.Node(none_type_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_493():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    int_4 = singly_linked_list_13.getSize()
    assert int_4 == 1
    node_5 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    list_2 = singly_linked_list_1.toArray()

def test_case_494():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_495():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_496():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_2.remove()
    node_1 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_0.isEmpty()
    assert bool_2 is False

def test_case_497():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_0 = var_1.__str__()
    int_3 = singly_linked_list_7.getSize()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_9.getSize()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_10.getHead()
    list_1 = singly_linked_list_10.toArray()
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_4 = var_3.__str__()
    singly_linked_list_14 = module_0.SinglyLinkedList()

def test_case_498():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(str_3)
    str_4 = 'P{"'
    node_1 = module_0.Node(str_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_8.__str__()
    assert str_6 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()

def test_case_499():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_4 = singly_linked_list_3.isEmpty()
    assert bool_4 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_4.isEmpty()
    assert bool_5 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_10.isEmpty()
    assert bool_6 is True
    node_6 = module_0.Node(singly_linked_list_8)
    int_3 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.remove()
    bool_7 = singly_linked_list_13.isEmpty()
    assert bool_7 is True
    var_2 = singly_linked_list_11.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_16.remove()
    node_8 = singly_linked_list_16.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None
    var_4 = singly_linked_list_13.remove()

def test_case_500():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_17.__str__()
    assert str_4 == '[None]'
    var_1 = singly_linked_list_17.remove()
    node_3 = singly_linked_list_17.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_18.__str__()
    assert str_5 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_18.isEmpty()
    assert bool_1 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_20.toArray()
    var_2 = singly_linked_list_19.getHead()
    node_4 = module_0.Node(str_5)
    assert node_4.value == '[None]'
    none_type_2 = singly_linked_list_4.add(list_3)

def test_case_501():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    node_4 = module_0.Node(list_0)
    assert node_4.value == [None]

def test_case_502():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_4.remove()
    node_1 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    str_3 = var_3.__str__()
    int_2 = singly_linked_list_5.getSize()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(none_type_4)
    none_type_6 = singly_linked_list_9.add(none_type_4)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    node_8 = singly_linked_list_10.getHeadNode()
    node_9 = module_0.Node(bool_1)

def test_case_503():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()

def test_case_504():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_2 = var_1.__str__()
    int_0 = singly_linked_list_4.getSize()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_7.toArray()
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    int_2 = singly_linked_list_11.getSize()
    assert int_2 == 1
    list_4 = singly_linked_list_1.toArray()

def test_case_505():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_506():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True

def test_case_507():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()

def test_case_508():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    node_7 = module_0.Node(var_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    var_4 = singly_linked_list_8.getHead()
    list_2 = singly_linked_list_9.toArray()
    var_5 = singly_linked_list_6.remove()

def test_case_509():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    node_5 = module_0.Node(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    none_type_0 = None
    node_8 = module_0.Node(none_type_0)

def test_case_510():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_4)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    int_4 = singly_linked_list_7.getSize()
    assert int_4 == 1
    node_5 = singly_linked_list_7.getHeadNode()
    str_1 = singly_linked_list_7.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    node_7 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_9.getSize()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_10.getHead()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_6 = singly_linked_list_11.getSize()
    bool_3 = False
    node_10 = module_0.Node(bool_3)
    int_7 = singly_linked_list_11.getSize()
    int_8 = 0
    node_11 = module_0.Node(int_8)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    int_9 = singly_linked_list_13.getSize()
    assert int_9 == 1
    node_12 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_13 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_10 = singly_linked_list_14.getSize()
    bool_4 = False
    node_14 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_16.add(none_type_2)
    none_type_4 = singly_linked_list_16.add(none_type_2)
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is False
    list_2 = singly_linked_list_14.toArray()

def test_case_511():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    var_3 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_4 = singly_linked_list_11.remove()
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    none_type_6 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_12.add(none_type_6)
    none_type_8 = singly_linked_list_12.add(none_type_6)
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is False
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_14.getHead()
    node_6 = module_0.Node(var_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_15.toArray()
    none_type_9 = None
    node_7 = module_0.Node(none_type_9)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_18.isEmpty()
    assert bool_7 is True
    node_9 = module_0.Node(singly_linked_list_16)
    node_10 = module_0.Node(singly_linked_list_2)

def test_case_512():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    list_0 = singly_linked_list_1.toArray()

def test_case_513():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    int_2 = singly_linked_list_7.getSize()
    node_4 = module_0.Node(var_1)
    assert node_4.value is None

def test_case_514():
    int_0 = -1870
    node_0 = module_0.Node(int_0)

def test_case_515():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_0 = singly_linked_list_3.getHead()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    bool_4 = False
    node_2 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_4 = module_0.Node(bytes_0)
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    str_2 = var_2.__str__()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    node_7 = module_0.Node(singly_linked_list_4)

def test_case_516():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_6.getSize()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    none_type_3 = singly_linked_list_8.add(none_type_1)
    bool_6 = singly_linked_list_8.isEmpty()
    assert bool_6 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    int_4 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_11.__str__()
    assert str_0 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_11.isEmpty()
    assert bool_7 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    var_2 = singly_linked_list_12.getHead()
    node_6 = module_0.Node(str_0)
    assert node_6.value == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    none_type_4 = None
    node_7 = module_0.Node(none_type_4)
    bool_8 = singly_linked_list_14.isEmpty()
    assert bool_8 is True
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_9 = singly_linked_list_16.isEmpty()
    assert bool_9 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_17.__str__()
    assert str_1 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_18.getHeadNode()
    str_2 = singly_linked_list_16.__str__()
    assert str_2 == '[None]'
    bool_10 = False
    node_10 = module_0.Node(bool_10)
    none_type_5 = None
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_19.add(none_type_5)
    str_3 = singly_linked_list_19.__str__()
    assert str_3 == '[None]'
    list_4 = singly_linked_list_19.toArray()
    bool_11 = False
    node_11 = module_0.Node(bool_11)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_20.getHead()
    str_4 = var_3.__str__()
    none_type_7 = singly_linked_list_2.add(node_1)

def test_case_517():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(singly_linked_list_5)
    node_3 = module_0.Node(none_type_3)

def test_case_518():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    none_type_1 = singly_linked_list_5.add(node_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.remove()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_13.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_17.add(singly_linked_list_17)
    list_0 = singly_linked_list_10.toArray()

def test_case_519():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_3.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_5 = singly_linked_list_6.isEmpty()
    assert bool_5 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_6 = singly_linked_list_10.isEmpty()
    assert bool_6 is True
    node_4 = singly_linked_list_3.getHeadNode()

def test_case_520():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    complex_0 = 1389 + 116.582j
    node_6 = module_0.Node(complex_0)
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    list_3 = singly_linked_list_8.toArray()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    none_type_3 = singly_linked_list_9.add(node_8)
    node_9 = singly_linked_list_9.getHeadNode()

def test_case_521():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_12.isEmpty()
    assert bool_7 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    bool_8 = False
    node_7 = module_0.Node(bool_8)
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    var_3 = singly_linked_list_10.getHead()

def test_case_522():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    var_3 = singly_linked_list_5.getHead()

def test_case_523():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'

def test_case_524():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()

def test_case_525():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    node_4 = module_0.Node(var_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    node_5 = module_0.Node(var_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    int_1 = 0
    node_6 = module_0.Node(int_1)
    var_3 = singly_linked_list_8.getHead()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    str_2 = var_4.__str__()
    assert str_2 == 'None'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_16.remove()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    var_6 = singly_linked_list_14.getHead()
    int_4 = 0
    node_9 = module_0.Node(int_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_526():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_1 = singly_linked_list_3.getHead()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    bool_1 = singly_linked_list_14.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_12.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_15.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_5 = singly_linked_list_15.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_6 = 0
    node_6 = module_0.Node(int_6)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_18.isEmpty()
    assert bool_3 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_20.__str__()
    assert str_5 == '[None]'
    singly_linked_list_21 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_20.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_21.remove()

def test_case_527():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None

def test_case_528():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    node_2 = singly_linked_list_0.getHeadNode()

def test_case_529():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_2 = singly_linked_list_7.add(str_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    int_2 = singly_linked_list_9.getSize()

def test_case_530():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    node_1 = module_0.Node(bool_1)
    assert node_1.value is False

def test_case_531():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()

def test_case_532():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_6.remove()
    node_2 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    str_6 = var_3.__str__()
    assert str_6 == 'None'
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = var_3.__str__()
    assert str_7 == 'None'
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    int_4 = singly_linked_list_14.getSize()
    assert int_4 == 1
    node_8 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_15.__str__()
    assert str_9 == '[None]'
    none_type_4 = singly_linked_list_15.add(singly_linked_list_15)
    singly_linked_list_16 = module_0.SinglyLinkedList()

def test_case_533():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    int_0 = singly_linked_list_6.getSize()
    assert int_0 == 1
    int_1 = singly_linked_list_1.getSize()

def test_case_534():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    none_type_2 = singly_linked_list_8.add(none_type_0)
    list_0 = singly_linked_list_8.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    str_2 = var_2.__str__()
    int_2 = -1870
    node_4 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_535():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    int_0 = singly_linked_list_2.getSize()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_0.getHead()

def test_case_536():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    none_type_0 = singly_linked_list_4.add(node_2)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    node_6 = module_0.Node(var_3)
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_537():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_6 = module_0.Node(int_2)
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_5 = singly_linked_list_10.getHead()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    var_6 = singly_linked_list_1.getHead()

def test_case_538():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    node_2 = module_0.Node(var_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(none_type_2)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    none_type_6 = singly_linked_list_12.add(none_type_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_13.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    var_4 = singly_linked_list_14.getHead()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_18.getSize()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_19.add(singly_linked_list_17)
    list_4 = singly_linked_list_11.toArray()

def test_case_539():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_2 = var_1.__str__()
    int_0 = singly_linked_list_4.getSize()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    node_2 = singly_linked_list_5.getHeadNode()

def test_case_540():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(none_type_2)
    var_1 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_13.add(singly_linked_list_11)
    bool_3 = False
    node_1 = module_0.Node(bool_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_14.toArray()
    list_4 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.getHead()
    node_2 = module_0.Node(str_3)
    assert node_2.value == 'None'

def test_case_541():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_3.toArray()

def test_case_542():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'

def test_case_543():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_9.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_4 = singly_linked_list_9.getSize()
    assert int_4 == 1
    node_7 = singly_linked_list_9.getHeadNode()
    var_0 = singly_linked_list_0.remove()

def test_case_544():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = -1870
    node_1 = module_0.Node(int_2)
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_4 = singly_linked_list_4.getSize()
    assert int_4 == 1
    node_3 = singly_linked_list_4.getHeadNode()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is False
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    var_2 = singly_linked_list_8.getHead()
    node_5 = module_0.Node(str_2)
    assert node_5.value == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    var_3 = singly_linked_list_11.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_13.getSize()
    bool_6 = singly_linked_list_14.isEmpty()
    assert bool_6 is True
    var_4 = singly_linked_list_14.getHead()
    list_3 = singly_linked_list_14.toArray()
    int_6 = 0
    node_7 = module_0.Node(int_6)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_15.isEmpty()
    assert bool_7 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_17.getHeadNode()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    var_5 = singly_linked_list_5.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert var_5.value is None
    assert f'{type(var_5.next).__module__}.{type(var_5.next).__qualname__}' == 'linkedList3.Node'

def test_case_545():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_1 = var_2.__str__()
    int_2 = singly_linked_list_4.getSize()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_7 = module_0.Node(complex_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_8.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_8.remove()
    bool_6 = singly_linked_list_8.isEmpty()
    assert bool_6 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_9.__str__()
    assert str_7 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_9.isEmpty()
    assert bool_7 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    var_4 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    var_5 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()

def test_case_546():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_2)
    var_1 = singly_linked_list_5.getHead()
    assert var_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    none_type_4 = singly_linked_list_6.add(none_type_2)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    int_1 = singly_linked_list_8.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_8.getHeadNode()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    none_type_6 = singly_linked_list_1.add(singly_linked_list_9)

def test_case_547():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_2 = singly_linked_list_0.isEmpty()
    assert bool_2 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_4.isEmpty()
    assert bool_5 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    int_4 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_12.add(singly_linked_list_12)
    int_6 = singly_linked_list_12.getSize()
    assert int_6 == 1
    node_8 = singly_linked_list_12.getHeadNode()
    bool_7 = singly_linked_list_12.isEmpty()
    assert bool_7 is False
    bool_8 = singly_linked_list_12.isEmpty()
    assert bool_8 is False

def test_case_548():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    list_0 = singly_linked_list_10.toArray()
    var_3 = singly_linked_list_10.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_12.add(singly_linked_list_12)
    int_2 = singly_linked_list_12.getSize()
    assert int_2 == 1
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.getHead()
    list_1 = singly_linked_list_4.toArray()

def test_case_549():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_2 = singly_linked_list_2.getSize()

def test_case_550():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_1.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_551():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    none_type_4 = None
    node_6 = module_0.Node(none_type_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_11.add(singly_linked_list_9)
    var_2 = singly_linked_list_0.getHead()

def test_case_552():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_6 = singly_linked_list_6.add(str_2)
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    var_0 = singly_linked_list_10.remove()
    node_2 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_553():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_3.getHead()
    list_2 = singly_linked_list_3.toArray()
    str_0 = var_0.__str__()
    assert str_0 == 'None'

def test_case_554():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True

def test_case_555():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(str_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    var_2 = singly_linked_list_11.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is False

def test_case_556():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_2.getHeadNode()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_3.getSize()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    int_4 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(none_type_3)
    none_type_5 = singly_linked_list_6.add(none_type_3)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_8 = module_0.Node(singly_linked_list_3)

def test_case_557():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_4 = singly_linked_list_5.add(str_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    int_3 = singly_linked_list_6.getSize()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    none_type_5 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_7.add(none_type_5)
    none_type_7 = singly_linked_list_7.add(none_type_5)
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_2.isEmpty()
    assert bool_3 is False

def test_case_558():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_5.getHead()
    none_type_0 = singly_linked_list_3.add(int_2)

def test_case_559():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    list_2 = singly_linked_list_4.toArray()
    int_0 = singly_linked_list_2.getSize()

def test_case_560():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_3 = singly_linked_list_5.getHead()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_2 = singly_linked_list_9.add(str_1)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    node_5 = module_0.Node(node_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.getHead()
    int_3 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_18.getHeadNode()
    node_8 = singly_linked_list_18.getHeadNode()
    node_9 = singly_linked_list_13.getHeadNode()

def test_case_561():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 0

def test_case_562():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_4 = var_1.__str__()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    str_5 = var_2.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(str_5)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    var_4 = singly_linked_list_12.remove()
    node_6 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    str_9 = singly_linked_list_13.__str__()
    assert str_9 == '[None]'
    list_0 = singly_linked_list_0.toArray()

def test_case_563():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)

def test_case_564():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(none_type_2)
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_1)
    list_1 = singly_linked_list_1.toArray()

def test_case_565():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    node_2 = module_0.Node(singly_linked_list_3)
    int_1 = singly_linked_list_5.getSize()
    node_3 = module_0.Node(node_0)

def test_case_566():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    int_4 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    none_type_0 = None
    node_7 = module_0.Node(none_type_0)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_14.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_14.remove()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_15.__str__()
    assert str_2 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_18.__str__()
    assert str_3 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_18.isEmpty()
    assert bool_5 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()

def test_case_567():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()

def test_case_568():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(str_0)
    assert node_1.value == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()

def test_case_569():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_3 = singly_linked_list_5.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_11.add(none_type_1)
    none_type_3 = singly_linked_list_11.add(none_type_1)
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.remove()
    bool_5 = singly_linked_list_15.isEmpty()
    assert bool_5 is True
    var_5 = singly_linked_list_13.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_17.add(singly_linked_list_17)
    str_6 = var_2.__str__()
    assert str_6 == 'None'

def test_case_570():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is False
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    var_2 = singly_linked_list_7.getHead()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_5 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(none_type_3)
    none_type_5 = singly_linked_list_13.add(none_type_3)
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is False
    str_4 = 'P{"'
    node_7 = module_0.Node(str_4)
    int_6 = 0
    node_8 = module_0.Node(int_6)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = False
    node_9 = module_0.Node(bool_5)

def test_case_571():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    var_1 = singly_linked_list_12.remove()
    node_4 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    var_3 = singly_linked_list_5.remove()

def test_case_572():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(none_type_2)
    none_type_4 = singly_linked_list_8.add(none_type_2)
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_12.remove()
    node_6 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.getHead()
    str_4 = var_2.__str__()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_5 = singly_linked_list_14.add(node_8)
    node_9 = module_0.Node(singly_linked_list_2)

def test_case_573():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    bool_6 = singly_linked_list_11.isEmpty()
    assert bool_6 is True
    int_2 = 0
    node_5 = module_0.Node(int_2)
    var_2 = singly_linked_list_10.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    bool_7 = False
    node_7 = module_0.Node(bool_7)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    str_3 = var_3.__str__()
    int_3 = singly_linked_list_12.getSize()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    int_4 = -1870
    node_8 = module_0.Node(int_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    bool_8 = False
    node_9 = module_0.Node(bool_8)
    none_type_3 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(none_type_3)
    var_4 = singly_linked_list_14.getHead()
    list_1 = singly_linked_list_7.toArray()

def test_case_574():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    none_type_4 = None
    node_1 = module_0.Node(none_type_4)
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'

def test_case_575():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 0

def test_case_576():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_3 = singly_linked_list_5.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_1.add(none_type_3)

def test_case_577():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_0 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_16.getSize()

def test_case_578():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)

def test_case_579():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_10.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_11.remove()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    int_4 = 0
    node_3 = module_0.Node(int_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_12.isEmpty()
    assert bool_7 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_5 = 0
    node_4 = module_0.Node(int_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_8 = singly_linked_list_16.isEmpty()
    assert bool_8 is True
    node_5 = module_0.Node(singly_linked_list_14)
    int_6 = 0
    node_6 = module_0.Node(int_6)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_17.__str__()
    assert str_3 == '[None]'
    none_type_7 = singly_linked_list_17.add(singly_linked_list_17)
    int_7 = singly_linked_list_17.getSize()
    assert int_7 == 1
    node_7 = singly_linked_list_17.getHeadNode()
    str_4 = singly_linked_list_17.__str__()
    list_1 = singly_linked_list_14.toArray()

def test_case_580():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_4 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    var_5 = singly_linked_list_12.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_14.getSize()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_18.getHeadNode()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True

def test_case_581():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    node_1 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_2 = singly_linked_list_3.add(str_3)
    list_0 = singly_linked_list_3.toArray()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    str_5 = var_3.__str__()
    assert str_5 == 'None'

def test_case_582():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_583():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_2 = singly_linked_list_1.add(node_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'

def test_case_584():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    complex_0 = -1439.1 - 1826.7j
    node_3 = module_0.Node(complex_0)

def test_case_585():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    node_3 = singly_linked_list_4.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_1 = singly_linked_list_7.add(str_3)
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    node_5 = module_0.Node(node_0)

def test_case_586():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_1.toArray()

def test_case_587():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_3.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()

def test_case_588():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_2.remove()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_3)
    int_3 = singly_linked_list_5.getSize()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    node_6 = singly_linked_list_8.getHeadNode()
    node_7 = module_0.Node(singly_linked_list_4)

def test_case_589():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    int_2 = 0
    node_1 = module_0.Node(int_2)
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_5.getSize()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_6.getHead()
    list_1 = singly_linked_list_6.toArray()
    int_4 = 0
    node_4 = module_0.Node(int_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_6 = module_0.Node(complex_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.getHead()
    node_7 = module_0.Node(var_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)

def test_case_590():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    node_2 = module_0.Node(node_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_6.toArray()
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_5.remove()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    list_4 = singly_linked_list_7.toArray()
    var_3 = singly_linked_list_7.getHead()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.remove()
    str_2 = var_5.__str__()
    assert str_2 == 'None'
    none_type_6 = singly_linked_list_8.add(node_6)
    str_3 = var_4.__str__()
    assert str_3 == 'None'

def test_case_591():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    var_0 = singly_linked_list_1.getHead()

def test_case_592():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)

def test_case_593():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_4)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_594():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_3 = module_0.Node(complex_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_5 = singly_linked_list_4.add(str_4)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    node_4 = singly_linked_list_6.getHeadNode()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True

def test_case_595():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_6 = singly_linked_list_8.add(str_2)
    list_0 = singly_linked_list_5.toArray()

def test_case_596():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_9.remove()
    node_3 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_14.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_15.add(singly_linked_list_13)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_18.remove()
    bool_5 = singly_linked_list_18.isEmpty()
    assert bool_5 is True
    var_2 = singly_linked_list_16.remove()
    str_7 = singly_linked_list_3.__str__()
    assert str_7 == '[None]'

def test_case_597():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_4)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    none_type_3 = singly_linked_list_8.add(none_type_1)
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_12.getHead()
    str_3 = var_0.__str__()
    int_2 = singly_linked_list_11.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    var_1 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    bool_6 = singly_linked_list_14.isEmpty()
    assert bool_6 is True
    bool_7 = False
    node_7 = module_0.Node(bool_7)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.getHead()
    int_3 = singly_linked_list_16.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_17.getSize()
    bool_8 = singly_linked_list_18.isEmpty()
    assert bool_8 is True
    bool_9 = singly_linked_list_16.isEmpty()
    assert bool_9 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_19.toArray()
    none_type_6 = None
    node_9 = module_0.Node(none_type_6)
    var_4 = singly_linked_list_16.getHead()

def test_case_598():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_0 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_12.isEmpty()
    assert bool_1 is True
    node_4 = module_0.Node(singly_linked_list_10)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.getHead()
    node_5 = module_0.Node(var_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_599():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = -1870
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    node_2 = module_0.Node(var_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_1.isEmpty()
    assert bool_4 is True

def test_case_600():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_3 = module_0.Node(singly_linked_list_0)
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_2 = singly_linked_list_3.add(str_0)
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_601():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    none_type_1 = None
    none_type_2 = singly_linked_list_3.add(none_type_1)

def test_case_602():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_4 = singly_linked_list_6.add(str_1)
    list_2 = singly_linked_list_6.toArray()
    str_2 = singly_linked_list_0.__str__()
    assert str_2 == '[None]'

def test_case_603():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_604():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    str_1 = var_2.__str__()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_9.remove()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1

def test_case_605():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    str_2 = singly_linked_list_0.__str__()
    assert str_2 == '[None]'

def test_case_606():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_1.add(node_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_4.remove()

def test_case_607():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    list_1 = singly_linked_list_1.toArray()
    node_1 = module_0.Node(str_0)
    assert node_1.value == '[None]'

def test_case_608():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    node_3 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    var_1 = singly_linked_list_2.getHead()

def test_case_609():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_0 = var_1.__str__()
    int_1 = singly_linked_list_1.getSize()
    list_0 = singly_linked_list_0.toArray()

def test_case_610():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_3.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_4.__str__()
    assert str_5 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_6)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_8.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_9.__str__()
    assert str_7 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_8 = 'P{"'
    node_3 = module_0.Node(str_8)
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_13.isEmpty()
    assert bool_1 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_14.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_16.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_17.__str__()
    assert str_9 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_17.isEmpty()
    assert bool_2 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_19.toArray()
    var_3 = singly_linked_list_18.getHead()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    str_10 = singly_linked_list_21.__str__()
    assert str_10 == '[None]'
    singly_linked_list_22 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_22.add(singly_linked_list_22)
    singly_linked_list_23 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_23.getHeadNode()
    str_11 = singly_linked_list_21.__str__()
    assert str_11 == '[None]'
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True

def test_case_611():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_0 = var_0.__str__()
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(bool_2)

def test_case_612():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_1.add(singly_linked_list_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_9.remove()
    node_1 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_6 = singly_linked_list_13.add(singly_linked_list_13)
    int_2 = singly_linked_list_13.getSize()
    assert int_2 == 1
    node_5 = module_0.Node(singly_linked_list_1)

def test_case_613():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_6.getHead()
    list_1 = singly_linked_list_6.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    str_5 = singly_linked_list_3.__str__()
    assert str_5 == '[None]'

def test_case_614():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_1.add(node_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_3 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_4.toArray()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'

def test_case_615():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    node_4 = module_0.Node(str_2)
    assert node_4.value == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    str_6 = singly_linked_list_0.__str__()
    assert str_6 == '[None]'

def test_case_616():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    node_5 = singly_linked_list_2.getHeadNode()

def test_case_617():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_5 = singly_linked_list_5.add(str_3)
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_0.toArray()

def test_case_618():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    assert int_2 == 1

def test_case_619():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_1.add(node_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    node_2 = module_0.Node(singly_linked_list_3)
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_620():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(str_2)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_3 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_8)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    str_5 = var_3.__str__()
    assert str_5 == 'None'
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = var_3.__str__()
    assert str_6 == 'None'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_14.getHead()
    int_3 = singly_linked_list_14.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is True
    int_4 = 0
    node_4 = module_0.Node(int_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_15.isEmpty()
    assert bool_2 is True
    var_6 = singly_linked_list_0.remove()

def test_case_621():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_1 = module_0.Node(bytes_0)
    node_2 = module_0.Node(list_0)
    assert node_2.value == [None]

def test_case_622():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_3)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(none_type_3)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_5 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(none_type_5)
    none_type_7 = singly_linked_list_8.add(none_type_5)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'

def test_case_623():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    var_0 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_14.getSize()
    bool_2 = singly_linked_list_15.isEmpty()
    assert bool_2 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    none_type_5 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_17)
    none_type_6 = singly_linked_list_12.add(none_type_4)

def test_case_624():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_5.add(none_type_4)
    none_type_6 = singly_linked_list_5.add(none_type_4)
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_3 = var_1.__str__()
    assert str_3 == 'None'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    var_2 = singly_linked_list_9.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_16.toArray()
    list_1 = singly_linked_list_16.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_19.remove()
    bool_7 = singly_linked_list_19.isEmpty()
    assert bool_7 is True
    var_4 = singly_linked_list_12.remove()

def test_case_625():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    none_type_5 = singly_linked_list_2.add(none_type_3)
    bool_4 = singly_linked_list_2.isEmpty()
    assert bool_4 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_1.isEmpty()
    assert bool_5 is False

def test_case_626():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_3 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    int_1 = singly_linked_list_8.getSize()
    node_5 = singly_linked_list_3.getHeadNode()

def test_case_627():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_0 = singly_linked_list_7.remove()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    none_type_3 = singly_linked_list_0.add(node_1)

def test_case_628():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_5.remove()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    none_type_1 = singly_linked_list_0.add(str_4)

def test_case_629():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    int_0 = singly_linked_list_2.getSize()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_4.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_630():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'

def test_case_631():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)

def test_case_632():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    str_0 = 'P{"'
    node_1 = module_0.Node(str_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()

def test_case_633():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_4 = singly_linked_list_4.add(str_2)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_13.add(singly_linked_list_11)
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_8 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_14.add(none_type_8)
    none_type_10 = singly_linked_list_14.add(none_type_8)
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is False
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.getHead()

def test_case_634():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    node_2 = module_0.Node(node_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_1 = singly_linked_list_2.getHead()
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_6.getHead()
    list_3 = singly_linked_list_6.toArray()
    node_5 = module_0.Node(singly_linked_list_0)

def test_case_635():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(str_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_7.remove()
    node_2 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    str_6 = singly_linked_list_4.__str__()
    assert str_6 == '[None]'

def test_case_636():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()

def test_case_637():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    int_2 = singly_linked_list_7.getSize()
    str_2 = var_0.__str__()

def test_case_638():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_7)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    none_type_1 = None
    node_6 = module_0.Node(none_type_1)
    node_7 = module_0.Node(none_type_1)

def test_case_639():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_0)
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_640():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(singly_linked_list_10)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    node_4 = singly_linked_list_12.getHeadNode()
    int_1 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_16.toArray()
    node_5 = module_0.Node(node_1)

def test_case_641():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    var_3 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    node_7 = singly_linked_list_9.getHeadNode()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_1 = singly_linked_list_11.add(str_3)
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_13.getSize()
    bool_2 = singly_linked_list_14.isEmpty()
    assert bool_2 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_16.toArray()
    none_type_2 = None
    node_9 = module_0.Node(none_type_2)
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_17.getSize()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_18.getHead()
    list_4 = singly_linked_list_18.toArray()
    str_4 = var_3.__str__()
    assert str_4 == 'None'

def test_case_642():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    node_2 = module_0.Node(node_0)

def test_case_643():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_14.add(str_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_17.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_17.remove()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_18.isEmpty()
    assert bool_5 is True
    int_3 = 0
    node_3 = module_0.Node(int_3)
    var_3 = singly_linked_list_17.remove()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_19.__str__()
    assert str_6 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_21.remove()
    int_4 = 0
    node_4 = module_0.Node(int_4)
    var_5 = singly_linked_list_19.getHead()
    singly_linked_list_22 = module_0.SinglyLinkedList()

def test_case_644():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    node_2 = module_0.Node(var_2)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(none_type_2)
    none_type_4 = singly_linked_list_11.add(none_type_2)
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_12.add(singly_linked_list_15)
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'

def test_case_645():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    node_4 = singly_linked_list_7.getHeadNode()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    int_4 = 0
    node_7 = module_0.Node(int_4)
    none_type_5 = None
    node_8 = module_0.Node(none_type_5)
    node_9 = singly_linked_list_0.getHeadNode()

def test_case_646():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_8.remove()
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 0

def test_case_647():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_1)
    list_0 = singly_linked_list_5.toArray()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_9.remove()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    none_type_6 = singly_linked_list_10.add(none_type_4)
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    int_3 = 0
    node_8 = module_0.Node(int_3)
    none_type_7 = None
    node_9 = module_0.Node(none_type_7)
    str_5 = singly_linked_list_5.__str__()

def test_case_648():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_9)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    var_3 = singly_linked_list_5.getHead()

def test_case_649():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_650():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_651():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_2.remove()
    var_3 = singly_linked_list_0.remove()

def test_case_652():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    node_1 = singly_linked_list_1.getHeadNode()
    int_0 = -1870
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_3 = singly_linked_list_3.remove()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    list_0 = singly_linked_list_5.toArray()
    list_1 = []
    none_type_5 = singly_linked_list_5.add(list_1)
    var_4 = singly_linked_list_2.remove()

def test_case_653():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    node_2 = singly_linked_list_0.getHeadNode()

def test_case_654():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_2 = singly_linked_list_8.add(str_3)
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_11.add(none_type_3)
    var_0 = singly_linked_list_10.getHead()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_12.add(singly_linked_list_12)
    int_3 = singly_linked_list_12.getSize()
    assert int_3 == 1
    node_5 = singly_linked_list_12.getHeadNode()
    str_5 = singly_linked_list_12.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_14.add(none_type_6)
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    list_2 = singly_linked_list_14.toArray()
    var_1 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_21.getSize()
    list_3 = singly_linked_list_5.toArray()

def test_case_655():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    list_0 = singly_linked_list_4.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_4.add(list_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_9.getSize()
    var_2 = singly_linked_list_8.remove()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    node_7 = module_0.Node(node_6)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_11.remove()
    int_1 = 0
    node_8 = module_0.Node(int_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_9 = module_0.Node(node_2)

def test_case_656():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_9.remove()
    node_6 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_657():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    list_3 = singly_linked_list_10.toArray()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.remove()
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_14.remove()
    var_5 = singly_linked_list_12.getHead()

def test_case_658():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_8.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_5 = module_0.Node(bytes_0)
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_11.getHeadNode()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    none_type_6 = singly_linked_list_12.add(none_type_4)
    list_0 = singly_linked_list_12.toArray()
    list_1 = []
    none_type_7 = singly_linked_list_12.add(list_1)
    list_2 = singly_linked_list_2.toArray()

def test_case_659():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    node_5 = module_0.Node(singly_linked_list_6)
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'

def test_case_660():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_5.isEmpty()
    assert bool_5 is True
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_661():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    node_3 = module_0.Node(int_1)

def test_case_662():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    node_5 = module_0.Node(singly_linked_list_5)
    int_2 = singly_linked_list_7.getSize()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(none_type_2)
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    list_2 = singly_linked_list_8.toArray()
    dict_0 = {}
    none_type_4 = singly_linked_list_8.add(dict_0)

def test_case_663():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_2.getHead()
    list_2 = singly_linked_list_2.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_0 = var_1.__str__()
    int_2 = singly_linked_list_5.getSize()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    node_5 = singly_linked_list_8.getHeadNode()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_664():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()

def test_case_665():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    node_5 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(none_type_4)
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    var_1 = singly_linked_list_10.remove()
    node_7 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_7).__module__}.{type(node_7).__qualname__}' == 'linkedList3.Node'
    assert node_7.value is None
    assert node_7.next is None
    int_3 = singly_linked_list_9.getSize()
    assert int_3 == 1

def test_case_666():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_1 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'

def test_case_667():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_1.add(none_type_2)
    none_type_4 = singly_linked_list_1.add(none_type_2)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_7 = singly_linked_list_12.add(str_3)
    none_type_8 = singly_linked_list_1.add(none_type_6)

def test_case_668():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    int_2 = singly_linked_list_7.getSize()
    assert int_2 == 1
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_9.add(none_type_3)
    none_type_5 = singly_linked_list_9.add(none_type_3)
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_11.getHead()
    node_3 = module_0.Node(var_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    none_type_6 = None
    node_5 = module_0.Node(none_type_6)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    none_type_7 = None
    node_7 = module_0.Node(none_type_7)
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'

def test_case_669():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_3.remove()
    str_1 = var_3.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_2.add(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = var_3.__str__()
    assert str_3 == 'None'

def test_case_670():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = 'P{"'
    node_4 = module_0.Node(str_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_1 = singly_linked_list_11.add(str_4)
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_671():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    node_3 = singly_linked_list_7.getHeadNode()
    int_1 = singly_linked_list_7.getSize()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(none_type_4)
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_10.isEmpty()
    assert bool_6 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    node_5 = singly_linked_list_10.getHeadNode()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_12.add(singly_linked_list_12)
    int_3 = singly_linked_list_12.getSize()
    assert int_3 == 1
    node_7 = singly_linked_list_12.getHeadNode()
    bool_7 = singly_linked_list_12.isEmpty()
    assert bool_7 is False
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = var_2.__str__()
    assert str_6 == 'None'
    node_9 = module_0.Node(node_3)

def test_case_672():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'

def test_case_673():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_1.getHeadNode()
    int_0 = singly_linked_list_1.getSize()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    var_1 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()

def test_case_674():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.getHead()
    int_4 = singly_linked_list_9.getSize()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_12.getHeadNode()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    str_5 = 'P{"'
    node_9 = module_0.Node(str_5)
    bool_3 = False
    node_10 = module_0.Node(bool_3)
    var_1 = singly_linked_list_1.getHead()

def test_case_675():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = 0
    node_0 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is True
    node_1 = module_0.Node(singly_linked_list_13)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_17.__str__()
    assert str_7 == '[None]'
    none_type_4 = singly_linked_list_17.add(singly_linked_list_17)
    none_type_5 = singly_linked_list_17.add(str_7)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_18.__str__()
    assert str_8 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_20.remove()
    int_4 = 0
    node_2 = module_0.Node(int_4)
    var_3 = singly_linked_list_18.getHead()
    int_5 = singly_linked_list_12.getSize()

def test_case_676():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_4.getHead()
    list_2 = singly_linked_list_0.toArray()

def test_case_677():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    str_1 = var_2.__str__()
    int_1 = singly_linked_list_3.getSize()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_678():
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'

def test_case_679():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(singly_linked_list_7)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_3 = singly_linked_list_9.add(str_3)
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    none_type_4 = None
    node_0 = module_0.Node(none_type_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.getHead()
    str_4 = var_1.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(str_4)
    list_3 = singly_linked_list_12.toArray()

def test_case_680():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    node_2 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(str_1)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    int_4 = singly_linked_list_12.getSize()
    assert int_4 == 1
    node_8 = singly_linked_list_12.getHeadNode()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is False
    var_5 = singly_linked_list_5.getHead()

def test_case_681():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_1 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    str_4 = var_1.__str__()
    int_3 = singly_linked_list_8.getSize()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    list_1 = singly_linked_list_10.toArray()
    var_2 = singly_linked_list_10.getHead()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True

def test_case_682():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_5)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(none_type_2)
    none_type_4 = singly_linked_list_7.add(none_type_2)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_0 = singly_linked_list_9.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_13.getSize()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    int_3 = singly_linked_list_13.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = None
    node_5 = module_0.Node(none_type_5)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_16.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_16.remove()
    var_3 = singly_linked_list_14.getHead()

def test_case_683():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_1 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_1 = singly_linked_list_6.add(str_2)
    var_2 = singly_linked_list_6.getHead()
    assert var_2 == '[None]'
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_6 = module_0.Node(none_type_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_13.getSize()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    var_4 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_16.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_17.isEmpty()
    assert bool_6 is True
    node_9 = module_0.Node(singly_linked_list_15)
    int_6 = singly_linked_list_17.getSize()
    singly_linked_list_18 = module_0.SinglyLinkedList()

def test_case_684():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_0.remove()

def test_case_685():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_686():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    str_0 = var_0.__str__()
    assert str_0 == 'None'

def test_case_687():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(none_type_2)
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_13.toArray()
    var_2 = singly_linked_list_12.getHead()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    none_type_4 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_14.add(none_type_4)
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    list_4 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    none_type_6 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_7 = singly_linked_list_15.add(str_6)
    list_5 = singly_linked_list_15.toArray()
    str_7 = singly_linked_list_2.__str__()
    assert str_7 == '[None]'

def test_case_688():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_3)
    int_3 = singly_linked_list_5.getSize()
    int_4 = 0
    node_3 = module_0.Node(int_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_689():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_11.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_5 = var_0.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_14.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_15.add(singly_linked_list_15)
    int_3 = singly_linked_list_15.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    none_type_3 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_16.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_8 = var_1.__str__()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_18.add(none_type_4)
    none_type_6 = singly_linked_list_18.add(none_type_4)
    list_0 = singly_linked_list_18.toArray()
    list_1 = []
    none_type_7 = singly_linked_list_18.add(list_1)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_19.__str__()
    assert str_9 == '[None]'
    var_2 = singly_linked_list_19.remove()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_20.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_20.isEmpty()
    assert bool_3 is True
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_21.getHeadNode()
    node_6 = singly_linked_list_21.getHeadNode()
    node_7 = singly_linked_list_20.getHeadNode()

def test_case_690():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    node_2 = module_0.Node(var_0)

def test_case_691():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    none_type_4 = singly_linked_list_6.add(none_type_2)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    bool_6 = False
    node_5 = module_0.Node(bool_6)
    none_type_5 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_10.add(none_type_5)
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_11.getSize()
    bool_7 = singly_linked_list_7.isEmpty()
    assert bool_7 is True

def test_case_692():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_3 = -1870
    node_5 = module_0.Node(int_3)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_3 = singly_linked_list_2.add(str_1)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    node_6 = module_0.Node(int_3)

def test_case_693():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_5.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_7.getHead()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    int_4 = singly_linked_list_0.getSize()
    assert int_4 == 1

def test_case_694():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    node_1 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_9)
    node_2 = module_0.Node(singly_linked_list_1)

def test_case_695():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_2 = singly_linked_list_5.getSize()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    int_4 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_13.getSize()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is True
    int_6 = 0
    node_5 = module_0.Node(int_6)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_15.isEmpty()
    assert bool_7 is True
    node_6 = module_0.Node(var_3)
    assert node_6.value is None

def test_case_696():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_2)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    var_0 = singly_linked_list_6.getHead()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True

def test_case_697():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    var_1 = singly_linked_list_7.getHead()
    node_1 = module_0.Node(str_4)
    assert node_1.value == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()
    str_7 = singly_linked_list_10.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_15.__str__()
    assert str_9 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_17.getHeadNode()
    str_10 = singly_linked_list_15.__str__()
    assert str_10 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_11 = singly_linked_list_18.__str__()
    assert str_11 == '[None]'
    var_3 = singly_linked_list_18.remove()
    singly_linked_list_19 = module_0.SinglyLinkedList()

def test_case_698():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_4.remove()
    node_1 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    var_1 = singly_linked_list_4.getHead()

def test_case_699():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_700():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(singly_linked_list_5)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    int_1 = singly_linked_list_10.getSize()
    assert int_1 == 1
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_14.getHead()
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_15.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_6 = singly_linked_list_15.add(str_3)
    list_2 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_17.__str__()
    assert str_4 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_18.add(singly_linked_list_18)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_19.getSize()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_20.add(singly_linked_list_18)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_21.getHeadNode()
    node_5 = singly_linked_list_21.getHeadNode()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_22.getHeadNode()
    singly_linked_list_23 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_22.getSize()
    var_3 = singly_linked_list_21.remove()
    singly_linked_list_24 = module_0.SinglyLinkedList()

def test_case_701():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    node_5 = module_0.Node(node_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    var_1 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_19.remove()
    int_1 = 0
    node_6 = module_0.Node(int_1)
    var_3 = singly_linked_list_17.getHead()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_20.add(none_type_4)
    none_type_6 = singly_linked_list_20.add(none_type_4)
    bool_3 = singly_linked_list_20.isEmpty()
    assert bool_3 is False
    int_2 = singly_linked_list_3.getSize()

def test_case_702():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'

def test_case_703():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_0)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_0 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()

def test_case_704():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    list_2 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_2 = singly_linked_list_2.getHeadNode()
    int_0 = singly_linked_list_2.getSize()
    bool_3 = singly_linked_list_0.isEmpty()
    assert bool_3 is False

def test_case_705():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_4 = var_1.__str__()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_3 = singly_linked_list_9.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_11.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    str_6 = var_3.__str__()
    node_5 = module_0.Node(singly_linked_list_9)

def test_case_706():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(str_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    int_2 = 0
    node_1 = module_0.Node(int_2)
    none_type_5 = None
    node_2 = module_0.Node(none_type_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_3 = singly_linked_list_6.getHeadNode()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    str_5 = var_3.__str__()
    var_4 = singly_linked_list_0.getHead()

def test_case_707():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_1 = var_1.__str__()
    int_0 = -1870
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_5.remove()
    node_2 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_6.remove()
    node_3 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    int_2 = singly_linked_list_3.getSize()

def test_case_708():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    int_2 = singly_linked_list_4.getSize()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_8.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_9)
    str_2 = var_0.__str__()
    assert str_2 == 'None'

def test_case_709():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_1.add(var_1)

def test_case_710():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_9.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_1 = singly_linked_list_9.add(str_0)
    node_5 = singly_linked_list_3.getHeadNode()

def test_case_711():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    node_2 = singly_linked_list_2.getHeadNode()

def test_case_712():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True

def test_case_713():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_5.getHead()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    str_2 = var_0.__str__()
    assert str_2 == 'None'

def test_case_714():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    list_1 = singly_linked_list_2.toArray()

def test_case_715():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_716():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    node_1 = singly_linked_list_5.getHeadNode()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_1.isEmpty()
    assert bool_4 is True

def test_case_717():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    list_2 = singly_linked_list_3.toArray()

def test_case_718():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_2.getHeadNode()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    str_3 = 'P{"'
    node_4 = module_0.Node(str_3)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    list_0 = singly_linked_list_5.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_6 = var_2.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_9.__str__()
    assert str_7 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_10.__str__()
    assert str_8 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_10)
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None

def test_case_719():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    var_2 = singly_linked_list_1.remove()

def test_case_720():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_1)
    var_0 = singly_linked_list_1.getHead()
    assert var_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_3)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(none_type_3)
    none_type_5 = singly_linked_list_7.add(none_type_3)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    int_0 = singly_linked_list_4.getSize()

def test_case_721():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.getHead()
    str_3 = var_3.__str__()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_11.remove()
    node_6 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_14.getHeadNode()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_15.__str__()
    assert str_8 == '[None]'
    none_type_1 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_2 = singly_linked_list_15.add(str_8)
    list_1 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()

def test_case_722():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    none_type_5 = singly_linked_list_8.add(none_type_3)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_723():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    node_2 = singly_linked_list_4.getHeadNode()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_10)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_13.getSize()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    var_2 = singly_linked_list_15.remove()
    node_4 = singly_linked_list_15.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_18.getHeadNode()
    str_9 = singly_linked_list_16.__str__()
    assert str_9 == '[None]'
    var_3 = singly_linked_list_8.getHead()

def test_case_724():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(none_type_2)
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_5 = singly_linked_list_6.add(str_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_725():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_4.getHead()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_3 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.getHead()
    str_1 = var_4.__str__()
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(none_type_0)
    none_type_2 = singly_linked_list_11.add(none_type_0)
    list_2 = singly_linked_list_11.toArray()
    list_3 = []
    none_type_3 = singly_linked_list_11.add(list_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    int_4 = 0
    node_9 = module_0.Node(int_4)
    none_type_5 = None
    node_10 = module_0.Node(none_type_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_11 = module_0.Node(singly_linked_list_14)
    var_5 = singly_linked_list_16.getHead()

def test_case_726():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    var_0 = singly_linked_list_0.getHead()

def test_case_727():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    node_4 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()
    list_2 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_15.add(singly_linked_list_15)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_16.getHeadNode()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    int_3 = 0
    node_9 = module_0.Node(int_3)
    none_type_3 = None
    node_10 = module_0.Node(none_type_3)
    node_11 = singly_linked_list_8.getHeadNode()

def test_case_728():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_3 = singly_linked_list_7.add(str_3)
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    node_2 = module_0.Node(singly_linked_list_10)
    none_type_5 = singly_linked_list_11.add(var_1)

def test_case_729():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None

def test_case_730():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    node_7 = singly_linked_list_9.getHeadNode()
    var_2 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_13.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_731():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    var_4 = singly_linked_list_4.getHead()

def test_case_732():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = var_0.__str__()
    assert str_3 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_733():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_2 = module_0.Node(singly_linked_list_1)
    int_1 = singly_linked_list_3.getSize()
    node_3 = module_0.Node(node_1)

def test_case_734():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_2 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_3 = var_3.__str__()
    int_2 = singly_linked_list_4.getSize()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_4 = 0
    node_5 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    node_7 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_13.getSize()
    var_7 = singly_linked_list_12.remove()
    int_6 = 0
    node_9 = module_0.Node(int_6)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bytes_0 = b'\x87'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_17.add(bytes_0)

def test_case_735():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    node_2 = module_0.Node(singly_linked_list_4)
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()

def test_case_736():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_0)
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()

def test_case_737():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_4 = singly_linked_list_3.add(str_0)
    var_0 = singly_linked_list_3.getHead()
    assert var_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_4)

def test_case_738():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    node_2 = module_0.Node(node_1)
    list_1 = singly_linked_list_0.toArray()

def test_case_739():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(str_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None

def test_case_740():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_5.getSize()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    int_5 = singly_linked_list_7.getSize()
    assert int_5 == 1
    node_7 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_8.getHeadNode()
    node_9 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_6 = singly_linked_list_9.getSize()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_741():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    node_3 = singly_linked_list_8.getHeadNode()
    var_1 = singly_linked_list_7.getHead()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_12.getHead()
    list_0 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_742():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_3 = var_1.__str__()
    int_0 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_9.remove()
    node_3 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    float_0 = 90.0
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(float_0)

def test_case_743():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_1.getSize()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_13.add(none_type_0)
    var_2 = singly_linked_list_12.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_15.__str__()
    assert str_8 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_15)
    node_7 = singly_linked_list_15.getHeadNode()

def test_case_744():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    var_3 = singly_linked_list_5.getHead()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    int_1 = singly_linked_list_7.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_7.getHeadNode()
    str_4 = singly_linked_list_7.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    node_6 = module_0.Node(singly_linked_list_13)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    none_type_5 = singly_linked_list_16.add(singly_linked_list_16)
    int_5 = singly_linked_list_16.getSize()
    assert int_5 == 1
    node_8 = singly_linked_list_16.getHeadNode()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is False
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_19.remove()
    int_6 = 0
    node_9 = module_0.Node(int_6)
    var_6 = singly_linked_list_17.getHead()
    str_9 = singly_linked_list_17.__str__()
    assert str_9 == '[None]'

def test_case_745():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    var_2 = singly_linked_list_2.remove()

def test_case_746():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    none_type_3 = None
    node_0 = module_0.Node(none_type_3)
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_1 = singly_linked_list_9.remove()
    node_1 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_1)
    assert node_2.value is None
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_747():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    int_0 = -1870
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_6)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_0 = singly_linked_list_11.isEmpty()
    assert bool_0 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    str_4 = 'P{"'
    node_2 = module_0.Node(str_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_5.value).__module__}.{type(var_5.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_5.next is None
    str_6 = var_5.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_15.getSize()
    list_1 = singly_linked_list_10.toArray()

def test_case_748():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()

def test_case_749():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_0 = var_1.__str__()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_4 = singly_linked_list_4.add(str_1)
    list_2 = singly_linked_list_4.toArray()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_6.toArray()
    none_type_5 = None
    node_3 = module_0.Node(none_type_5)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_7.remove()
    list_5 = singly_linked_list_1.toArray()

def test_case_750():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_3 = singly_linked_list_5.add(str_2)
    var_2 = singly_linked_list_5.getHead()
    assert var_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    str_3 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(str_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.getHead()
    node_3 = module_0.Node(var_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()

def test_case_751():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    var_0 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_11.remove()
    bool_0 = singly_linked_list_11.isEmpty()
    assert bool_0 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    var_3 = singly_linked_list_12.getHead()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    none_type_2 = None
    node_6 = module_0.Node(none_type_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'

def test_case_752():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_1)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_5 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_7.add(none_type_5)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_9.toArray()
    none_type_7 = None
    node_6 = module_0.Node(none_type_7)
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_8.remove()
    var_4 = singly_linked_list_2.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert var_4.value == '[None]'
    assert f'{type(var_4.next).__module__}.{type(var_4.next).__qualname__}' == 'linkedList3.Node'

def test_case_753():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    none_type_1 = singly_linked_list_2.add(int_0)

def test_case_754():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_4.toArray()
    var_0 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(str_0)
    assert node_2.value == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    node_3 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    node_4 = module_0.Node(var_1)
    assert node_4.value is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    var_2 = singly_linked_list_6.remove()

def test_case_755():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_1 = module_0.Node(bytes_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_0 = 0
    node_6 = module_0.Node(int_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    str_5 = singly_linked_list_3.__str__()
    assert str_5 == '[None]'

def test_case_756():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    var_1 = singly_linked_list_0.getHead()

def test_case_757():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_5 = module_0.Node(int_2)
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_5 = singly_linked_list_9.add(str_2)
    list_2 = singly_linked_list_9.toArray()
    int_5 = 0
    node_9 = module_0.Node(int_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_11 = module_0.Node(complex_0)
    node_12 = singly_linked_list_7.getHeadNode()

def test_case_758():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_2 = singly_linked_list_2.add(none_type_0)

def test_case_759():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_2 = singly_linked_list_0.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_1.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_4 = singly_linked_list_1.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    none_type_5 = None
    node_6 = module_0.Node(none_type_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    node_8 = module_0.Node(singly_linked_list_10)
    none_type_6 = singly_linked_list_1.add(node_3)

def test_case_760():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    node_2 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None

def test_case_761():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    none_type_4 = singly_linked_list_3.add(none_type_2)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_1.add(int_0)

def test_case_762():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    int_1 = singly_linked_list_9.getSize()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True

def test_case_763():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'

def test_case_764():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_0)

def test_case_765():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    int_3 = singly_linked_list_4.getSize()
    assert int_3 == 1
    node_2 = singly_linked_list_4.getHeadNode()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is False
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_6.add(none_type_5)
    none_type_7 = singly_linked_list_6.add(none_type_5)
    list_0 = singly_linked_list_6.toArray()
    list_1 = []
    none_type_8 = singly_linked_list_6.add(list_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_9 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_5 = var_1.__str__()
    node_5 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    none_type_10 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_10.__str__()
    assert str_7 == '[None]'
    none_type_11 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_8 = var_2.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_766():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_1.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_7.remove()
    node_2 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True

def test_case_767():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    int_1 = singly_linked_list_3.getSize()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()

def test_case_768():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_1 = var_0.__str__()
    int_2 = singly_linked_list_1.getSize()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    int_3 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    var_4 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    var_5 = singly_linked_list_9.remove()
    node_5 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    var_6 = singly_linked_list_5.getHead()

def test_case_769():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_2.getHead()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True

def test_case_770():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    node_3 = singly_linked_list_7.getHeadNode()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_9.remove()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_4)

def test_case_771():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    list_0 = singly_linked_list_1.toArray()
    list_1 = singly_linked_list_1.toArray()

def test_case_772():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_4 = var_0.__str__()
    node_1 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    int_0 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_12.isEmpty()
    assert bool_1 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(none_type_3)
    str_8 = singly_linked_list_15.__str__()
    assert str_8 == '[None]'
    list_1 = singly_linked_list_15.toArray()
    none_type_5 = singly_linked_list_11.add(none_type_2)

def test_case_773():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_2 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()

def test_case_774():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_1)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    var_0 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_15.toArray()
    var_1 = singly_linked_list_14.getHead()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    node_6 = module_0.Node(singly_linked_list_16)
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'

def test_case_775():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_0.getHeadNode()
    node_3 = singly_linked_list_0.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    int_0 = 0
    node_5 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_6 = singly_linked_list_3.getHeadNode()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_4.remove()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.getHead()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'

def test_case_776():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    none_type_3 = singly_linked_list_9.add(none_type_1)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_777():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_778():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    int_0 = -1870
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_3 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.getHead()
    str_2 = var_4.__str__()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_5.value).__module__}.{type(var_5.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_5.next is None
    str_4 = var_5.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_11.getSize()
    node_6 = module_0.Node(str_4)

def test_case_779():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_1 = module_0.Node(bytes_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_2.remove()
    node_2 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    node_3 = module_0.Node(var_1)
    assert node_3.value is None
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_780():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)

def test_case_781():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_5.getHeadNode()
    str_4 = singly_linked_list_5.__str__()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    none_type_4 = None
    node_6 = module_0.Node(none_type_4)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    node_8 = module_0.Node(none_type_4)

def test_case_782():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_783():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_784():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_3.getHeadNode()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is False
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_785():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    node_1 = singly_linked_list_3.getHeadNode()

def test_case_786():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    node_0 = singly_linked_list_8.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_12.getHeadNode()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_14.getHead()
    str_6 = var_1.__str__()
    int_1 = singly_linked_list_13.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_16.toArray()
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_15.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_17.__str__()
    assert str_7 == '[None]'
    int_2 = 0
    node_6 = module_0.Node(int_2)
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_18.add(none_type_4)
    int_3 = singly_linked_list_8.getSize()

def test_case_787():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_6.getSize()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    none_type_2 = singly_linked_list_8.add(none_type_0)
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    bool_6 = False
    node_4 = module_0.Node(bool_6)
    none_type_3 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(none_type_3)
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_8.add(none_type_0)

def test_case_788():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    node_0 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True

def test_case_789():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(singly_linked_list_2)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    node_6 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_16.getSize()
    var_1 = singly_linked_list_15.remove()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()

def test_case_790():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    var_1 = singly_linked_list_2.getHead()
    int_1 = singly_linked_list_0.getSize()

def test_case_791():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_1.remove()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_1)
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    list_0 = [str_1, singly_linked_list_8]
    node_4 = module_0.Node(list_0)

def test_case_792():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    none_type_4 = singly_linked_list_0.add(none_type_3)

def test_case_793():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_0 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_14.getHead()
    str_5 = var_1.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_15.add(str_5)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_17.isEmpty()
    assert bool_3 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_18.__str__()
    assert str_6 == '[None]'
    node_3 = singly_linked_list_17.getHeadNode()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    node_5 = module_0.Node(node_4)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_19.getHead()
    node_6 = module_0.Node(singly_linked_list_12)

def test_case_794():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_7.remove()
    node_3 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    list_0 = singly_linked_list_6.toArray()

def test_case_795():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_1 = var_1.__str__()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    bool_4 = True
    node_3 = module_0.Node(bool_4)

def test_case_796():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()

def test_case_797():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_1 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    node_4 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_14.getSize()
    var_4 = singly_linked_list_13.remove()
    var_5 = singly_linked_list_14.getHead()

def test_case_798():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    str_3 = var_0.__str__()
    assert str_3 == 'None'

def test_case_799():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_4.remove()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    node_2 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None

def test_case_800():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_3.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(singly_linked_list_9)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.getHead()
    str_6 = var_1.__str__()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.getHead()
    str_7 = var_2.__str__()
    var_3 = singly_linked_list_9.getHead()

def test_case_801():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(singly_linked_list_6)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    var_2 = singly_linked_list_8.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_11.isEmpty()
    assert bool_0 is True
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_11.isEmpty()
    assert bool_1 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_13.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.getHead()
    str_5 = var_3.__str__()
    int_3 = singly_linked_list_13.getSize()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    node_4 = singly_linked_list_3.getHeadNode()

def test_case_802():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    none_type_4 = None
    node_5 = module_0.Node(none_type_4)
    int_3 = -1870
    node_6 = module_0.Node(int_3)
    node_7 = module_0.Node(none_type_3)

def test_case_803():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    var_0 = singly_linked_list_14.remove()
    node_1 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_16.isEmpty()
    assert bool_2 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    node_3 = singly_linked_list_16.getHeadNode()
    str_7 = var_0.__str__()
    assert str_7 == 'None'

def test_case_804():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    str_2 = var_0.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    var_2 = singly_linked_list_6.getHead()
    list_0 = singly_linked_list_7.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_14.add(singly_linked_list_14)
    int_3 = singly_linked_list_14.getSize()
    assert int_3 == 1
    node_7 = singly_linked_list_14.getHeadNode()
    str_6 = singly_linked_list_14.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_17.toArray()
    var_3 = singly_linked_list_16.getHead()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_8 = module_0.Node(none_type_1)

def test_case_805():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    str_2 = var_1.__str__()
    int_1 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_7 = module_0.Node(none_type_1)
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_15.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_15.add(singly_linked_list_15)
    int_4 = singly_linked_list_15.getSize()
    assert int_4 == 1
    node_9 = singly_linked_list_15.getHeadNode()
    str_4 = singly_linked_list_15.__str__()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_19.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_19.add(singly_linked_list_19)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_19.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_7 = var_2.__str__()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_21.getHeadNode()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_22.getHeadNode()
    node_12 = singly_linked_list_22.getHeadNode()
    var_3 = singly_linked_list_21.getHead()
    var_4 = singly_linked_list_0.getHead()

def test_case_806():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    node_3 = singly_linked_list_11.getHeadNode()
    var_1 = singly_linked_list_10.getHead()
    var_2 = singly_linked_list_6.remove()

def test_case_807():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()

def test_case_808():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_0)
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    none_type_4 = singly_linked_list_3.add(none_type_2)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_7.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = var_0.__str__()
    assert str_3 == 'None'

def test_case_809():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_17.getHeadNode()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    var_1 = singly_linked_list_17.remove()

def test_case_810():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_5.remove()
    none_type_5 = singly_linked_list_6.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    node_5 = module_0.Node(node_4)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()
    var_3 = singly_linked_list_13.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_18.isEmpty()
    assert bool_6 is True
    node_8 = module_0.Node(singly_linked_list_16)
    none_type_6 = singly_linked_list_12.add(singly_linked_list_5)

def test_case_811():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_1 = singly_linked_list_2.remove()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    node_4 = singly_linked_list_5.getHeadNode()
    int_3 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_9.getSize()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    bool_6 = False
    node_5 = module_0.Node(bool_6)
    none_type_2 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(none_type_2)
    none_type_4 = singly_linked_list_13.add(none_type_2)
    list_2 = singly_linked_list_13.toArray()
    list_3 = []
    none_type_5 = singly_linked_list_13.add(list_3)
    bool_7 = False
    node_6 = module_0.Node(bool_7)
    none_type_6 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_14.add(none_type_6)
    none_type_8 = singly_linked_list_14.add(none_type_6)
    list_4 = singly_linked_list_14.toArray()
    node_7 = module_0.Node(none_type_7)

def test_case_812():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    node_3 = singly_linked_list_11.getHeadNode()
    var_3 = singly_linked_list_10.getHead()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(none_type_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_13.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_5 = singly_linked_list_15.add(str_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    node_7 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_17.getSize()
    var_5 = singly_linked_list_16.remove()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_20.toArray()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_21 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_21.add(none_type_6)
    var_6 = singly_linked_list_20.getHead()
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    none_type_8 = singly_linked_list_15.add(list_2)

def test_case_813():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    node_2 = singly_linked_list_0.getHeadNode()

def test_case_814():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(none_type_2)
    var_2 = singly_linked_list_6.getHead()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'

def test_case_815():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_4 = var_0.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    str_5 = var_1.__str__()
    assert str_5 == 'None'
    list_0 = singly_linked_list_7.toArray()

def test_case_816():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_6.remove()
    node_1 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_2)
    assert node_2.value is None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_11.add(none_type_1)
    none_type_3 = singly_linked_list_11.add(none_type_1)
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_12.getHeadNode()
    int_1 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_14.getSize()
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    int_3 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.getHead()

def test_case_817():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(none_type_4)
    none_type_6 = singly_linked_list_6.add(none_type_4)
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_7.getHeadNode()
    node_9 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    var_0 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    bool_5 = False
    node_11 = module_0.Node(bool_5)
    node_12 = module_0.Node(node_11)
    bool_6 = False
    node_13 = module_0.Node(bool_6)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_14 = module_0.Node(singly_linked_list_12)

def test_case_818():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True

def test_case_819():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    node_4 = singly_linked_list_2.getHeadNode()
    var_0 = singly_linked_list_1.getHead()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_3 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_10.isEmpty()
    assert bool_0 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_13.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    int_4 = 0
    node_8 = module_0.Node(int_4)
    var_3 = singly_linked_list_12.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_14.getHeadNode()
    node_10 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_15.getSize()
    var_4 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_6 = 0
    node_12 = module_0.Node(int_6)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_19.isEmpty()
    assert bool_3 is True
    node_13 = module_0.Node(singly_linked_list_17)
    int_7 = singly_linked_list_19.getSize()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_14 = singly_linked_list_20.getHeadNode()
    bool_4 = False
    node_15 = module_0.Node(bool_4)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_21.getHead()
    str_6 = var_5.__str__()
    int_8 = singly_linked_list_20.getSize()
    str_7 = singly_linked_list_21.__str__()
    assert str_7 == '[None]'
    node_16 = module_0.Node(node_14)

def test_case_820():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_9.add(singly_linked_list_12)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_14.getHeadNode()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.getHead()
    str_5 = var_2.__str__()
    int_3 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_16.isEmpty()
    assert bool_1 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_18.toArray()
    var_3 = singly_linked_list_17.getHead()
    node_5 = module_0.Node(str_6)
    assert node_5.value == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_20.toArray()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_21.isEmpty()
    assert bool_2 is True
    node_7 = module_0.Node(singly_linked_list_19)
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_22 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_22.isEmpty()
    assert bool_3 is True
    singly_linked_list_23 = module_0.SinglyLinkedList()
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    none_type_7 = None
    singly_linked_list_24 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_24.add(none_type_7)
    none_type_9 = singly_linked_list_24.add(none_type_7)
    bool_5 = singly_linked_list_24.isEmpty()
    assert bool_5 is False
    singly_linked_list_25 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_25.toArray()
    node_10 = singly_linked_list_17.getHeadNode()

def test_case_821():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_11.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_9)
    int_1 = singly_linked_list_11.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    node_7 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    var_2 = singly_linked_list_12.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_16.isEmpty()
    assert bool_2 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_17.__str__()
    assert str_4 == '[None]'
    node_9 = singly_linked_list_16.getHeadNode()
    int_4 = singly_linked_list_16.getSize()
    int_5 = 0
    node_10 = module_0.Node(int_5)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_18.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_18.add(singly_linked_list_18)
    int_6 = singly_linked_list_18.getSize()
    assert int_6 == 1
    node_11 = singly_linked_list_18.getHeadNode()
    bool_3 = singly_linked_list_18.isEmpty()
    assert bool_3 is False
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_19.getHead()
    int_7 = singly_linked_list_19.getSize()
    int_8 = singly_linked_list_4.getSize()

def test_case_822():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_3 = singly_linked_list_3.add(str_2)
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    list_1 = singly_linked_list_0.toArray()

def test_case_823():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(str_0)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_0 = singly_linked_list_4.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    var_4 = singly_linked_list_6.getHead()
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_10.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_6.value).__module__}.{type(var_6.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_6.next is None
    str_3 = var_6.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_12.getSize()
    none_type_2 = singly_linked_list_12.add(none_type_1)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_8 = singly_linked_list_14.remove()
    str_4 = var_8.__str__()
    assert str_4 == 'None'
    none_type_3 = singly_linked_list_13.add(node_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_16.add(singly_linked_list_16)
    none_type_5 = singly_linked_list_5.add(var_4)

def test_case_824():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_6 = module_0.Node(complex_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_4 = var_3.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    none_type_2 = None
    node_9 = module_0.Node(none_type_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.getHead()
    node_10 = module_0.Node(var_4)
    bool_3 = False
    node_11 = module_0.Node(bool_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_12 = singly_linked_list_18.getHeadNode()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True

def test_case_825():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)

def test_case_826():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)

def test_case_827():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_3.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    var_2 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_15.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_8.remove()

def test_case_828():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    bool_3 = singly_linked_list_2.isEmpty()
    assert bool_3 is True

def test_case_829():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    list_0 = singly_linked_list_4.toArray()
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    node_6 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    int_2 = 0
    node_9 = module_0.Node(int_2)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True

def test_case_830():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()

def test_case_831():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_1 = singly_linked_list_6.getSize()
    assert int_1 == 1
    var_1 = singly_linked_list_6.getHead()
    dict_0 = {int_1: none_type_0, var_1: str_1}
    node_3 = module_0.Node(dict_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_3 = singly_linked_list_7.getHead()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    none_type_3 = singly_linked_list_10.add(none_type_1)
    var_4 = singly_linked_list_10.getHead()
    node_6 = singly_linked_list_5.getHeadNode()

def test_case_832():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.remove()
    str_3 = var_4.__str__()
    assert str_3 == 'None'
    none_type_0 = singly_linked_list_5.add(node_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_7.getHead()
    str_4 = var_5.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(str_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(singly_linked_list_12)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    var_6 = singly_linked_list_15.remove()
    str_8 = singly_linked_list_5.__str__()

def test_case_833():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_1 = 'P{"'
    node_0 = module_0.Node(str_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_2 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(str_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_4 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_4 = singly_linked_list_8.getHead()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()

def test_case_834():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)

def test_case_835():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_2.remove()
    node_1 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_2)
    assert node_2.value is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_5)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_2 = singly_linked_list_8.add(node_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    var_6 = singly_linked_list_10.remove()
    none_type_3 = singly_linked_list_11.add(singly_linked_list_10)
    str_7 = singly_linked_list_4.__str__()
    assert str_7 == '[None]'

def test_case_836():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)

def test_case_837():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    var_1 = singly_linked_list_1.getHead()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_838():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_2 = singly_linked_list_2.getHead()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    str_1 = var_4.__str__()
    assert str_1 == 'None'
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_1 = singly_linked_list_10.add(str_2)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(none_type_2)
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_13.add(none_type_5)
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    list_2 = singly_linked_list_13.toArray()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is False

def test_case_839():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_1 = singly_linked_list_3.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_4.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    list_3 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True

def test_case_840():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    node_3 = module_0.Node(singly_linked_list_2)

def test_case_841():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    none_type_3 = singly_linked_list_7.add(none_type_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 0

def test_case_842():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_6.remove()

def test_case_843():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(singly_linked_list_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_1 = singly_linked_list_8.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_2 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_14.add(none_type_2)
    none_type_4 = singly_linked_list_14.add(none_type_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.getHead()
    str_3 = var_3.__str__()
    int_4 = singly_linked_list_15.getSize()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_17.toArray()
    none_type_5 = None
    node_7 = module_0.Node(none_type_5)
    node_8 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None

def test_case_844():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    node_4 = singly_linked_list_6.getHeadNode()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_11.remove()
    node_5 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    list_2 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.getHead()
    int_3 = singly_linked_list_13.getSize()
    none_type_6 = singly_linked_list_0.add(singly_linked_list_12)

def test_case_845():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()

def test_case_846():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_8.getHeadNode()
    node_2 = singly_linked_list_8.getHeadNode()
    var_0 = singly_linked_list_7.getHead()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_9.getHeadNode()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'

def test_case_847():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    node_2 = singly_linked_list_1.getHeadNode()
    int_2 = singly_linked_list_1.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_3 = var_1.__str__()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    int_4 = 0
    node_6 = module_0.Node(int_4)
    var_3 = singly_linked_list_7.getHead()
    list_0 = singly_linked_list_8.toArray()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)
    none_type_5 = singly_linked_list_10.add(none_type_3)
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_13.isEmpty()
    assert bool_6 is True
    node_9 = module_0.Node(singly_linked_list_11)
    int_6 = singly_linked_list_13.getSize()
    bool_7 = False
    node_10 = module_0.Node(bool_7)
    none_type_6 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_14.add(none_type_6)
    none_type_8 = singly_linked_list_14.add(none_type_6)
    list_2 = singly_linked_list_14.toArray()

def test_case_848():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_11.add(singly_linked_list_14)
    var_2 = singly_linked_list_11.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert f'{type(var_2.next).__module__}.{type(var_2.next).__qualname__}' == 'linkedList3.Node'

def test_case_849():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    node_5 = singly_linked_list_5.getHeadNode()
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    node_7 = module_0.Node(node_1)

def test_case_850():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_1 = singly_linked_list_6.getHead()
    none_type_2 = singly_linked_list_7.add(var_1)

def test_case_851():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    str_1 = var_2.__str__()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.getHead()
    str_3 = var_4.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    none_type_1 = None
    node_7 = module_0.Node(none_type_1)
    int_3 = singly_linked_list_3.getSize()

def test_case_852():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'

def test_case_853():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_7.getSize()
    str_1 = 'P{"'
    node_3 = module_0.Node(str_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(str_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_5 = 0
    node_5 = module_0.Node(int_5)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_17.__str__()
    assert str_5 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_19.remove()
    int_6 = 0
    node_6 = module_0.Node(int_6)
    var_3 = singly_linked_list_17.getHead()
    int_7 = singly_linked_list_14.getSize()

def test_case_854():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()

def test_case_855():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_4.getHead()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_8.getHead()
    list_2 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_10.toArray()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.remove()
    none_type_2 = singly_linked_list_0.add(singly_linked_list_7)

def test_case_856():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_0)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_12.add(singly_linked_list_10)
    node_5 = module_0.Node(var_1)
    assert node_5.value is None

def test_case_857():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    var_3 = singly_linked_list_1.getHead()

def test_case_858():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_1 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_3.__str__()
    assert str_4 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    var_2 = singly_linked_list_7.getHead()
    str_6 = var_2.__str__()

def test_case_859():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_2 = singly_linked_list_1.getSize()
    list_0 = singly_linked_list_1.toArray()

def test_case_860():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    var_1 = singly_linked_list_2.getHead()

def test_case_861():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    node_5 = singly_linked_list_7.getHeadNode()

def test_case_862():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_6)
    var_1 = singly_linked_list_1.remove()

def test_case_863():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_5.remove()
    none_type_0 = singly_linked_list_6.add(singly_linked_list_5)
    var_3 = singly_linked_list_0.getHead()

def test_case_864():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_8.toArray()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'

def test_case_865():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_5)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(none_type_2)
    var_0 = singly_linked_list_7.getHead()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_4 = None
    node_5 = module_0.Node(none_type_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    none_type_6 = singly_linked_list_11.add(none_type_5)
    list_0 = singly_linked_list_3.toArray()

def test_case_866():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    int_2 = singly_linked_list_7.getSize()
    assert int_2 == 1
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    list_2 = singly_linked_list_8.toArray()
    var_3 = singly_linked_list_8.getHead()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    int_4 = singly_linked_list_9.getSize()
    assert int_4 == 1
    node_7 = singly_linked_list_9.getHeadNode()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_10.toArray()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_11.add(none_type_6)
    var_4 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_12.getHeadNode()
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.getHead()
    str_5 = var_5.__str__()
    int_5 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_2.getHead()

def test_case_867():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    var_0 = singly_linked_list_4.getHead()

def test_case_868():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_0.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_3 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_4.getSize()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    int_4 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    int_5 = 0
    node_6 = module_0.Node(int_5)
    var_3 = singly_linked_list_7.getHead()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_12.getHeadNode()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_12.add(none_type_0)
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(none_type_2)
    none_type_4 = singly_linked_list_13.add(none_type_2)
    list_1 = singly_linked_list_13.toArray()
    list_2 = []
    none_type_5 = singly_linked_list_13.add(list_2)
    int_6 = singly_linked_list_10.getSize()

def test_case_869():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()

def test_case_870():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_871():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()

def test_case_872():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_5)
    list_1 = singly_linked_list_2.toArray()

def test_case_873():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_2.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_7.getSize()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    str_1 = var_3.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(str_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.getHead()
    node_4 = module_0.Node(var_4)
    int_5 = 0
    node_5 = module_0.Node(int_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    int_6 = 0
    node_6 = module_0.Node(int_6)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_7 = singly_linked_list_16.getSize()
    node_8 = module_0.Node(var_3)

def test_case_874():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()

def test_case_875():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    int_3 = singly_linked_list_2.getSize()
    assert int_3 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_3.getSize()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    none_type_4 = None
    node_6 = module_0.Node(none_type_4)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(none_type_5)
    none_type_7 = singly_linked_list_8.add(none_type_5)
    var_1 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_876():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_5.remove()
    none_type_4 = singly_linked_list_6.add(singly_linked_list_5)
    none_type_5 = None
    node_1 = module_0.Node(none_type_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    node_2 = singly_linked_list_8.getHeadNode()
    int_1 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_877():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    node_0 = module_0.Node(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    var_4 = singly_linked_list_6.remove()
    node_2 = module_0.Node(singly_linked_list_4)

def test_case_878():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    node_1 = module_0.Node(singly_linked_list_8)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    list_3 = singly_linked_list_9.toArray()
    var_1 = singly_linked_list_9.getHead()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    node_4 = module_0.Node(node_3)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    int_1 = 0
    node_6 = module_0.Node(int_1)
    none_type_4 = None
    node_7 = module_0.Node(none_type_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_6 = singly_linked_list_10.add(str_4)
    list_4 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_7.toArray()

def test_case_879():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_4.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(str_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    var_2 = singly_linked_list_6.remove()

def test_case_880():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_881():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    node_1 = module_0.Node(node_0)

def test_case_882():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    str_1 = singly_linked_list_0.__str__()

def test_case_883():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    int_4 = singly_linked_list_7.getSize()
    assert int_4 == 1
    node_3 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_7.__str__()
    node_4 = singly_linked_list_7.getHeadNode()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_8.getSize()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    int_6 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    node_9 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_7 = singly_linked_list_11.getSize()
    var_1 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'

def test_case_884():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_9.__str__()
    assert str_0 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_11.getHeadNode()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_11.add(none_type_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_12.getHeadNode()
    bool_2 = False
    node_9 = module_0.Node(bool_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.getHead()
    str_2 = var_2.__str__()
    int_3 = singly_linked_list_12.getSize()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    node_10 = singly_linked_list_14.getHeadNode()
    int_4 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_16.getSize()
    var_3 = singly_linked_list_6.getHead()

def test_case_885():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_3 = singly_linked_list_7.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    int_4 = 0
    node_5 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_9.isEmpty()
    assert bool_6 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_13.isEmpty()
    assert bool_7 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_6.remove()

def test_case_886():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    node_2 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_3 = singly_linked_list_5.getHead()

def test_case_887():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    node_1 = module_0.Node(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_2.remove()
    str_3 = 'P{"'
    node_2 = module_0.Node(str_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_7.__str__()
    assert str_6 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_9)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    int_1 = singly_linked_list_11.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_11.getHeadNode()
    int_2 = singly_linked_list_0.getSize()
    assert int_2 == 0

def test_case_888():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()
    node_0 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    list_3 = singly_linked_list_1.toArray()

def test_case_889():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    node_5 = singly_linked_list_6.getHeadNode()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    var_0 = singly_linked_list_9.getHead()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_11.add(none_type_1)
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    list_2 = singly_linked_list_11.toArray()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    int_5 = singly_linked_list_14.getSize()
    assert int_5 == 1
    var_1 = singly_linked_list_14.getHead()
    dict_0 = {int_5: none_type_3, var_1: str_3}
    node_8 = module_0.Node(dict_0)
    node_9 = singly_linked_list_14.getHeadNode()
    none_type_4 = singly_linked_list_10.add(singly_linked_list_6)

def test_case_890():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_1 = module_0.Node(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    var_0 = singly_linked_list_5.getHead()
    dict_0 = {int_1: none_type_0, var_0: str_0}
    node_4 = module_0.Node(dict_0)
    str_1 = singly_linked_list_5.__str__()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    node_7 = module_0.Node(node_2)

def test_case_891():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    str_5 = 'P{"'
    node_4 = module_0.Node(str_5)
    int_3 = singly_linked_list_6.getSize()
    assert int_3 == 1

def test_case_892():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    bool_0 = singly_linked_list_10.isEmpty()
    assert bool_0 is True
    var_4 = singly_linked_list_10.getHead()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_11.isEmpty()
    assert bool_1 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    var_5 = singly_linked_list_12.getHead()
    node_6 = module_0.Node(str_3)
    assert node_6.value == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_14.remove()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_15.isEmpty()
    assert bool_2 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_17.isEmpty()
    assert bool_3 is True
    str_4 = singly_linked_list_17.__str__()
    assert str_4 == '[None]'
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_10 = module_0.Node(none_type_1)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_21.__str__()
    assert str_5 == '[None]'
    singly_linked_list_22 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_22.add(singly_linked_list_22)
    singly_linked_list_23 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_23.getHeadNode()
    str_6 = singly_linked_list_21.__str__()
    assert str_6 == '[None]'
    str_7 = singly_linked_list_2.__str__()
    assert str_7 == '[None]'

def test_case_893():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_2 = module_0.Node(var_1)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_894():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_6.add(int_0)

def test_case_895():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_2.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_1}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_3.add(str_2)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_5 = singly_linked_list_7.add(str_4)
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_896():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_2.remove()
    int_0 = singly_linked_list_3.getSize()

def test_case_897():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_5)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True

def test_case_898():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_2)
    int_1 = singly_linked_list_4.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_3 = singly_linked_list_6.add(str_1)
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_5 = singly_linked_list_9.add(str_2)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_4 = 0
    node_5 = module_0.Node(int_4)
    none_type_6 = None
    node_6 = module_0.Node(none_type_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    node_8 = module_0.Node(singly_linked_list_10)
    node_9 = module_0.Node(singly_linked_list_11)

def test_case_899():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_2.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_3.remove()
    node_3 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    str_5 = singly_linked_list_4.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_6.add(none_type_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_7.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_8.__str__()
    assert str_7 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_11.__str__()
    assert str_8 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_11.isEmpty()
    assert bool_0 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_13.toArray()
    var_2 = singly_linked_list_12.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_14.__str__()
    assert str_9 == '[None]'
    none_type_5 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_10 = singly_linked_list_15.__str__()
    assert str_10 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_14.add(singly_linked_list_17)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_20.toArray()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_21.isEmpty()
    assert bool_1 is True
    node_6 = module_0.Node(singly_linked_list_19)
    int_3 = singly_linked_list_21.getSize()
    node_7 = singly_linked_list_21.getHeadNode()

def test_case_900():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)

def test_case_901():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    node_0 = singly_linked_list_0.getHeadNode()
    assert node_0.value == '[None]'

def test_case_902():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_1.remove()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    none_type_5 = singly_linked_list_4.add(none_type_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_0 = var_1.__str__()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    var_2 = singly_linked_list_8.getHead()
    dict_0 = {int_2: none_type_6, var_2: str_2}
    node_6 = module_0.Node(dict_0)
    node_7 = singly_linked_list_8.getHeadNode()
    int_3 = singly_linked_list_6.getSize()

def test_case_903():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    var_3 = singly_linked_list_5.getHead()
    var_4 = singly_linked_list_2.remove()

def test_case_904():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    none_type_2 = None
    node_0 = module_0.Node(none_type_2)
    node_1 = module_0.Node(node_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_4 = singly_linked_list_6.add(str_4)
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_2 = singly_linked_list_10.getSize()
    str_6 = singly_linked_list_0.__str__()
    assert str_6 == '[None]'

def test_case_905():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(singly_linked_list_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    node_0 = singly_linked_list_6.getHeadNode()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_6)

def test_case_906():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_1.add(none_type_3)
    none_type_5 = singly_linked_list_1.add(none_type_3)
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_9.add(str_1)
    none_type_7 = singly_linked_list_2.add(list_1)

def test_case_907():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_1 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    list_2 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_6 = var_2.__str__()
    assert str_6 == 'None'

def test_case_908():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_5 = var_1.__str__()
    str_6 = var_1.__str__()

def test_case_909():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_1.getHeadNode()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_3)
    int_2 = singly_linked_list_5.getSize()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'

def test_case_910():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    node_5 = module_0.Node(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_8.remove()
    none_type_1 = singly_linked_list_9.add(singly_linked_list_8)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True

def test_case_911():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_4 = module_0.Node(var_1)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    int_4 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_0.__str__()
    assert str_2 == '[None]'

def test_case_912():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_3 = singly_linked_list_2.add(str_0)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    assert var_0 == '[None]'

def test_case_913():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_2.toArray()
    none_type_4 = None
    node_1 = module_0.Node(none_type_4)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_3 = module_0.Node(int_0)
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_5.getHeadNode()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_4 = var_0.__str__()
    node_6 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    complex_0 = 1389 + 116.582j
    node_9 = module_0.Node(complex_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'
    none_type_7 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_8 = singly_linked_list_11.add(str_7)
    list_4 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_914():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_0)
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    var_2 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_2 = var_3.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_5 = None
    node_2 = module_0.Node(none_type_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_6 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_7.add(none_type_6)
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    list_0 = singly_linked_list_7.toArray()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_8 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_8.add(none_type_8)
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_10 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    var_4 = singly_linked_list_9.getHead()
    dict_0 = {int_1: none_type_10, var_4: str_5}
    node_5 = module_0.Node(dict_0)
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    none_type_11 = singly_linked_list_10.add(singly_linked_list_10)
    int_3 = singly_linked_list_10.getSize()
    assert int_3 == 1
    node_7 = singly_linked_list_10.getHeadNode()
    str_7 = singly_linked_list_10.__str__()
    node_8 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_11.__str__()
    assert str_8 == '[None]'
    none_type_12 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_13 = singly_linked_list_11.add(str_8)
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    var_5 = singly_linked_list_11.getHead()
    assert var_5 == '[None]'
    str_9 = var_5.__str__()
    assert str_9 == '[None]'

def test_case_915():
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_0)

def test_case_916():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    str_2 = var_3.__str__()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    node_8 = module_0.Node(var_4)
    int_4 = 0
    node_9 = module_0.Node(int_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    int_5 = 0
    node_10 = module_0.Node(int_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = False
    node_11 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_16.add(none_type_2)
    str_3 = singly_linked_list_16.__str__()
    assert str_3 == '[None]'
    list_2 = singly_linked_list_16.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_17.getHead()
    node_12 = module_0.Node(var_5)
    singly_linked_list_18 = module_0.SinglyLinkedList()

def test_case_917():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()
    node_3 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_918():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    node_4 = module_0.Node(singly_linked_list_6)

def test_case_919():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    node_4 = module_0.Node(node_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    node_6 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_1 = singly_linked_list_7.add(str_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_9 = module_0.Node(bool_5)
    none_type_2 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_12.add(none_type_2)
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    list_0 = singly_linked_list_12.toArray()
    var_3 = singly_linked_list_12.getHead()
    int_3 = 0
    node_10 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    int_4 = singly_linked_list_13.getSize()
    assert int_4 == 1
    node_11 = singly_linked_list_13.getHeadNode()
    bool_6 = singly_linked_list_13.isEmpty()
    assert bool_6 is False
    bool_7 = singly_linked_list_9.isEmpty()
    assert bool_7 is True

def test_case_920():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    node_1 = module_0.Node(var_1)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    node_4 = module_0.Node(node_3)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_13.isEmpty()
    assert bool_6 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_15.toArray()
    var_2 = singly_linked_list_14.getHead()
    node_6 = module_0.Node(str_2)
    assert node_6.value == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_16.__str__()
    assert str_3 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_18.remove()
    bool_7 = singly_linked_list_18.isEmpty()
    assert bool_7 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_19.__str__()
    assert str_4 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_20.getHeadNode()
    bool_8 = False
    node_8 = module_0.Node(bool_8)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_21.getHead()
    str_5 = var_4.__str__()
    int_4 = singly_linked_list_20.getSize()
    singly_linked_list_22 = module_0.SinglyLinkedList()

def test_case_921():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    int_1 = -1870
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_3 = singly_linked_list_9.add(str_6)
    node_7 = singly_linked_list_9.getHeadNode()
    assert node_7.value == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(int_4)

def test_case_922():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_4 = singly_linked_list_7.add(str_4)
    var_1 = singly_linked_list_7.getHead()
    assert var_1 == '[None]'
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    node_5 = singly_linked_list_8.getHeadNode()
    str_6 = singly_linked_list_8.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    node_9 = singly_linked_list_13.getHeadNode()
    var_3 = singly_linked_list_12.getHead()
    list_2 = singly_linked_list_10.toArray()

def test_case_923():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_0 = singly_linked_list_3.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_3.add(list_1)
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[[], None, None]'

def test_case_924():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()

def test_case_925():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_1 = module_0.Node(singly_linked_list_0)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()
    node_3 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    node_4 = module_0.Node(var_0)
    assert node_4.value is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_3.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_6 = module_0.Node(var_1)
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_6.getHead()

def test_case_926():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(str_0)
    var_2 = singly_linked_list_4.getHead()

def test_case_927():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    none_type_1 = singly_linked_list_1.add(node_0)

def test_case_928():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    int_3 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'

def test_case_929():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    int_1 = singly_linked_list_5.getSize()

def test_case_930():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_3.isEmpty()
    assert bool_4 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    int_2 = -1870
    node_3 = module_0.Node(int_2)
    node_4 = module_0.Node(node_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    int_4 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_2 = singly_linked_list_11.add(str_4)
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    none_type_3 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(none_type_3)
    none_type_5 = singly_linked_list_13.add(none_type_3)
    bool_7 = singly_linked_list_13.isEmpty()
    assert bool_7 is False
    bool_8 = False
    node_8 = module_0.Node(bool_8)
    none_type_6 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_14.add(none_type_6)
    none_type_8 = singly_linked_list_14.add(none_type_6)
    var_2 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_15.getSize()
    bool_9 = singly_linked_list_16.isEmpty()
    assert bool_9 is True
    var_3 = singly_linked_list_16.getHead()
    list_1 = singly_linked_list_16.toArray()
    node_10 = singly_linked_list_14.getHeadNode()

def test_case_931():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()

def test_case_932():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    int_1 = singly_linked_list_10.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_10.getHeadNode()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is False
    str_6 = singly_linked_list_10.__str__()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_933():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_1 = singly_linked_list_3.getHead()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    var_3 = singly_linked_list_12.getHead()
    node_5 = module_0.Node(str_5)
    assert node_5.value == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_15.add(singly_linked_list_15)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    int_1 = 0
    node_7 = module_0.Node(int_1)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    none_type_6 = singly_linked_list_17.add(singly_linked_list_17)
    int_2 = singly_linked_list_17.getSize()
    assert int_2 == 1
    node_8 = singly_linked_list_17.getHeadNode()
    none_type_7 = singly_linked_list_6.add(var_0)

def test_case_934():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_0 = module_0.Node(var_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    str_3 = var_2.__str__()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_12.add(singly_linked_list_12)
    int_4 = singly_linked_list_12.getSize()
    assert int_4 == 1
    node_6 = singly_linked_list_12.getHeadNode()
    str_5 = singly_linked_list_12.__str__()
    node_7 = singly_linked_list_12.getHeadNode()
    var_3 = singly_linked_list_8.remove()

def test_case_935():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_2 = singly_linked_list_6.getSize()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    int_4 = 0
    node_4 = module_0.Node(int_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    int_5 = singly_linked_list_8.getSize()
    assert int_5 == 1
    node_5 = singly_linked_list_8.getHeadNode()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    none_type_3 = singly_linked_list_9.add(none_type_1)
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_5 = singly_linked_list_11.add(str_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    node_7 = singly_linked_list_12.getHeadNode()
    var_2 = singly_linked_list_0.remove()

def test_case_936():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_0)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(none_type_4)
    none_type_6 = singly_linked_list_6.add(none_type_4)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_7 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_8.add(none_type_7)
    var_1 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_3.toArray()

def test_case_937():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    int_1 = singly_linked_list_1.getSize()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    node_6 = module_0.Node(node_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_7.getHeadNode()
    node_9 = singly_linked_list_7.getHeadNode()
    var_3 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_4 = singly_linked_list_8.add(str_4)
    var_4 = singly_linked_list_8.getHead()
    assert var_4 == '[None]'
    var_5 = singly_linked_list_6.remove()

def test_case_938():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_1.add(singly_linked_list_4)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_5 = None
    node_2 = module_0.Node(none_type_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    str_5 = singly_linked_list_2.__str__()
    assert str_5 == '[None]'

def test_case_939():
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)

def test_case_940():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_1.add(none_type_2)
    none_type_4 = singly_linked_list_1.add(none_type_2)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    int_1 = -1870
    node_2 = module_0.Node(int_1)
    node_3 = module_0.Node(node_2)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_6.add(none_type_5)
    none_type_7 = singly_linked_list_6.add(none_type_5)
    int_2 = singly_linked_list_0.getSize()
    assert int_2 == 1

def test_case_941():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    list_0 = singly_linked_list_0.toArray()

def test_case_942():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    node_4 = module_0.Node(singly_linked_list_3)
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'

def test_case_943():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    int_3 = singly_linked_list_6.getSize()
    assert int_3 == 1
    var_1 = singly_linked_list_6.getHead()
    dict_0 = {int_3: none_type_2, var_1: str_0}
    node_4 = module_0.Node(dict_0)
    str_1 = singly_linked_list_6.__str__()
    bool_4 = singly_linked_list_1.isEmpty()
    assert bool_4 is True

def test_case_944():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_4 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_2.getSize()
    node_3 = singly_linked_list_2.getHeadNode()

def test_case_945():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_946():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    list_1 = singly_linked_list_3.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    node_6 = module_0.Node(singly_linked_list_5)
    int_3 = singly_linked_list_7.getSize()
    node_7 = module_0.Node(none_type_1)

def test_case_947():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_3 = singly_linked_list_2.add(node_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    node_5 = singly_linked_list_5.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_8.remove()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    node_6 = singly_linked_list_4.getHeadNode()

def test_case_948():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(none_type_2)
    none_type_4 = singly_linked_list_2.add(none_type_2)
    list_1 = singly_linked_list_2.toArray()
    var_1 = singly_linked_list_2.getHead()
    list_2 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_5.toArray()
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_7.toArray()
    node_2 = module_0.Node(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.getHead()
    int_0 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    int_2 = singly_linked_list_6.getSize()

def test_case_949():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    int_1 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_6)

def test_case_950():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(none_type_2)
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    var_2 = singly_linked_list_4.getHead()
    node_2 = module_0.Node(str_1)
    assert node_2.value == '[None]'
    bool_3 = singly_linked_list_2.isEmpty()
    assert bool_3 is False

def test_case_951():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(str_0)

def test_case_952():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_3.getSize()
    list_0 = singly_linked_list_3.toArray()

def test_case_953():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    var_2 = singly_linked_list_3.getHead()
    dict_0 = {int_1: none_type_0, var_2: str_1}
    node_1 = module_0.Node(dict_0)
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    node_3 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.getHead()
    node_4 = module_0.Node(var_4)
    int_2 = -1870
    node_5 = module_0.Node(int_2)
    node_6 = module_0.Node(node_5)
    int_3 = 0
    node_7 = module_0.Node(int_3)
    int_4 = singly_linked_list_5.getSize()

def test_case_954():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.remove()
    bool_0 = singly_linked_list_10.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_8.remove()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True

def test_case_955():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_2.isEmpty()
    assert bool_4 is True

def test_case_956():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    none_type_3 = None
    node_0 = module_0.Node(none_type_3)
    node_1 = module_0.Node(node_0)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 0

def test_case_957():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    node_6 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    none_type_6 = singly_linked_list_7.add(none_type_4)
    list_0 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_7.getHead()
    list_1 = singly_linked_list_7.toArray()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_10.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_7 = None
    node_10 = module_0.Node(none_type_7)
    bool_5 = False
    node_11 = module_0.Node(bool_5)
    none_type_8 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_11.add(none_type_8)
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_6.getHead()

def test_case_958():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.getHead()

def test_case_959():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()

def test_case_960():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_6.getHead()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    str_1 = var_3.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(str_1)
    int_2 = 719
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(int_2)
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    none_type_5 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_13.add(none_type_5)
    none_type_7 = singly_linked_list_13.add(none_type_5)
    list_2 = singly_linked_list_13.toArray()
    list_3 = []
    none_type_8 = singly_linked_list_13.add(list_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_15.__str__()
    assert str_2 == '[None]'
    none_type_9 = singly_linked_list_15.add(singly_linked_list_15)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_5.value).__module__}.{type(var_5.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_5.next is None
    str_3 = var_5.__str__()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_17.getSize()
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_18.toArray()
    none_type_10 = singly_linked_list_7.add(var_5)

def test_case_961():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    node_4 = module_0.Node(singly_linked_list_0)

def test_case_962():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = -1870
    node_1 = module_0.Node(int_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()

def test_case_963():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_2.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_5.toArray()
    none_type_4 = None
    node_3 = module_0.Node(none_type_4)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_4.remove()
    int_1 = -1870
    node_4 = module_0.Node(int_1)
    list_5 = singly_linked_list_3.toArray()

def test_case_964():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_4.remove()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_2 = var_2.__str__()
    int_1 = singly_linked_list_7.getSize()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    none_type_2 = singly_linked_list_9.add(none_type_0)
    list_1 = singly_linked_list_9.toArray()
    var_3 = singly_linked_list_9.getHead()
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.remove()
    str_7 = var_4.__str__()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_16.getSize()
    none_type_5 = singly_linked_list_16.add(none_type_4)
    node_7 = module_0.Node(singly_linked_list_9)

def test_case_965():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_4 = module_0.Node(var_1)
    int_0 = 0
    node_5 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_7.getHead()
    list_3 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_10.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_11.__str__()
    assert str_1 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_8 = module_0.Node(singly_linked_list_11)
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(none_type_2)
    str_2 = singly_linked_list_15.__str__()
    assert str_2 == '[None]'
    list_4 = singly_linked_list_15.toArray()
    int_3 = 0
    node_10 = module_0.Node(int_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(singly_linked_list_10)

def test_case_966():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = singly_linked_list_3.getSize()
    assert int_0 == 1
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(str_1)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True

def test_case_967():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    node_5 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_0 = 0
    node_6 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_8 = module_0.Node(singly_linked_list_12)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_18.getHeadNode()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    bool_5 = False
    node_10 = module_0.Node(bool_5)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_19.getHead()
    str_8 = var_3.__str__()
    var_4 = singly_linked_list_0.getHead()

def test_case_968():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    node_0 = singly_linked_list_0.getHeadNode()
    assert node_0.value == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    node_4 = singly_linked_list_8.getHeadNode()
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    node_5 = module_0.Node(var_3)
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()

def test_case_969():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    node_1 = singly_linked_list_6.getHeadNode()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    var_0 = singly_linked_list_9.getHead()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(none_type_0)
    none_type_2 = singly_linked_list_11.add(none_type_0)
    var_1 = singly_linked_list_11.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.remove()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.remove()
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_17.remove()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_18.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_18.getSize()
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    int_3 = singly_linked_list_18.getSize()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_21.getHeadNode()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_21.getSize()
    bool_6 = singly_linked_list_22.isEmpty()
    assert bool_6 is True
    var_5 = singly_linked_list_22.getHead()
    list_1 = singly_linked_list_22.toArray()
    var_6 = singly_linked_list_11.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert var_6.value is None
    assert f'{type(var_6.next).__module__}.{type(var_6.next).__qualname__}' == 'linkedList3.Node'

def test_case_970():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    str_4 = var_2.__str__()
    assert str_4 == 'None'
    none_type_2 = singly_linked_list_6.add(node_3)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    node_8 = module_0.Node(node_7)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    int_3 = singly_linked_list_14.getSize()
    assert int_3 == 1
    int_4 = 0
    node_9 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_15.isEmpty()
    assert bool_5 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_17.isEmpty()
    assert bool_6 is True
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_6)

def test_case_971():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_3 = module_0.Node(complex_0)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.remove()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.remove()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    var_5 = singly_linked_list_12.remove()
    none_type_1 = singly_linked_list_13.add(singly_linked_list_12)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_15.getHead()
    node_6 = module_0.Node(var_6)
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_16.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_18.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_18.getSize()
    node_9 = module_0.Node(singly_linked_list_0)

def test_case_972():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    var_1 = singly_linked_list_1.remove()

def test_case_973():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    int_1 = singly_linked_list_3.getSize()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_3 = singly_linked_list_5.getSize()
    assert int_3 == 1
    node_6 = singly_linked_list_5.getHeadNode()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is False
    str_2 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_6.remove()
    str_4 = 'P{"'
    node_7 = module_0.Node(str_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_9.add(str_5)
    var_4 = singly_linked_list_3.getHead()

def test_case_974():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_3)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False

def test_case_975():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_6.remove()
    node_4 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_9.getHeadNode()
    node_8 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    var_4 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_16.__str__()
    assert str_2 == '[None]'
    node_11 = singly_linked_list_15.getHeadNode()
    bool_7 = singly_linked_list_9.isEmpty()
    assert bool_7 is True

def test_case_976():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    node_4 = singly_linked_list_0.getHeadNode()

def test_case_977():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    var_1 = singly_linked_list_9.getHead()
    dict_0 = {int_1: none_type_0, var_1: str_2}
    node_4 = module_0.Node(dict_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    node_6 = singly_linked_list_8.getHeadNode()

def test_case_978():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_3 = None
    node_0 = module_0.Node(none_type_3)
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_8.add(singly_linked_list_6)
    int_1 = -1870
    node_1 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    none_type_7 = singly_linked_list_11.add(none_type_6)
    var_2 = singly_linked_list_9.getHead()

def test_case_979():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_2 = None
    node_0 = module_0.Node(none_type_2)
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    int_1 = singly_linked_list_6.getSize()
    assert int_1 == 1
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    none_type_4 = singly_linked_list_7.add(str_2)
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_5 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(none_type_5)
    none_type_7 = singly_linked_list_8.add(none_type_5)
    list_2 = singly_linked_list_8.toArray()
    var_1 = singly_linked_list_8.getHead()
    list_3 = singly_linked_list_8.toArray()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_8 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_9.add(none_type_8)
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_10 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_11 = singly_linked_list_10.add(none_type_10)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_12 = singly_linked_list_11.add(singly_linked_list_11)
    int_3 = singly_linked_list_11.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_980():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    var_2 = singly_linked_list_4.remove()
    int_2 = singly_linked_list_1.getSize()

def test_case_981():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(bool_0)

def test_case_982():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    var_1 = singly_linked_list_1.remove()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_9.getSize()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_5 = var_4.__str__()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_16.getSize()
    str_6 = 'P{"'
    node_7 = module_0.Node(str_6)
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_17.add(none_type_3)
    none_type_5 = singly_linked_list_17.add(none_type_3)
    bool_5 = singly_linked_list_17.isEmpty()
    assert bool_5 is False
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_18.__str__()
    assert str_7 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_20.remove()
    bool_6 = singly_linked_list_20.isEmpty()
    assert bool_6 is True
    var_6 = singly_linked_list_13.getHead()

def test_case_983():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_1 = singly_linked_list_6.add(str_3)
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_8.remove()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    list_3 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    none_type_5 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_6 = var_2.__str__()
    int_2 = singly_linked_list_7.getSize()

def test_case_984():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()

def test_case_985():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_4.remove()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    str_2 = var_4.__str__()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = var_4.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.getHead()
    node_7 = module_0.Node(var_5)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(var_0)

def test_case_986():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_987():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_2 = module_0.Node(bytes_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_3 = singly_linked_list_7.getHead()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_1 = singly_linked_list_14.add(str_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_988():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_4 = singly_linked_list_5.add(str_0)
    var_1 = singly_linked_list_5.getHead()
    assert var_1 == '[None]'
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_5 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_6.add(none_type_5)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_7 = singly_linked_list_7.add(singly_linked_list_7)
    int_4 = singly_linked_list_7.getSize()
    assert int_4 == 1
    node_6 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_7.__str__()
    node_7 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_7.__str__()

def test_case_989():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None, None]'

def test_case_990():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_7.remove()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    str_2 = var_4.__str__()
    assert str_2 == 'None'
    str_3 = var_3.__str__()

def test_case_991():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    node_2 = module_0.Node(node_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(none_type_1)
    none_type_3 = singly_linked_list_12.add(none_type_1)
    list_0 = singly_linked_list_12.toArray()
    var_4 = singly_linked_list_12.getHead()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    int_1 = 719
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(int_1)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_5 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_14.add(none_type_5)
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    none_type_7 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_15.add(none_type_7)
    none_type_9 = singly_linked_list_15.add(none_type_7)
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is False
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_16.toArray()
    node_7 = module_0.Node(var_4)

def test_case_992():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = 'P{"'
    node_2 = module_0.Node(str_1)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()

def test_case_993():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_11.remove()
    node_2 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_18.isEmpty()
    assert bool_1 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_19.__str__()
    assert str_6 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_20.getHeadNode()
    str_7 = singly_linked_list_18.__str__()
    assert str_7 == '[None]'
    var_3 = singly_linked_list_1.remove()

def test_case_994():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_5)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_10.remove()
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_8 = module_0.Node(complex_0)
    var_3 = singly_linked_list_8.remove()

def test_case_995():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()

def test_case_996():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_1.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    int_2 = 719
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()

def test_case_997():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    int_0 = singly_linked_list_9.getSize()
    assert int_0 == 1
    var_3 = singly_linked_list_9.getHead()
    dict_0 = {int_0: none_type_4, var_3: str_4}
    node_1 = module_0.Node(dict_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_11.getHeadNode()
    node_4 = singly_linked_list_11.getHeadNode()
    var_4 = singly_linked_list_10.getHead()
    node_5 = singly_linked_list_3.getHeadNode()

def test_case_998():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_0 = module_0.Node(var_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    node_3 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    float_0 = -4391.2905
    none_type_2 = singly_linked_list_3.add(float_0)

def test_case_999():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1000():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    list_0 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(str_3)
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True

def test_case_1001():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_3 = singly_linked_list_3.getHead()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_7.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_5.value).__module__}.{type(var_5.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_5.next is None
    str_4 = var_5.__str__()
    node_4 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_12.remove()
    str_5 = var_7.__str__()
    assert str_5 == 'None'
    none_type_4 = singly_linked_list_11.add(node_6)
    var_8 = singly_linked_list_0.getHead()

def test_case_1002():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1003():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    var_0 = singly_linked_list_2.getHead()
    dict_0 = {int_1: none_type_0, var_0: str_0}
    node_1 = module_0.Node(dict_0)
    str_1 = singly_linked_list_2.__str__()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    var_2 = var_0.getHead()

def test_case_1004():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.getHead()
    str_3 = var_0.__str__()
    int_0 = singly_linked_list_8.getSize()
    var_1 = singly_linked_list_8.getHead()

def test_case_1005():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_9.remove()
    node_5 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_11.getHeadNode()
    node_8 = singly_linked_list_11.getHeadNode()
    var_4 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.getHead()
    node_9 = module_0.Node(var_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_10 = module_0.Node(str_2)
    assert node_10.value == '[None]'

def test_case_1006():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_3.getHead()
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_3 = var_3.__str__()
    none_type_2 = singly_linked_list_5.add(str_0)

def test_case_1007():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = -1870
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(str_0)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_6.getHead()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True

def test_case_1008():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_4.remove()
    node_3 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    node_4 = module_0.Node(var_2)
    assert node_4.value is None
    int_1 = singly_linked_list_0.getSize()

def test_case_1009():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    none_type_1 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_5.remove()
    int_1 = 719
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(int_1)
    node_5 = module_0.Node(singly_linked_list_0)

def test_case_1010():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    node_2 = singly_linked_list_1.getHeadNode()

def test_case_1011():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_1 = singly_linked_list_8.getSize()
    list_0 = singly_linked_list_1.toArray()

def test_case_1012():
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    int_1 = singly_linked_list_1.getSize()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    int_3 = singly_linked_list_3.getSize()
    assert int_3 == 1
    var_0 = singly_linked_list_3.getHead()
    dict_0 = {int_3: none_type_2, var_0: str_1}
    node_4 = module_0.Node(dict_0)
    str_2 = singly_linked_list_3.__str__()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    list_0 = var_0.toArray()

def test_case_1013():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_5.remove()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_5)
    int_3 = -1870
    node_5 = module_0.Node(int_3)
    node_6 = module_0.Node(node_5)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    list_1 = singly_linked_list_5.toArray()

def test_case_1014():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    node_2 = module_0.Node(var_0)

def test_case_1015():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    node_3 = module_0.Node(node_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    str_1 = var_2.__str__()
    node_4 = module_0.Node(var_2)

def test_case_1016():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'

def test_case_1017():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1018():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_5 = module_0.Node(singly_linked_list_1)
    int_2 = 0
    node_6 = module_0.Node(int_2)
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_4.add(none_type_4)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_4.toArray()
    var_0 = singly_linked_list_4.getHead()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_6.add(none_type_6)
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    list_3 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_7.getHeadNode()
    node_11 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_12 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_8.getSize()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_12.toArray()
    none_type_8 = None
    node_13 = module_0.Node(none_type_8)
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_11.remove()
    var_3 = singly_linked_list_12.getHead()

def test_case_1019():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    node_1 = module_0.Node(var_0)
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    int_3 = singly_linked_list_11.getSize()
    assert int_3 == 1
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    int_4 = singly_linked_list_12.getSize()
    assert int_4 == 1
    var_2 = singly_linked_list_12.getHead()
    dict_0 = {int_4: none_type_4, var_2: str_5}
    node_6 = module_0.Node(dict_0)
    str_6 = singly_linked_list_12.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    none_type_5 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_6 = singly_linked_list_13.add(str_7)
    var_3 = singly_linked_list_13.getHead()
    assert var_3 == '[None]'
    bool_0 = singly_linked_list_11.isEmpty()
    assert bool_0 is False

def test_case_1020():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_1)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.getHead()
    node_1 = module_0.Node(var_0)
    none_type_4 = singly_linked_list_0.add(none_type_1)

def test_case_1021():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_2.add(str_1)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_3.getHeadNode()
    str_3 = singly_linked_list_3.__str__()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    var_2 = singly_linked_list_5.getHead()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    none_type_4 = None
    node_5 = module_0.Node(none_type_4)
    var_3 = singly_linked_list_0.getHead()

def test_case_1022():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_1)
    node_2 = singly_linked_list_5.getHeadNode()
    assert node_2.value == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_3 = singly_linked_list_6.add(str_2)
    var_0 = singly_linked_list_6.getHead()
    assert var_0 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    int_2 = singly_linked_list_7.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_7.getHeadNode()
    str_4 = singly_linked_list_7.__str__()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_5 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(none_type_5)
    none_type_7 = singly_linked_list_8.add(none_type_5)
    list_1 = singly_linked_list_8.toArray()
    list_2 = []
    none_type_8 = singly_linked_list_8.add(list_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_10.toArray()
    none_type_9 = None
    node_6 = module_0.Node(none_type_9)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_11.getHeadNode()
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    var_1 = singly_linked_list_11.remove()
    bool_4 = True
    none_type_10 = singly_linked_list_7.add(bool_4)

def test_case_1023():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_2 = singly_linked_list_0.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_3 = module_0.Node(var_0)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_3 = var_1.__str__()
    int_4 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    int_5 = 0
    node_8 = module_0.Node(int_5)
    none_type_1 = None
    node_9 = module_0.Node(none_type_1)
    int_6 = 0
    node_10 = module_0.Node(int_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_11.remove()
    bool_4 = False
    node_11 = module_0.Node(bool_4)
    node_12 = module_0.Node(node_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    var_3 = singly_linked_list_11.getHead()
    var_4 = singly_linked_list_6.remove()

def test_case_1024():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True

def test_case_1025():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    var_0 = singly_linked_list_0.getHead()
    var_1 = var_0.getHead()

def test_case_1026():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    str_4 = var_3.__str__()
    int_1 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()

def test_case_1027():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_2.getHead()
    dict_0 = {int_0: none_type_0, var_1: str_0}
    node_3 = module_0.Node(dict_0)
    str_1 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_3.getHeadNode()
    bool_0 = False
    node_5 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    str_2 = var_2.__str__()
    int_1 = singly_linked_list_3.getSize()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    int_2 = 0
    node_7 = module_0.Node(int_2)
    var_4 = singly_linked_list_7.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_5 = singly_linked_list_10.add(str_5)
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_5.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert var_5.value is None
    assert f'{type(var_5.next).__module__}.{type(var_5.next).__qualname__}' == 'linkedList3.Node'

def test_case_1028():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    node_2 = module_0.Node(singly_linked_list_2)
    int_2 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True

def test_case_1029():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_4.getSize()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_2 = singly_linked_list_6.getHeadNode()
    int_1 = singly_linked_list_6.getSize()
    none_type_0 = singly_linked_list_2.add(var_0)

def test_case_1030():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    str_0 = var_3.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_8.add(node_7)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_3 = var_4.__str__()
    node_8 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None
    var_5 = singly_linked_list_12.remove()

def test_case_1031():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(bool_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    var_1 = singly_linked_list_8.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_14.add(singly_linked_list_12)
    var_2 = singly_linked_list_13.remove()

def test_case_1032():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_3 = singly_linked_list_2.add(str_0)
    var_0 = singly_linked_list_2.getHead()
    assert var_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_5 = singly_linked_list_3.add(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    none_type_6 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_6.add(none_type_6)
    node_3 = singly_linked_list_4.getHeadNode()

def test_case_1033():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_3 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    node_4 = module_0.Node(var_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    int_4 = 0
    node_5 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_10.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_10.remove()
    node_6 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    node_7 = module_0.Node(var_1)
    assert node_7.value is None
    var_2 = singly_linked_list_3.getHead()

def test_case_1034():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    var_1 = singly_linked_list_11.remove()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    node_8 = module_0.Node(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_15.getSize()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is False

def test_case_1035():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    str_0 = var_2.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    str_1 = var_3.__str__()
    assert str_1 == 'None'
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_5.getHeadNode()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is False
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_7.remove()
    str_3 = var_5.__str__()
    assert str_3 == 'None'
    none_type_4 = singly_linked_list_6.add(node_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    var_6 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    int_2 = 0
    node_6 = module_0.Node(int_2)
    var_7 = singly_linked_list_10.remove()
    node_7 = module_0.Node(var_6)
    assert node_7.value is None

def test_case_1036():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_0)
    node_2 = singly_linked_list_4.getHeadNode()
    assert node_2.value == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    var_0 = singly_linked_list_7.remove()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    none_type_5 = singly_linked_list_8.add(none_type_4)

def test_case_1037():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    bool_4 = False
    node_1 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    none_type_5 = singly_linked_list_4.add(none_type_3)
    list_0 = singly_linked_list_4.toArray()
    list_1 = []
    none_type_6 = singly_linked_list_4.add(list_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_5.isEmpty()
    assert bool_5 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_9.isEmpty()
    assert bool_6 is True
    bool_7 = singly_linked_list_9.isEmpty()
    assert bool_7 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_7 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_3 = var_4.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    var_5 = singly_linked_list_15.remove()
    node_4 = singly_linked_list_15.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_18.getSize()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_19.add(singly_linked_list_17)
    bool_8 = singly_linked_list_14.isEmpty()
    assert bool_8 is True

def test_case_1038():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_7.remove()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    node_6 = module_0.Node(node_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_7.getHead()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_9.add(none_type_3)
    none_type_5 = singly_linked_list_9.add(none_type_3)
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    node_8 = module_0.Node(singly_linked_list_2)

def test_case_1039():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_3 = singly_linked_list_6.getSize()
    assert int_3 == 1
    var_1 = singly_linked_list_6.getHead()
    dict_0 = {int_3: none_type_0, var_1: str_0}
    node_3 = module_0.Node(dict_0)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_2 = var_3.__str__()
    none_type_5 = None
    node_7 = module_0.Node(none_type_5)
    node_8 = module_0.Node(node_7)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_13.toArray()
    none_type_6 = None
    node_9 = module_0.Node(none_type_6)
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_12.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_15.__str__()
    assert str_3 == '[None]'
    node_10 = singly_linked_list_14.getHeadNode()
    int_4 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_16.toArray()
    bool_6 = False
    node_11 = module_0.Node(bool_6)
    none_type_7 = None
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_17.add(none_type_7)
    var_5 = singly_linked_list_16.getHead()
    int_5 = singly_linked_list_2.getSize()

def test_case_1040():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_2)

def test_case_1041():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_0.getHead()

def test_case_1042():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = -1870
    node_6 = module_0.Node(int_2)
    var_1 = singly_linked_list_0.remove()

def test_case_1043():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    node_1 = singly_linked_list_2.getHeadNode()
    int_1 = singly_linked_list_2.getSize()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    node_3 = singly_linked_list_2.getHeadNode()

def test_case_1044():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()

def test_case_1045():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    node_0 = module_0.Node(singly_linked_list_4)
    int_0 = singly_linked_list_0.getSize()

def test_case_1046():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_0)
    str_1 = 'P{"'
    node_1 = module_0.Node(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_5)
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_14.toArray()
    var_3 = singly_linked_list_13.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_18.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_18.remove()
    node_5 = singly_linked_list_18.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_19.getHead()
    int_2 = singly_linked_list_19.getSize()
    str_6 = singly_linked_list_0.__str__()
    assert str_6 == '[None]'

def test_case_1047():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    int_1 = singly_linked_list_6.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    node_3 = singly_linked_list_6.getHeadNode()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_7.add(singly_linked_list_7)
    int_3 = singly_linked_list_7.getSize()
    assert int_3 == 1
    node_5 = singly_linked_list_7.getHeadNode()
    str_5 = singly_linked_list_7.__str__()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_8.getHeadNode()
    node_8 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_9.getSize()
    var_1 = singly_linked_list_8.remove()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    int_5 = 0
    node_10 = module_0.Node(int_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    var_2 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    int_6 = 0
    node_11 = module_0.Node(int_6)
    var_3 = singly_linked_list_12.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_16.toArray()
    var_4 = singly_linked_list_15.getHead()
    var_5 = singly_linked_list_4.getHead()

def test_case_1048():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(bool_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False

def test_case_1049():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()

def test_case_1050():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_3 = singly_linked_list_6.add(str_2)
    var_1 = singly_linked_list_6.getHead()
    assert var_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_5 = singly_linked_list_9.add(str_3)
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_1051():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    node_0 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_2 = singly_linked_list_5.getHead()
    node_1 = module_0.Node(str_2)
    assert node_1.value == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    node_2 = module_0.Node(none_type_3)

def test_case_1052():
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_0)

def test_case_1053():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    node_2 = module_0.Node(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    node_3 = module_0.Node(none_type_1)

def test_case_1054():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    int_3 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_2)
    var_0 = singly_linked_list_4.getHead()
    assert var_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_5 = singly_linked_list_5.add(str_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_6 = module_0.Node(var_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    node_9 = singly_linked_list_10.getHeadNode()
    var_2 = singly_linked_list_9.getHead()
    int_4 = singly_linked_list_1.getSize()
    assert int_4 == 1

def test_case_1055():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_7.getHeadNode()
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_3 = var_1.__str__()
    int_2 = singly_linked_list_7.getSize()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_10.remove()
    node_9 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    node_10 = module_0.Node(var_2)
    assert node_10.value is None
    bool_3 = False
    node_11 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_11.add(none_type_4)
    none_type_6 = singly_linked_list_11.add(none_type_4)
    var_3 = singly_linked_list_11.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_1056():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_1.getHead()
    dict_0 = {int_0: none_type_0, var_1: str_1}
    node_1 = module_0.Node(dict_0)
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    node_4 = module_0.Node(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    node_5 = module_0.Node(str_2)
    assert node_5.value == '[None]'
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    none_type_3 = singly_linked_list_8.add(none_type_1)
    var_3 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_7 = module_0.Node(singly_linked_list_11)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_18.__str__()
    assert str_6 == '[None]'
    none_type_5 = singly_linked_list_18.add(singly_linked_list_18)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_18.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_7 = var_4.__str__()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_20.getHeadNode()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_20.getSize()
    bool_4 = singly_linked_list_21.isEmpty()
    assert bool_4 is True
    var_5 = singly_linked_list_21.getHead()
    list_2 = singly_linked_list_21.toArray()
    none_type_6 = singly_linked_list_6.add(none_type_0)

def test_case_1057():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = var_0.__str__()
    assert str_3 == 'None'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_3 = singly_linked_list_5.add(str_4)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()

def test_case_1058():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'

def test_case_1059():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    node_1 = singly_linked_list_2.getHeadNode()

def test_case_1060():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    var_1 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.remove()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    var_4 = singly_linked_list_16.remove()
    node_4 = singly_linked_list_16.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    var_5 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    bool_4 = singly_linked_list_17.isEmpty()
    assert bool_4 is True
    var_6 = singly_linked_list_17.remove()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True

def test_case_1061():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    str_1 = 'P{"'
    node_0 = module_0.Node(str_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_5.toArray()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    var_1 = singly_linked_list_9.remove()
    node_3 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    int_0 = -1870
    node_4 = module_0.Node(int_0)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_11.add(none_type_1)
    none_type_3 = singly_linked_list_11.add(none_type_1)
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    list_3 = singly_linked_list_13.toArray()
    list_4 = singly_linked_list_1.toArray()

def test_case_1062():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_11.remove()
    bool_1 = singly_linked_list_11.isEmpty()
    assert bool_1 is True
    int_2 = -1870
    node_7 = module_0.Node(int_2)
    none_type_1 = singly_linked_list_4.add(int_2)

def test_case_1063():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    node_2 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1064():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(str_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    none_type_5 = None
    node_5 = module_0.Node(none_type_5)
    node_6 = module_0.Node(node_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_7 = singly_linked_list_8.add(str_4)
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    node_9 = singly_linked_list_10.getHeadNode()
    var_3 = singly_linked_list_9.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    int_2 = 0
    node_10 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = var_4.__str__()
    assert str_6 == 'None'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    int_3 = 0
    node_11 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_8.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert var_6.value == '[None]'
    assert f'{type(var_6.next).__module__}.{type(var_6.next).__qualname__}' == 'linkedList3.Node'

def test_case_1065():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    int_4 = singly_linked_list_13.getSize()
    assert int_4 == 1
    var_4 = singly_linked_list_13.getHead()
    dict_0 = {int_4: none_type_3, var_4: str_3}
    node_8 = module_0.Node(dict_0)
    node_9 = singly_linked_list_13.getHeadNode()
    int_5 = -1870
    node_10 = module_0.Node(int_5)
    node_11 = module_0.Node(node_10)
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True

def test_case_1066():
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_1 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    node_3 = singly_linked_list_4.getHeadNode()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    int_4 = singly_linked_list_9.getSize()
    assert int_4 == 1
    node_7 = singly_linked_list_9.getHeadNode()
    str_5 = singly_linked_list_9.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    str_6 = var_1.__str__()
    str_7 = singly_linked_list_4.__str__()
    assert str_7 == '[None]'

def test_case_1067():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    var_1 = singly_linked_list_8.getHead()
    dict_0 = {int_3: none_type_1, var_1: str_2}
    node_4 = module_0.Node(dict_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()

def test_case_1068():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_1.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_9.remove()
    node_4 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)
    none_type_5 = singly_linked_list_10.add(none_type_3)
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    int_1 = -1870
    node_7 = module_0.Node(int_1)
    node_8 = module_0.Node(node_7)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_15.getSize()
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    int_3 = singly_linked_list_15.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()

def test_case_1069():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'

def test_case_1070():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True

def test_case_1071():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(none_type_1)

def test_case_1072():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_1 = module_0.Node(list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_5.getHead()

def test_case_1073():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    str_3 = 'P{"'
    node_2 = module_0.Node(str_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    var_2 = singly_linked_list_7.getHead()
    node_4 = singly_linked_list_7.getHeadNode()

def test_case_1074():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = var_0.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None

def test_case_1075():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_10.remove()
    bool_5 = False
    node_3 = module_0.Node(bool_5)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    var_4 = singly_linked_list_6.remove()

def test_case_1076():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_1077():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_1078():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    var_1 = singly_linked_list_2.remove()

def test_case_1079():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    int_0 = -1870
    node_2 = module_0.Node(int_0)
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    node_4 = module_0.Node(node_3)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    var_1 = singly_linked_list_2.getHead()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    none_type_2 = None
    node_8 = module_0.Node(none_type_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_11.remove()
    node_9 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    int_2 = 0
    node_10 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_4 = None
    node_12 = module_0.Node(none_type_4)
    int_3 = singly_linked_list_12.getSize()

def test_case_1080():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_7.getHead()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_8.add(bool_3)
    int_4 = -1870
    node_4 = module_0.Node(int_4)
    node_5 = module_0.Node(node_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_11.__str__()
    assert str_1 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_14.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    node_6 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_17.getHead()
    int_5 = singly_linked_list_5.getSize()

def test_case_1081():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_3 = singly_linked_list_3.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    int_4 = 0
    node_4 = module_0.Node(int_4)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_5 = -1870
    node_6 = module_0.Node(int_5)
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(none_type_2)
    none_type_4 = singly_linked_list_15.add(none_type_2)
    list_0 = singly_linked_list_15.toArray()
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    none_type_5 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_16.add(none_type_5)
    none_type_7 = singly_linked_list_16.add(none_type_5)
    var_2 = singly_linked_list_16.getHead()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_17.remove()
    var_4 = singly_linked_list_6.remove()

def test_case_1082():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_1 = module_0.Node(list_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(node_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    var_1 = singly_linked_list_13.remove()
    node_4 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    var_2 = singly_linked_list_11.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    none_type_4 = singly_linked_list_14.add(str_7)
    list_1 = singly_linked_list_14.toArray()
    none_type_5 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_15.add(none_type_5)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_16.__str__()
    assert str_8 == '[None]'
    none_type_7 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_17.__str__()
    assert str_9 == '[None]'
    none_type_8 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_17.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_10 = var_3.__str__()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_19.getSize()
    none_type_9 = singly_linked_list_14.add(str_7)

def test_case_1083():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_2.getHead()
    dict_0 = {int_0: none_type_1, var_1: str_2}
    node_1 = module_0.Node(dict_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    none_type_4 = singly_linked_list_3.add(none_type_2)
    list_0 = singly_linked_list_3.toArray()
    list_1 = []
    none_type_5 = singly_linked_list_3.add(list_1)
    list_2 = singly_linked_list_2.toArray()

def test_case_1084():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(str_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_8)

def test_case_1085():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(singly_linked_list_7)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_1 = module_0.Node(bytes_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_10)
    str_5 = 'P{"'
    node_4 = module_0.Node(str_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_15.toArray()
    var_2 = singly_linked_list_14.getHead()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_1086():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_3.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    node_4 = module_0.Node(var_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_2 = singly_linked_list_10.add(str_3)
    node_5 = singly_linked_list_10.getHeadNode()
    assert node_5.value == '[None]'
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    int_5 = 0
    node_8 = module_0.Node(int_5)
    none_type_3 = None
    node_9 = module_0.Node(none_type_3)
    int_6 = singly_linked_list_7.getSize()

def test_case_1087():
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    list_1 = singly_linked_list_4.toArray()

def test_case_1088():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_6)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_10.remove()
    node_1 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_3)
    assert node_2.value is None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_11.remove()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'

def test_case_1089():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True

def test_case_1090():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(singly_linked_list_2)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(str_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_11.remove()
    node_3 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    node_5 = module_0.Node(node_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    none_type_6 = singly_linked_list_14.add(str_4)
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True

def test_case_1091():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    var_2 = singly_linked_list_1.remove()

def test_case_1092():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_4.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    none_type_1 = singly_linked_list_6.add(node_1)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_13.add(none_type_4)
    none_type_6 = singly_linked_list_13.add(none_type_4)
    list_1 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_14.getHeadNode()
    node_8 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_15.getSize()
    var_3 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_2 = [bytes_0]
    node_10 = module_0.Node(list_2)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_18.add(node_10)
    var_4 = singly_linked_list_10.getHead()

def test_case_1093():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_4.getHead()
    node_2 = module_0.Node(str_0)
    assert node_2.value == '[None]'
    node_3 = singly_linked_list_1.getHeadNode()

def test_case_1094():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = 'P{"'
    node_1 = module_0.Node(str_0)
    none_type_2 = singly_linked_list_0.add(none_type_1)

def test_case_1095():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(str_0)
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_5.remove()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_1 = [bytes_0]
    node_4 = module_0.Node(list_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(node_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.getHead()
    str_2 = var_4.__str__()
    int_1 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.getHead()
    node_7 = module_0.Node(var_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    node_8 = singly_linked_list_12.getHeadNode()
    int_2 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    none_type_5 = None
    node_9 = module_0.Node(none_type_5)
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    var_6 = singly_linked_list_14.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'

def test_case_1096():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    node_2 = module_0.Node(singly_linked_list_5)
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    node_3 = module_0.Node(singly_linked_list_8)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)
    none_type_4 = singly_linked_list_9.add(none_type_2)
    list_4 = singly_linked_list_9.toArray()
    list_5 = []
    none_type_5 = singly_linked_list_9.add(list_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_6 = singly_linked_list_12.toArray()
    list_7 = singly_linked_list_12.toArray()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    bool_6 = singly_linked_list_14.isEmpty()
    assert bool_6 is True
    node_7 = module_0.Node(singly_linked_list_0)

def test_case_1097():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.getHead()

def test_case_1098():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_1 = module_0.Node(list_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(node_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    none_type_3 = singly_linked_list_7.add(none_type_1)
    list_1 = singly_linked_list_7.toArray()
    var_0 = singly_linked_list_7.getHead()
    node_4 = singly_linked_list_1.getHeadNode()

def test_case_1099():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    node_1 = singly_linked_list_2.getHeadNode()
    var_0 = singly_linked_list_1.getHead()

def test_case_1100():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    node_0 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    str_4 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_4 = singly_linked_list_7.add(str_5)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_9)
    int_1 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.getHead()
    int_2 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True

def test_case_1101():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_1.getHeadNode()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is False
    str_2 = singly_linked_list_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_5)
    var_2 = singly_linked_list_5.getHead()
    assert var_2 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_2 = 0
    node_6 = module_0.Node(int_2)
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    var_3 = singly_linked_list_5.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value == '[None]'
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'

def test_case_1102():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_2)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    list_1 = singly_linked_list_8.toArray()
    var_1 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    none_type_5 = singly_linked_list_6.add(singly_linked_list_6)

def test_case_1103():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_1.add(none_type_2)
    none_type_4 = singly_linked_list_1.add(none_type_2)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    list_1 = singly_linked_list_3.toArray()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    node_5 = singly_linked_list_4.getHeadNode()
    int_1 = singly_linked_list_4.getSize()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_6.isEmpty()
    assert bool_5 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_14.add(singly_linked_list_12)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is True
    var_0 = singly_linked_list_3.remove()

def test_case_1104():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_4.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    node_4 = module_0.Node(node_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    var_1 = singly_linked_list_8.getHead()
    dict_0 = {int_3: none_type_3, var_1: str_5}
    node_5 = module_0.Node(dict_0)
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    int_5 = singly_linked_list_9.getSize()
    assert int_5 == 1
    node_7 = singly_linked_list_9.getHeadNode()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is False
    str_7 = singly_linked_list_9.__str__()
    int_6 = -1870
    node_8 = module_0.Node(int_6)
    node_9 = module_0.Node(node_2)

def test_case_1105():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    str_1 = 'P{"'
    node_0 = module_0.Node(str_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_4 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(str_4)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    node_5 = singly_linked_list_11.getHeadNode()
    var_2 = singly_linked_list_10.getHead()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_4 = singly_linked_list_12.add(node_6)
    int_1 = 0
    node_7 = module_0.Node(int_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_5.add(var_3)

def test_case_1106():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    str_3 = singly_linked_list_3.__str__()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    str_5 = singly_linked_list_4.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_6 = module_0.Node(complex_0)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_6 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    int_6 = 0
    node_9 = module_0.Node(int_6)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    int_7 = singly_linked_list_11.getSize()
    assert int_7 == 1
    node_10 = singly_linked_list_11.getHeadNode()
    str_8 = singly_linked_list_11.__str__()
    node_11 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_12.__str__()
    assert str_9 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    list_0 = singly_linked_list_9.toArray()

def test_case_1107():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(int_0)

def test_case_1108():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_9.add(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    node_3 = module_0.Node(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    str_5 = var_3.__str__()
    assert str_5 == 'None'
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = var_3.__str__()
    assert str_6 == 'None'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_14)
    none_type_3 = singly_linked_list_15.add(var_1)

def test_case_1109():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_5.getHead()
    node_2 = module_0.Node(str_0)
    assert node_2.value == '[None]'

def test_case_1110():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_3.add(none_type_0)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_4.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    var_0 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    var_1 = singly_linked_list_16.remove()
    node_9 = singly_linked_list_16.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    var_2 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_17.toArray()
    none_type_4 = None
    node_10 = module_0.Node(none_type_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_18.getHead()
    node_11 = module_0.Node(var_3)
    int_3 = 0
    node_12 = module_0.Node(int_3)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_19.isEmpty()
    assert bool_2 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_19.toArray()
    none_type_5 = None
    node_13 = module_0.Node(none_type_5)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_21.remove()
    str_8 = var_4.__str__()
    assert str_8 == 'None'
    none_type_6 = singly_linked_list_21.add(str_8)
    list_2 = singly_linked_list_19.toArray()

def test_case_1111():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(str_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_1112():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    node_3 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_1.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_2 = var_1.__str__()
    int_3 = singly_linked_list_4.getSize()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    none_type_3 = singly_linked_list_6.add(none_type_1)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_7.getSize()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_0.getHead()
    str_4 = var_3.__str__()

def test_case_1113():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    node_1 = module_0.Node(node_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    none_type_0 = singly_linked_list_1.add(bool_0)

def test_case_1114():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_3.getHeadNode()
    node_5 = singly_linked_list_3.getHeadNode()
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    var_2 = singly_linked_list_4.getHead()
    dict_0 = {int_1: none_type_0, var_2: str_2}
    node_6 = module_0.Node(dict_0)
    node_7 = singly_linked_list_4.getHeadNode()
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_9 = module_0.Node(bool_1)
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_10 = module_0.Node(complex_0)
    int_3 = 0
    node_11 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    str_5 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.getHead()
    int_4 = 0
    node_12 = module_0.Node(int_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_13 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = var_2.add(singly_linked_list_10)

def test_case_1115():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_3 = singly_linked_list_3.add(str_1)
    list_0 = singly_linked_list_3.toArray()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'

def test_case_1116():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_1117():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    var_0 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_15)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_19.__str__()
    assert str_5 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_21.remove()
    bool_4 = singly_linked_list_21.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_19.remove()
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    singly_linked_list_22 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_22.toArray()
    list_3 = singly_linked_list_22.toArray()
    str_6 = singly_linked_list_5.__str__()
    assert str_6 == '[None]'

def test_case_1118():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    none_type_4 = singly_linked_list_3.add(none_type_2)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_4 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    node_6 = module_0.Node(singly_linked_list_5)
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_8.remove()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    none_type_5 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_9.add(none_type_5)
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1119():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    node_2 = module_0.Node(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_6 = var_1.__str__()
    node_3 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()

def test_case_1120():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    list_1 = singly_linked_list_6.toArray()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_7.add(str_3)
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_2 = singly_linked_list_12.add(str_7)
    list_2 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.getHead()
    node_7 = module_0.Node(var_2)
    node_8 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_16.getHeadNode()
    node_10 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_17.getSize()
    var_3 = singly_linked_list_16.remove()
    bool_3 = singly_linked_list_18.isEmpty()
    assert bool_3 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()

def test_case_1121():
    dict_0 = {}
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(dict_0)

def test_case_1122():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    none_type_0 = singly_linked_list_1.add(bool_0)

def test_case_1123():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_5.getHead()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    var_4 = singly_linked_list_9.remove()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_2 = singly_linked_list_12.add(str_4)
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    var_5 = singly_linked_list_0.getHead()

def test_case_1124():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(str_2)
    assert node_1.value == '[None]'
    none_type_1 = var_0.add(var_1)

def test_case_1125():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_1.add(none_type_3)
    none_type_5 = singly_linked_list_1.add(none_type_3)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_2.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    int_4 = 0
    node_5 = module_0.Node(int_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_10.isEmpty()
    assert bool_6 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_12.__str__()
    assert str_1 == '[None]'
    none_type_6 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_7 = singly_linked_list_12.add(str_1)
    node_6 = singly_linked_list_12.getHeadNode()
    assert node_6.value == '[None]'
    bool_7 = singly_linked_list_1.isEmpty()
    assert bool_7 is False

def test_case_1126():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_5.toArray()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    node_5 = module_0.Node(singly_linked_list_6)
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.getHead()
    node_7 = module_0.Node(var_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_4 = var_1.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_12.getSize()
    none_type_7 = singly_linked_list_12.add(none_type_6)
    int_3 = singly_linked_list_3.getSize()

def test_case_1127():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    node_1 = module_0.Node(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    none_type_2 = singly_linked_list_4.add(str_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_11.getHeadNode()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_14.isEmpty()
    assert bool_1 is True
    node_5 = module_0.Node(singly_linked_list_12)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_15.getHeadNode()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_16.getHead()
    str_6 = var_2.__str__()
    int_1 = singly_linked_list_15.getSize()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_17.isEmpty()
    assert bool_3 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_18.__str__()
    assert str_8 == '[None]'
    node_8 = singly_linked_list_17.getHeadNode()
    int_2 = singly_linked_list_17.getSize()
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_19.__str__()
    assert str_9 == '[None]'

def test_case_1128():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    none_type_6 = singly_linked_list_10.add(none_type_4)
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_5 = module_0.Node(bytes_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    none_type_7 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_15.add(none_type_7)
    none_type_9 = singly_linked_list_15.add(none_type_7)
    var_1 = singly_linked_list_15.getHead()

def test_case_1129():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_0)

def test_case_1130():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    list_2 = singly_linked_list_2.toArray()

def test_case_1131():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    bool_0 = False
    node_5 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_0 = var_2.__str__()
    int_1 = singly_linked_list_5.getSize()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_8.getHeadNode()
    node_9 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_11.getHeadNode()
    bool_3 = False
    node_12 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    str_1 = var_4.__str__()
    int_3 = singly_linked_list_11.getSize()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_4 = 0
    node_13 = module_0.Node(int_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.getHead()
    node_14 = module_0.Node(var_5)
    node_15 = singly_linked_list_15.getHeadNode()
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is True

def test_case_1132():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = singly_linked_list_0.getHeadNode()

def test_case_1133():
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_3 = singly_linked_list_1.add(str_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_4 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_2.add(none_type_4)
    none_type_6 = singly_linked_list_2.add(none_type_4)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_7 = None
    node_1 = module_0.Node(none_type_7)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_4.remove()
    node_2 = singly_linked_list_2.getHeadNode()

def test_case_1134():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_0.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_2 = singly_linked_list_0.getSize()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_1135():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1136():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_7)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_11.add(none_type_3)
    none_type_5 = singly_linked_list_11.add(none_type_3)
    var_1 = singly_linked_list_11.getHead()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_6 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_12.add(none_type_6)
    none_type_8 = singly_linked_list_12.add(none_type_6)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    var_3 = singly_linked_list_13.getHead()
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_16.getHead()
    int_3 = singly_linked_list_16.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_17.getHead()
    node_6 = module_0.Node(var_5)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_18.isEmpty()
    assert bool_3 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_18.toArray()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_20.__str__()
    assert str_5 == '[None]'
    none_type_9 = singly_linked_list_20.add(singly_linked_list_20)
    int_6 = singly_linked_list_20.getSize()
    assert int_6 == 1
    node_9 = singly_linked_list_20.getHeadNode()
    str_6 = singly_linked_list_20.__str__()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_21.toArray()
    list_4 = singly_linked_list_21.toArray()

def test_case_1137():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    node_3 = module_0.Node(var_2)
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_16.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_17.toArray()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True

def test_case_1138():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1139():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    var_2 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_4 = var_3.__str__()
    none_type_3 = None
    node_1 = module_0.Node(none_type_3)
    node_2 = module_0.Node(node_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_6 = var_4.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.getHead()
    str_7 = var_5.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_13.getHead()
    str_8 = var_6.__str__()
    int_3 = singly_linked_list_12.getSize()
    str_9 = singly_linked_list_13.__str__()
    assert str_9 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_14.getHead()
    int_4 = singly_linked_list_14.getSize()
    int_5 = 0
    node_6 = module_0.Node(int_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_10 = singly_linked_list_15.__str__()
    assert str_10 == '[None]'
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    str_11 = singly_linked_list_15.__str__()
    assert str_11 == '[None]'
    complex_0 = 1389 + 116.582j
    node_8 = module_0.Node(complex_0)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_12 = singly_linked_list_16.__str__()
    assert str_12 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_18.toArray()
    var_8 = singly_linked_list_17.getHead()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_18.getHeadNode()
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    none_type_5 = None
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_20.add(none_type_5)
    none_type_7 = singly_linked_list_20.add(none_type_5)
    list_1 = singly_linked_list_20.toArray()
    none_type_8 = singly_linked_list_14.add(none_type_3)

def test_case_1140():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_10.isEmpty()
    assert bool_6 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_13)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    var_2 = singly_linked_list_17.remove()
    bool_7 = False
    node_7 = module_0.Node(bool_7)
    node_8 = module_0.Node(node_7)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_8 = singly_linked_list_18.isEmpty()
    assert bool_8 is True
    var_3 = singly_linked_list_17.getHead()
    bool_9 = False
    node_9 = module_0.Node(bool_9)
    none_type_4 = None
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_19.add(none_type_4)
    str_7 = singly_linked_list_19.__str__()
    assert str_7 == '[None]'
    list_3 = singly_linked_list_19.toArray()
    var_4 = singly_linked_list_19.getHead()
    bool_10 = False
    node_10 = module_0.Node(bool_10)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_20.__str__()
    assert str_8 == '[None]'
    none_type_6 = singly_linked_list_20.add(singly_linked_list_20)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_2.remove()

def test_case_1141():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_4 = var_0.__str__()
    node_2 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = -1870
    node_3 = module_0.Node(int_2)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_4 = 0
    node_6 = module_0.Node(int_4)
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    node_8 = module_0.Node(singly_linked_list_3)

def test_case_1142():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.getHead()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    list_0 = singly_linked_list_1.toArray()
    var_2 = singly_linked_list_1.getHead()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_3)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    int_3 = singly_linked_list_7.getSize()
    assert int_3 == 1
    var_4 = singly_linked_list_7.getHead()
    dict_0 = {int_3: none_type_3, var_4: str_1}
    node_5 = module_0.Node(dict_0)
    str_2 = singly_linked_list_7.__str__()
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    int_5 = singly_linked_list_8.getSize()
    assert int_5 == 1
    node_7 = singly_linked_list_8.getHeadNode()
    str_4 = singly_linked_list_8.__str__()
    node_8 = singly_linked_list_8.getHeadNode()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_9.add(none_type_5)
    none_type_7 = singly_linked_list_9.add(none_type_5)
    list_3 = singly_linked_list_9.toArray()
    var_5 = singly_linked_list_9.getHead()
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    bool_5 = False
    node_11 = module_0.Node(bool_5)
    none_type_8 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_10.add(none_type_8)
    var_6 = singly_linked_list_10.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1143():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_1.remove()
    node_0 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_2.getHead()
    dict_0 = {int_0: none_type_0, var_1: str_2}
    node_2 = module_0.Node(dict_0)
    node_3 = singly_linked_list_2.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    node_5 = singly_linked_list_3.getHeadNode()
    str_3 = var_2.__str__()

def test_case_1144():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()

def test_case_1145():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    int_4 = singly_linked_list_9.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_9.getHeadNode()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is False
    str_2 = singly_linked_list_9.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.getHead()
    str_4 = var_4.__str__()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(none_type_1)
    none_type_3 = singly_linked_list_12.add(none_type_1)
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is False
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_6.getHead()

def test_case_1146():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_3.getHead()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    str_4 = var_3.__str__()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    var_5 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_14.add(singly_linked_list_14)
    int_3 = singly_linked_list_14.getSize()
    assert int_3 == 1
    node_8 = singly_linked_list_14.getHeadNode()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is False
    node_9 = singly_linked_list_7.getHeadNode()

def test_case_1147():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_4.toArray()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    bool_4 = singly_linked_list_5.isEmpty()
    assert bool_4 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_2 = var_1.__str__()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_6 = singly_linked_list_8.add(str_3)
    node_5 = singly_linked_list_8.getHeadNode()
    assert node_5.value == '[None]'
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    none_type_7 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_9.add(none_type_7)
    none_type_9 = singly_linked_list_9.add(none_type_7)
    list_3 = singly_linked_list_9.toArray()
    var_2 = singly_linked_list_9.getHead()
    list_4 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_10.toArray()
    node_7 = module_0.Node(singly_linked_list_10)
    bool_7 = singly_linked_list_7.isEmpty()
    assert bool_7 is True

def test_case_1148():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    node_5 = module_0.Node(singly_linked_list_6)
    bool_0 = False
    node_6 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    var_3 = singly_linked_list_7.getHead()
    node_7 = module_0.Node(var_0)
    assert node_7.value is None

def test_case_1149():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_12.add(none_type_0)
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    none_type_2 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(none_type_2)
    none_type_4 = singly_linked_list_13.add(none_type_2)
    var_3 = singly_linked_list_13.getHead()
    int_3 = 719
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_14.add(int_3)
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'

def test_case_1150():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    node_5 = singly_linked_list_5.getHeadNode()

def test_case_1151():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_6.getHead()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_7)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_10.remove()
    var_2 = singly_linked_list_8.getHead()

def test_case_1152():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_2 = singly_linked_list_1.add(str_1)
    node_0 = singly_linked_list_1.getHeadNode()
    assert node_0.value == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    str_2 = 'P{"'
    node_6 = module_0.Node(str_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    bool_1 = False
    node_8 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_2 = False
    node_9 = module_0.Node(bool_2)
    bool_3 = False
    node_10 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_8.add(none_type_4)
    var_2 = singly_linked_list_8.getHead()
    node_11 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_11).__module__}.{type(node_11).__qualname__}' == 'linkedList3.Node'
    assert node_11.value is None
    assert node_11.next is None

def test_case_1153():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_1 = var_1.__str__()
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    int_3 = singly_linked_list_4.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_4.getHeadNode()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is False
    str_3 = singly_linked_list_4.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_8.remove()
    node_5 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    node_7 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.getHead()
    str_6 = var_5.__str__()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_14.getHead()
    int_5 = 0
    node_9 = module_0.Node(int_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_14.isEmpty()
    assert bool_2 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_10 = module_0.Node(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_17.isEmpty()
    assert bool_3 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_18.__str__()
    assert str_7 == '[None]'
    node_11 = singly_linked_list_17.getHeadNode()
    int_6 = singly_linked_list_17.getSize()
    int_7 = 0
    node_12 = module_0.Node(int_7)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_1.__str__()
    assert str_8 == '[None]'

def test_case_1154():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()
    node_3 = module_0.Node(node_2)

def test_case_1155():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    str_2 = singly_linked_list_0.__str__()
    assert str_2 == '[None]'

def test_case_1156():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_1.getHead()
    dict_0 = {int_0: none_type_3, var_1: str_0}
    node_1 = module_0.Node(dict_0)
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    list_2 = singly_linked_list_4.toArray()

def test_case_1157():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'

def test_case_1158():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    int_4 = singly_linked_list_10.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.getHead()
    str_5 = var_3.__str__()
    int_5 = singly_linked_list_11.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_3.getHead()
    bool_3 = var_4.isEmpty()
    assert bool_3 is False

def test_case_1159():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    str_1 = var_0.__str__()
    int_3 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    int_4 = singly_linked_list_7.getSize()
    assert int_4 == 1
    var_1 = singly_linked_list_7.getHead()
    dict_0 = {int_4: none_type_2, var_1: str_2}
    node_7 = module_0.Node(dict_0)
    str_3 = singly_linked_list_7.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_4 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_6 = var_4.__str__()
    node_9 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True

def test_case_1160():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    node_1 = singly_linked_list_3.getHeadNode()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    var_1 = singly_linked_list_5.remove()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    str_3 = 'P{"'
    node_6 = module_0.Node(str_3)
    none_type_2 = singly_linked_list_8.add(none_type_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_11.getHeadNode()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_11.add(none_type_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    var_2 = singly_linked_list_13.getHead()
    node_8 = module_0.Node(str_6)
    assert node_8.value == '[None]'
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    node_10 = singly_linked_list_7.getHeadNode()

def test_case_1161():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True

def test_case_1162():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_4.add(none_type_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    dict_0 = {}
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(dict_0)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    bool_0 = singly_linked_list_10.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_11.remove()
    bool_1 = singly_linked_list_11.isEmpty()
    assert bool_1 is True
    var_4 = singly_linked_list_11.getHead()
    int_3 = singly_linked_list_3.getSize()
    assert int_3 == 1

def test_case_1163():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    var_0 = singly_linked_list_1.getHead()
    assert var_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    none_type_2 = singly_linked_list_2.add(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_4.remove()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    var_5 = singly_linked_list_5.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_8.add(str_4)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    none_type_4 = None
    node_6 = module_0.Node(none_type_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = -1870
    node_7 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_5 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_6 = singly_linked_list_11.add(str_6)
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    var_7 = singly_linked_list_13.getHead()
    list_2 = singly_linked_list_13.toArray()
    var_8 = singly_linked_list_0.remove()

def test_case_1164():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    node_2 = singly_linked_list_4.getHeadNode()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    int_1 = singly_linked_list_8.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_8.getHeadNode()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is False
    str_3 = singly_linked_list_8.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    str_4 = var_2.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(str_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_12.add(singly_linked_list_12)
    none_type_3 = singly_linked_list_12.add(str_5)
    var_3 = singly_linked_list_12.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value == '[None]'
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_7 = var_4.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_15.getSize()
    none_type_5 = singly_linked_list_15.add(none_type_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_16.__str__()
    assert str_8 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_18.remove()
    bool_3 = singly_linked_list_18.isEmpty()
    assert bool_3 is True
    var_6 = singly_linked_list_16.remove()
    singly_linked_list_19 = module_0.SinglyLinkedList()

def test_case_1165():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_2 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    node_4 = module_0.Node(node_3)
    none_type_1 = singly_linked_list_0.add(var_0)
    assert f'{type(node_2.next).__module__}.{type(node_2.next).__qualname__}' == 'linkedList3.Node'

def test_case_1166():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    list_0 = singly_linked_list_2.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_2.add(list_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    node_3 = module_0.Node(int_0)

def test_case_1167():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_3.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    node_2 = module_0.Node(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_3.getHead()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'

def test_case_1168():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    node_3 = singly_linked_list_2.getHeadNode()

def test_case_1169():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    var_0 = singly_linked_list_2.remove()

def test_case_1170():
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_5 = singly_linked_list_5.add(str_1)
    node_2 = singly_linked_list_5.getHeadNode()
    assert node_2.value == '[None]'
    int_1 = singly_linked_list_2.getSize()

def test_case_1171():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_3)
    node_0 = module_0.Node(none_type_1)

def test_case_1172():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    str_2 = var_0.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(str_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    var_3 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_0 = singly_linked_list_9.getSize()
    assert int_0 == 1
    var_4 = singly_linked_list_9.getHead()
    dict_0 = {int_0: none_type_2, var_4: str_4}
    node_2 = module_0.Node(dict_0)
    str_5 = singly_linked_list_9.__str__()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.remove()
    str_6 = var_6.__str__()
    none_type_3 = singly_linked_list_10.add(node_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    var_7 = singly_linked_list_12.remove()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    node_5 = module_0.Node(node_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    var_8 = singly_linked_list_12.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(singly_linked_list_15)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_16.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_17.add(singly_linked_list_15)
    var_9 = singly_linked_list_16.remove()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_18.toArray()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_19.add(none_type_6)
    var_10 = singly_linked_list_18.getHead()
    singly_linked_list_20 = module_0.SinglyLinkedList()

def test_case_1173():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'

def test_case_1174():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    var_2 = singly_linked_list_3.getHead()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_11.add(singly_linked_list_9)
    var_3 = singly_linked_list_10.remove()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_5 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_12.add(none_type_5)
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    list_0 = singly_linked_list_12.toArray()
    var_4 = singly_linked_list_12.getHead()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_15.getHeadNode()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()

def test_case_1175():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    none_type_1 = singly_linked_list_6.add(node_0)

def test_case_1176():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_5.isEmpty()
    assert bool_5 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_8.isEmpty()
    assert bool_6 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    var_3 = singly_linked_list_11.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    var_4 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_5 = singly_linked_list_13.add(str_4)
    node_5 = singly_linked_list_6.getHeadNode()

def test_case_1177():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_5 = singly_linked_list_7.add(str_3)
    node_1 = singly_linked_list_7.getHeadNode()
    assert node_1.value == '[None]'
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = 'P{"'
    node_3 = module_0.Node(str_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_11.getSize()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    int_2 = singly_linked_list_11.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.remove()
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_14.remove()
    none_type_6 = singly_linked_list_15.add(singly_linked_list_14)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_19.isEmpty()
    assert bool_5 is True
    node_7 = module_0.Node(singly_linked_list_17)
    singly_linked_list_20 = module_0.SinglyLinkedList()

def test_case_1178():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    var_2 = singly_linked_list_3.getHead()
    dict_0 = {int_1: none_type_0, var_2: str_1}
    node_2 = module_0.Node(dict_0)
    str_2 = singly_linked_list_3.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_3)
    var_3 = singly_linked_list_4.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value == '[None]'
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is False

def test_case_1179():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    int_1 = singly_linked_list_8.getSize()
    assert int_1 == 1
    var_2 = singly_linked_list_8.getHead()
    dict_0 = {int_1: none_type_3, var_2: str_3}
    node_1 = module_0.Node(dict_0)
    str_4 = singly_linked_list_8.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_9.remove()
    str_6 = 'P{"'
    node_2 = module_0.Node(str_6)
    node_3 = module_0.Node(var_2)

def test_case_1180():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    node_0 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_6.remove()

def test_case_1181():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    var_0 = singly_linked_list_0.getHead()
    list_0 = var_0.toArray()

def test_case_1182():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True

def test_case_1183():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    node_6 = singly_linked_list_8.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    node_7 = singly_linked_list_8.getHeadNode()
    list_1 = singly_linked_list_8.toArray()

def test_case_1184():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    node_1 = module_0.Node(singly_linked_list_2)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    node_3 = module_0.Node(node_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()

def test_case_1185():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    str_0 = var_0.__str__()
    int_2 = singly_linked_list_5.getSize()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()

def test_case_1186():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_1 = module_0.Node(list_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(node_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    var_2 = singly_linked_list_5.remove()
    int_3 = -1870
    node_5 = module_0.Node(int_3)
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    int_5 = singly_linked_list_8.getSize()
    assert int_5 == 1
    node_7 = singly_linked_list_8.getHeadNode()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is False
    str_2 = singly_linked_list_8.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    int_6 = 0
    node_8 = module_0.Node(int_6)
    var_4 = singly_linked_list_9.remove()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True

def test_case_1187():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    node_1 = module_0.Node(str_0)
    assert node_1.value == '[None]'

def test_case_1188():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    node_3 = singly_linked_list_2.getHeadNode()
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    str_0 = var_2.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(str_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_5 = singly_linked_list_5.add(str_1)
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_10.add(singly_linked_list_8)
    node_4 = module_0.Node(var_0)

def test_case_1189():
    dict_0 = {}
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(dict_0)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_4.remove()
    node_1 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    var_1 = singly_linked_list_2.remove()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    node_3 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True

def test_case_1190():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_2)
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_1191():
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False

def test_case_1192():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_2 = module_0.Node(var_0)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    list_1 = singly_linked_list_4.toArray()
    int_1 = 719
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(int_1)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()

def test_case_1193():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    none_type_1 = singly_linked_list_0.add(dict_0)

def test_case_1194():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_3 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_9.remove()
    node_3 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_10.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_5 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_1195():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    node_0 = singly_linked_list_0.getHeadNode()
    assert node_0.value == '[None]'
    str_1 = singly_linked_list_0.__str__()

def test_case_1196():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_1 = var_1.__str__()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()

def test_case_1197():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    node_3 = module_0.Node(var_2)
    node_4 = singly_linked_list_8.getHeadNode()
    int_3 = 719
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(int_3)
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    list_1 = singly_linked_list_12.toArray()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    none_type_4 = None
    node_7 = module_0.Node(none_type_4)
    node_8 = module_0.Node(node_7)
    int_4 = 0
    node_9 = module_0.Node(int_4)
    none_type_5 = None
    node_10 = module_0.Node(none_type_5)
    str_4 = var_3.__str__()

def test_case_1198():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(str_0)
    int_0 = singly_linked_list_2.getSize()

def test_case_1199():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'

def test_case_1200():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_4)
    var_1 = singly_linked_list_5.remove()
    var_2 = singly_linked_list_5.getHead()

def test_case_1201():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_2.add(str_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    node_1 = module_0.Node(var_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_2 = module_0.Node(bytes_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_3)
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    assert int_1 == 2

def test_case_1202():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    var_2 = singly_linked_list_6.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_4 = singly_linked_list_9.getSize()
    assert int_4 == 1
    node_5 = singly_linked_list_9.getHeadNode()
    str_4 = singly_linked_list_9.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    node_6 = module_0.Node(var_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    var_5 = singly_linked_list_14.remove()
    bool_0 = singly_linked_list_14.isEmpty()
    assert bool_0 is True
    var_6 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_15.isEmpty()
    assert bool_1 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_17.toArray()
    var_7 = singly_linked_list_16.getHead()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_11.__str__()
    assert str_8 == '[None]'

def test_case_1203():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(singly_linked_list_2)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_4 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_5.add(none_type_4)
    str_2 = 'P{"'
    node_1 = module_0.Node(str_2)
    none_type_6 = singly_linked_list_5.add(none_type_5)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_7 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    var_0 = singly_linked_list_9.getHead()
    dict_0 = {int_1: none_type_7, var_0: str_4}
    node_4 = module_0.Node(dict_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_12.getHeadNode()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    none_type_9 = singly_linked_list_12.add(none_type_8)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_13.getSize()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    int_3 = singly_linked_list_13.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.getHead()
    node_8 = singly_linked_list_12.getHeadNode()

def test_case_1204():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_13.add(singly_linked_list_11)
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'

def test_case_1205():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_2 = singly_linked_list_1.add(str_1)
    node_2 = singly_linked_list_1.getHeadNode()
    assert node_2.value == '[None]'
    str_2 = singly_linked_list_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_5 = var_3.__str__()
    none_type_6 = None
    node_4 = module_0.Node(none_type_6)
    node_5 = module_0.Node(node_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_7 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_14.__str__()
    assert str_8 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    none_type_8 = None
    node_8 = module_0.Node(none_type_8)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_9 = None
    node_9 = module_0.Node(none_type_9)
    var_4 = singly_linked_list_10.getHead()

def test_case_1206():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'

def test_case_1207():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()

def test_case_1208():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_2 = 'P{"'
    node_4 = module_0.Node(str_2)
    none_type_3 = singly_linked_list_1.add(none_type_2)
    str_3 = singly_linked_list_1.__str__()
    assert str_3 == '[None, None]'

def test_case_1209():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    node_1 = module_0.Node(var_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_11.getHeadNode()
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_12.remove()
    node_5 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    node_6 = module_0.Node(var_3)
    assert node_6.value is None
    str_4 = var_2.__str__()

def test_case_1210():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    bytes_0 = b'7\x95\xca\xb9\xe3\xec\xa6\xe3\n\xf8\x7f\x1f\xe9&'
    none_type_2 = singly_linked_list_1.add(bytes_0)

def test_case_1211():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    node_1 = module_0.Node(singly_linked_list_5)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    str_6 = var_2.__str__()
    assert str_6 == 'None'
    var_3 = singly_linked_list_11.getHead()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True

def test_case_1212():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_0 = module_0.Node(var_0)
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_8.remove()
    node_2 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    var_2 = singly_linked_list_6.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_9.getHeadNode()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is False
    str_4 = singly_linked_list_9.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_1213():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    node_3 = singly_linked_list_6.getHeadNode()
    var_2 = singly_linked_list_3.remove()
    none_type_4 = singly_linked_list_2.add(var_2)

def test_case_1214():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_4 = singly_linked_list_4.add(str_0)
    node_2 = singly_linked_list_4.getHeadNode()
    assert node_2.value == '[None]'
    str_1 = singly_linked_list_4.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    none_type_5 = None
    node_3 = module_0.Node(none_type_5)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    var_2 = singly_linked_list_9.remove()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    none_type_7 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_12.add(none_type_7)
    none_type_9 = singly_linked_list_12.add(none_type_7)
    bool_5 = False
    node_9 = module_0.Node(bool_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    str_3 = var_3.__str__()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    var_4 = singly_linked_list_14.remove()
    node_10 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_10).__module__}.{type(node_10).__qualname__}' == 'linkedList3.Node'
    assert node_10.value is None
    assert node_10.next is None
    node_11 = module_0.Node(var_4)
    assert node_11.value is None
    node_12 = module_0.Node(node_11)

def test_case_1215():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.remove()

def test_case_1216():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_4)
    var_1 = singly_linked_list_5.remove()
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_7 = singly_linked_list_8.add(str_3)
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    str_4 = var_2.__str__()
    int_2 = -1870
    node_1 = module_0.Node(int_2)
    node_2 = module_0.Node(node_1)
    str_5 = singly_linked_list_6.__str__()

def test_case_1217():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    str_1 = singly_linked_list_0.__str__()
    int_1 = var_0.getSize()
    assert int_1 == 1

def test_case_1218():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    node_1 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    node_3 = module_0.Node(singly_linked_list_5)
    int_1 = singly_linked_list_7.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(none_type_2)
    var_2 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_6.toArray()

def test_case_1219():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_2)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_7 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_8 = singly_linked_list_6.add(str_4)
    var_1 = singly_linked_list_6.getHead()
    assert var_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    node_1 = module_0.Node(var_2)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_9 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_10 = singly_linked_list_8.add(none_type_9)
    none_type_11 = singly_linked_list_8.add(none_type_9)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    var_4 = singly_linked_list_10.getHead()
    list_1 = singly_linked_list_11.toArray()
    var_5 = singly_linked_list_9.getHead()

def test_case_1220():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    str_3 = var_3.__str__()
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_5 = var_4.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_14.getSize()
    bool_2 = singly_linked_list_15.isEmpty()
    assert bool_2 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_16.getHeadNode()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_17.getHead()
    str_6 = var_5.__str__()
    int_6 = singly_linked_list_16.getSize()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_18.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_18.add(singly_linked_list_18)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_19.__str__()
    assert str_8 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    singly_linked_list_22 = module_0.SinglyLinkedList()

def test_case_1221():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_2 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()
    node_4 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True

def test_case_1222():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = singly_linked_list_3.getSize()
    assert int_0 == 1
    var_2 = singly_linked_list_3.getHead()
    dict_0 = {int_0: none_type_0, var_2: str_1}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_3.getHeadNode()
    none_type_1 = singly_linked_list_3.add(dict_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_7)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_11.add(singly_linked_list_14)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_6 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_16.add(none_type_6)
    str_8 = singly_linked_list_16.__str__()
    assert str_8 == '[None]'
    list_0 = singly_linked_list_16.toArray()
    var_4 = singly_linked_list_16.getHead()
    int_1 = 719
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_17.add(int_1)
    node_5 = module_0.Node(none_type_2)

def test_case_1223():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1224():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1225():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()

def test_case_1226():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    list_0 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_9.remove()
    node_4 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_15.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_15.add(singly_linked_list_15)
    int_5 = singly_linked_list_15.getSize()
    assert int_5 == 1
    node_7 = singly_linked_list_15.getHeadNode()
    var_3 = singly_linked_list_15.getHead()
    list_1 = var_3.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_17.__str__()
    assert str_5 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    node_8 = module_0.Node(singly_linked_list_17)
    none_type_5 = singly_linked_list_4.add(singly_linked_list_12)

def test_case_1227():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    var_0 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_8.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()

def test_case_1228():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    str_2 = 'P{"'
    node_4 = module_0.Node(str_2)
    none_type_4 = singly_linked_list_4.add(none_type_3)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_6 = module_0.Node(var_1)
    node_7 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_7.getHeadNode()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_3 = var_2.__str__()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_9.getHeadNode()
    node_11 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_12 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_15.toArray()
    none_type_5 = None
    node_13 = module_0.Node(none_type_5)
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_16.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_5 = var_4.__str__()
    str_6 = singly_linked_list_8.__str__()
    assert str_6 == '[None]'

def test_case_1229():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()

def test_case_1230():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    str_3 = singly_linked_list_2.__str__()
    node_3 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    node_5 = module_0.Node(node_4)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_6 = module_0.Node(var_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True

def test_case_1231():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    none_type_3 = None
    node_8 = module_0.Node(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    str_2 = var_4.__str__()
    assert str_2 == 'None'
    none_type_4 = singly_linked_list_11.add(str_2)
    var_5 = singly_linked_list_2.remove()

def test_case_1232():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    var_3 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_3 = var_4.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    none_type_1 = singly_linked_list_12.add(none_type_0)
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(none_type_2)
    none_type_4 = singly_linked_list_13.add(none_type_2)
    list_0 = singly_linked_list_13.toArray()
    var_5 = singly_linked_list_13.getHead()
    list_1 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_14.add(singly_linked_list_14)
    none_type_6 = singly_linked_list_14.add(str_4)
    var_6 = singly_linked_list_14.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert var_6.value == '[None]'
    assert f'{type(var_6.next).__module__}.{type(var_6.next).__qualname__}' == 'linkedList3.Node'
    int_2 = 719
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_15.add(int_2)
    bool_2 = singly_linked_list_0.isEmpty()
    assert bool_2 is True

def test_case_1233():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_1.getHeadNode()

def test_case_1234():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_1235():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_1)
    node_0 = singly_linked_list_1.getHeadNode()
    assert node_0.value == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    list_3 = singly_linked_list_6.toArray()
    node_4 = singly_linked_list_6.getHeadNode()
    node_5 = singly_linked_list_3.getHeadNode()
    node_6 = module_0.Node(node_5)

def test_case_1236():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_5.toArray()
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    node_4 = module_0.Node(var_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_1 = [bytes_0]
    node_5 = module_0.Node(list_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(node_5)
    list_2 = singly_linked_list_5.toArray()

def test_case_1237():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    node_1 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_3 = var_2.__str__()
    int_0 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_16.remove()
    node_4 = singly_linked_list_16.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    var_4 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_17.getHead()
    node_5 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_19.toArray()
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_20.__str__()
    assert str_7 == '[None]'
    singly_linked_list_21 = module_0.SinglyLinkedList()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_22.remove()
    bool_5 = singly_linked_list_22.isEmpty()
    assert bool_5 is True
    var_7 = singly_linked_list_20.remove()
    singly_linked_list_23 = module_0.SinglyLinkedList()

def test_case_1238():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_1 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_3.getHead()
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    list_4 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()

def test_case_1239():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    node_1 = singly_linked_list_3.getHeadNode()
    assert node_1.value == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    list_0 = singly_linked_list_4.toArray()
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    none_type_6 = None
    node_5 = module_0.Node(none_type_6)
    node_6 = module_0.Node(node_5)
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    none_type_7 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_7.add(none_type_7)
    var_4 = singly_linked_list_7.getHead()
    list_1 = singly_linked_list_7.toArray()

def test_case_1240():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_4 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    int_2 = singly_linked_list_2.getSize()
    assert int_2 == 1
    var_1 = singly_linked_list_2.getHead()
    dict_0 = {int_2: none_type_1, var_1: str_0}
    node_5 = module_0.Node(dict_0)
    str_1 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_10 = module_0.Node(none_type_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    none_type_3 = None
    node_11 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(var_1)

def test_case_1241():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    none_type_3 = singly_linked_list_6.add(none_type_1)
    list_0 = singly_linked_list_6.toArray()
    var_0 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_9.add(singly_linked_list_12)
    none_type_7 = singly_linked_list_10.add(node_3)

def test_case_1242():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_8.getSize()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    int_5 = singly_linked_list_10.getSize()
    assert int_5 == 1
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    int_6 = singly_linked_list_11.getSize()
    str_4 = 'P{"'
    node_5 = module_0.Node(str_4)
    none_type_3 = singly_linked_list_2.add(none_type_1)

def test_case_1243():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_1)

def test_case_1244():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    str_0 = 'P{"'
    node_2 = module_0.Node(str_0)
    none_type_5 = singly_linked_list_2.add(none_type_4)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_3.remove()

def test_case_1245():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    node_4 = singly_linked_list_3.getHeadNode()

def test_case_1246():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    list_0 = singly_linked_list_4.toArray()
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_6 = singly_linked_list_5.add(str_1)
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    str_2 = var_3.__str__()
    assert str_2 == 'None'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_5 = singly_linked_list_10.getHead()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    list_3 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_15.getHeadNode()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_16.getHead()
    str_5 = var_6.__str__()
    int_3 = singly_linked_list_15.getSize()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    var_7 = singly_linked_list_7.remove()

def test_case_1247():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_3.getHeadNode()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    str_2 = singly_linked_list_3.__str__()
    list_0 = singly_linked_list_1.toArray()

def test_case_1248():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_0 = singly_linked_list_3.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_3.add(list_1)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_4 = module_0.Node(bytes_0)
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_4.add(none_type_4)
    none_type_6 = singly_linked_list_4.add(none_type_4)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_6.remove()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_6.getHead()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    none_type_7 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_7.add(none_type_7)
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    list_2 = singly_linked_list_7.toArray()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    node_8 = module_0.Node(var_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    bool_6 = False
    node_9 = module_0.Node(bool_6)
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    node_10 = singly_linked_list_6.getHeadNode()

def test_case_1249():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    node_1 = module_0.Node(singly_linked_list_2)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_1 = [bytes_0]
    node_2 = module_0.Node(list_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_10.toArray()
    none_type_2 = None
    node_4 = module_0.Node(none_type_2)
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_9.remove()
    none_type_3 = singly_linked_list_6.add(node_0)

def test_case_1250():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 719
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_5.remove()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_3 = singly_linked_list_8.add(str_1)
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    node_3 = module_0.Node(var_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    node_4 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None

def test_case_1251():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(singly_linked_list_4)
    int_2 = 719
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(int_2)
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_9)
    int_3 = singly_linked_list_11.getSize()

def test_case_1252():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    var_3 = singly_linked_list_4.remove()
    node_3 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    node_4 = singly_linked_list_5.getHeadNode()
    int_0 = singly_linked_list_5.getSize()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    int_2 = 0
    node_7 = module_0.Node(int_2)
    none_type_3 = None
    node_8 = module_0.Node(none_type_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    bool_6 = False
    node_9 = module_0.Node(bool_6)
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    var_5 = singly_linked_list_11.remove()
    bool_7 = singly_linked_list_11.isEmpty()
    assert bool_7 is True
    var_6 = singly_linked_list_11.getHead()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'

def test_case_1253():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    dict_0 = {}
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(dict_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_3.add(str_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_3 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    node_4 = module_0.Node(node_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_5 = module_0.Node(list_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(node_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_11)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 0

def test_case_1254():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    str_0 = 'P{"'
    node_3 = module_0.Node(str_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    none_type_0 = singly_linked_list_7.add(node_5)
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    node_7 = module_0.Node(node_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    var_4 = singly_linked_list_9.remove()
    none_type_1 = singly_linked_list_1.add(node_2)

def test_case_1255():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    list_1 = singly_linked_list_5.toArray()
    list_2 = []
    none_type_3 = singly_linked_list_5.add(list_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_6.remove()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    node_5 = module_0.Node(node_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    str_1 = var_3.__str__()
    var_4 = singly_linked_list_9.remove()
    int_2 = -1870
    node_6 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    node_8 = singly_linked_list_10.getHeadNode()
    bool_5 = singly_linked_list_3.isEmpty()
    assert bool_5 is True

def test_case_1256():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_2 = singly_linked_list_7.add(str_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    node_3 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_5 = singly_linked_list_13.add(str_4)
    node_5 = singly_linked_list_13.getHeadNode()
    assert node_5.value == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    node_6 = singly_linked_list_14.getHeadNode()
    int_4 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    none_type_6 = singly_linked_list_16.add(singly_linked_list_16)
    int_5 = singly_linked_list_16.getSize()
    assert int_5 == 1
    var_5 = singly_linked_list_16.getHead()
    dict_0 = {int_5: none_type_6, var_5: str_6}
    node_7 = module_0.Node(dict_0)
    str_7 = singly_linked_list_16.__str__()
    int_6 = var_5.getSize()
    assert int_6 == 1
    str_8 = singly_linked_list_12.__str__()
    assert str_8 == '[None]'

def test_case_1257():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_1.remove()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_1)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    str_1 = 'P{"'
    node_2 = module_0.Node(str_1)
    none_type_4 = singly_linked_list_4.add(none_type_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1258():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    var_3 = singly_linked_list_11.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(bool_2)

def test_case_1259():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()

def test_case_1260():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1261():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    node_2 = module_0.Node(bool_0)
    assert node_2.value is True

def test_case_1262():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_0 = var_0.__str__()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    node_5 = module_0.Node(none_type_0)

def test_case_1263():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    node_2 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_5.add(str_3)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_6 = module_0.Node(none_type_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_11.add(none_type_3)
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_12.getSize()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    var_2 = singly_linked_list_12.getHead()

def test_case_1264():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_3.toArray()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    list_1 = singly_linked_list_4.toArray()

def test_case_1265():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_1 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    node_5 = module_0.Node(node_0)

def test_case_1266():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    node_2 = module_0.Node(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    node_4 = module_0.Node(singly_linked_list_5)
    node_5 = module_0.Node(bool_4)
    assert node_5.value is True
    dict_0 = {}
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_8.add(dict_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    str_3 = var_2.__str__()
    node_6 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    none_type_2 = None
    node_8 = module_0.Node(none_type_2)
    bool_5 = False
    node_9 = module_0.Node(bool_5)
    none_type_3 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(none_type_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    node_10 = module_0.Node(var_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_16.remove()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    var_5 = singly_linked_list_14.remove()
    none_type_5 = singly_linked_list_15.add(singly_linked_list_14)
    int_2 = singly_linked_list_12.getSize()
    assert int_2 == 1

def test_case_1267():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    node_1 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_8)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_6 = var_3.__str__()
    none_type_5 = None
    node_2 = module_0.Node(none_type_5)
    node_3 = module_0.Node(node_2)
    node_4 = singly_linked_list_3.getHeadNode()

def test_case_1268():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_3.getHead()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_6.getHead()
    str_2 = var_4.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_8.remove()

def test_case_1269():
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    node_0 = module_0.Node(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_2)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    node_3 = module_0.Node(node_2)
    node_4 = module_0.Node(node_3)

def test_case_1270():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = singly_linked_list_3.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_3.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_1}
    node_0 = module_0.Node(dict_0)
    str_2 = singly_linked_list_3.__str__()
    int_1 = var_0.getSize()
    assert int_1 == 1
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    node_4 = singly_linked_list_7.getHeadNode()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    node_5 = module_0.Node(var_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_12.add(singly_linked_list_12)
    int_4 = singly_linked_list_12.getSize()
    assert int_4 == 1
    node_7 = singly_linked_list_12.getHeadNode()
    node_8 = module_0.Node(var_1)

def test_case_1271():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_2.getHead()
    dict_0 = {int_0: none_type_3, var_0: str_2}
    node_2 = module_0.Node(dict_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_4 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    none_type_5 = singly_linked_list_5.add(none_type_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_6 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_8.add(none_type_6)
    none_type_8 = singly_linked_list_8.add(none_type_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_9 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_10)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_16.remove()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    var_3 = singly_linked_list_14.getHead()
    list_0 = singly_linked_list_15.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_1272():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_4.toArray()
    int_2 = 719
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(int_2)
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    none_type_3 = singly_linked_list_7.add(none_type_1)
    bool_5 = singly_linked_list_7.isEmpty()
    assert bool_5 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    var_2 = singly_linked_list_0.getHead()

def test_case_1273():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    int_3 = 0
    node_5 = module_0.Node(int_3)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    node_7 = singly_linked_list_10.getHeadNode()

def test_case_1274():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    list_1 = singly_linked_list_6.toArray()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(bool_2)
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    list_3 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_7 = module_0.Node(singly_linked_list_15)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_19.getHead()
    str_7 = var_0.__str__()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_20.__str__()
    assert str_8 == '[None]'
    none_type_5 = singly_linked_list_20.add(singly_linked_list_20)
    int_4 = singly_linked_list_20.getSize()
    assert int_4 == 1
    node_9 = singly_linked_list_20.getHeadNode()
    var_1 = singly_linked_list_20.getHead()
    list_4 = var_1.toArray()
    int_5 = singly_linked_list_12.getSize()

def test_case_1275():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_7.getHead()
    str_1 = var_1.__str__()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_8.getHeadNode()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    dict_0 = {}
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_15.add(dict_0)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_18.getHeadNode()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_19.getSize()
    bool_3 = singly_linked_list_20.isEmpty()
    assert bool_3 is True
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_21 = module_0.SinglyLinkedList()

def test_case_1276():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'

def test_case_1277():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_4.add(str_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_1 = module_0.Node(var_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.remove()
    str_2 = var_5.__str__()
    assert str_2 == 'None'
    var_6 = singly_linked_list_12.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_15.remove()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_8 = singly_linked_list_13.getHead()
    list_1 = singly_linked_list_14.toArray()
    none_type_1 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_16.add(none_type_1)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_17.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_9 = singly_linked_list_17.remove()
    str_5 = var_9.__str__()
    none_type_4 = None
    node_8 = module_0.Node(none_type_4)
    node_9 = module_0.Node(node_8)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_19.getHeadNode()

def test_case_1278():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    node_2 = module_0.Node(node_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 0

def test_case_1279():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_3 = module_0.Node(singly_linked_list_3)

def test_case_1280():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    bool_0 = False
    node_5 = module_0.Node(bool_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.getHead()
    str_2 = var_0.__str__()
    int_0 = singly_linked_list_7.getSize()
    node_6 = singly_linked_list_2.getHeadNode()

def test_case_1281():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    node_6 = singly_linked_list_7.getHeadNode()
    var_3 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.getHead()
    str_1 = var_4.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(str_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_10.getSize()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    int_1 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_15.toArray()
    var_5 = singly_linked_list_14.getHead()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_17.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_17.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_6.value).__module__}.{type(var_6.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_6.next is None
    str_4 = var_6.__str__()
    node_9 = singly_linked_list_17.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    singly_linked_list_19 = module_0.SinglyLinkedList()

def test_case_1282():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_4 = var_1.__str__()
    assert str_4 == 'None'

def test_case_1283():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_8.getHead()
    int_5 = -1870
    node_7 = module_0.Node(int_5)
    node_8 = module_0.Node(node_7)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    node_9 = module_0.Node(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_10 = module_0.Node(singly_linked_list_10)
    bool_4 = False
    node_11 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_11.add(none_type_1)
    none_type_3 = singly_linked_list_11.add(none_type_1)
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()

def test_case_1284():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    list_0 = singly_linked_list_1.toArray()

def test_case_1285():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    str_4 = var_2.__str__()
    int_1 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    node_4 = module_0.Node(var_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    int_2 = singly_linked_list_13.getSize()
    assert int_2 == 1
    var_5 = singly_linked_list_13.getHead()
    dict_0 = {int_2: none_type_1, var_5: str_5}
    node_5 = module_0.Node(dict_0)
    node_6 = singly_linked_list_13.getHeadNode()
    none_type_2 = singly_linked_list_13.add(dict_0)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    node_8 = module_0.Node(singly_linked_list_14)
    int_4 = 0
    node_9 = module_0.Node(int_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_17.add(singly_linked_list_17)
    int_5 = singly_linked_list_17.getSize()
    assert int_5 == 1
    node_10 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_6 = singly_linked_list_18.getSize()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_19.__str__()
    assert str_7 == '[None]'
    none_type_4 = singly_linked_list_19.add(singly_linked_list_19)
    none_type_5 = singly_linked_list_19.add(str_7)
    var_6 = singly_linked_list_1.remove()

def test_case_1286():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_3 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    var_3 = singly_linked_list_8.getHead()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_9.add(singly_linked_list_9)
    int_5 = singly_linked_list_9.getSize()
    assert int_5 == 1
    node_8 = singly_linked_list_9.getHeadNode()
    str_3 = singly_linked_list_9.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    none_type_7 = singly_linked_list_10.add(str_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_6 = singly_linked_list_12.getSize()
    bool_5 = False
    node_11 = module_0.Node(bool_5)
    int_7 = singly_linked_list_12.getSize()
    node_12 = module_0.Node(none_type_0)

def test_case_1287():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_2 = module_0.Node(dict_0)
    node_3 = singly_linked_list_0.getHeadNode()
    none_type_1 = singly_linked_list_0.add(dict_0)
    str_1 = 'P{"'
    node_4 = module_0.Node(str_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_1.getHeadNode()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_2 = var_1.__str__()
    int_1 = singly_linked_list_1.getSize()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    int_2 = 719
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_3 = singly_linked_list_4.remove()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(none_type_3)
    none_type_5 = singly_linked_list_6.add(none_type_3)
    var_4 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_7.getHeadNode()
    node_10 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_8.getSize()
    var_5 = singly_linked_list_7.remove()
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_10.remove()
    str_5 = var_6.__str__()
    assert str_5 == 'None'
    int_5 = 0
    node_12 = module_0.Node(int_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = var_6.__str__()
    assert str_6 == 'None'
    var_7 = singly_linked_list_1.getHead()

def test_case_1288():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    node_2 = singly_linked_list_0.getHeadNode()

def test_case_1289():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_5.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert var_2.value is None
    assert var_2.next is None

def test_case_1290():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_2.remove()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_2)
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    str_2 = var_3.__str__()
    assert str_2 == 'None'
    none_type_2 = singly_linked_list_5.add(node_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    node_2 = module_0.Node(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    node_3 = singly_linked_list_8.getHeadNode()
    int_0 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(singly_linked_list_13)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_15.getSize()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    int_2 = singly_linked_list_15.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_15.add(bool_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    none_type_6 = None
    node_6 = module_0.Node(none_type_6)
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_19.__str__()
    assert str_6 == '[None]'
    none_type_7 = singly_linked_list_19.add(singly_linked_list_19)
    int_4 = singly_linked_list_19.getSize()
    assert int_4 == 1
    node_8 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_20.__str__()
    assert str_7 == '[None]'
    singly_linked_list_21 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_20.isEmpty()
    assert bool_5 is True
    singly_linked_list_22 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_10.getSize()
    assert int_5 == 2

def test_case_1291():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    node_3 = module_0.Node(node_2)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    list_1 = singly_linked_list_5.toArray()
    list_2 = []
    none_type_5 = singly_linked_list_5.add(list_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_9.remove()
    node_5 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_5 = var_3.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_16.getHeadNode()
    node_8 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_17.getSize()
    var_5 = singly_linked_list_16.remove()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_19.__str__()
    assert str_6 == '[None]'
    none_type_7 = singly_linked_list_19.add(singly_linked_list_19)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_19.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_6.value).__module__}.{type(var_6.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_6.next is None
    str_7 = var_6.__str__()
    int_4 = 0
    node_10 = module_0.Node(int_4)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_22.__str__()
    assert str_8 == '[None]'
    singly_linked_list_23 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_23.add(singly_linked_list_23)
    singly_linked_list_24 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_24.getSize()
    singly_linked_list_25 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_25.add(singly_linked_list_23)
    var_7 = singly_linked_list_24.remove()
    singly_linked_list_26 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_26.isEmpty()
    assert bool_3 is True

def test_case_1292():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_6.add(none_type_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    node_3 = module_0.Node(node_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    none_type_4 = None
    node_5 = module_0.Node(none_type_4)
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_14.getSize()
    list_3 = singly_linked_list_3.toArray()

def test_case_1293():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'

def test_case_1294():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_3.remove()
    none_type_1 = singly_linked_list_4.add(singly_linked_list_3)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_8)
    none_type_2 = singly_linked_list_7.add(var_2)

def test_case_1295():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1296():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    node_1 = module_0.Node(none_type_0)

def test_case_1297():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_2.remove()
    node_1 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = singly_linked_list_3.getSize()
    assert int_0 == 1
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_4 = singly_linked_list_7.add(str_2)
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    none_type_5 = None
    node_4 = module_0.Node(none_type_5)
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()

def test_case_1298():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_2)
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(none_type_3)
    var_1 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_2 = module_0.Node(bool_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    str_5 = var_2.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_1299():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    var_0 = singly_linked_list_0.getHead()
    list_0 = var_0.toArray()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_4.remove()
    node_3 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    var_4 = singly_linked_list_8.getHead()
    node_5 = module_0.Node(str_4)
    assert node_5.value == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    var_5 = singly_linked_list_13.remove()
    node_6 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    var_6 = singly_linked_list_11.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_14.getHead()
    node_7 = singly_linked_list_14.getHeadNode()
    str_7 = var_7.__str__()

def test_case_1300():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_1)
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'
    int_4 = 0
    node_3 = module_0.Node(int_4)
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_7)
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    int_5 = singly_linked_list_10.getSize()
    assert int_5 == 1
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_6 = singly_linked_list_11.add(str_3)
    node_7 = singly_linked_list_11.getHeadNode()
    assert node_7.value == '[None]'
    str_4 = singly_linked_list_11.__str__()
    none_type_7 = None
    node_8 = module_0.Node(none_type_7)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_12.getHeadNode()
    bool_2 = False
    node_10 = module_0.Node(bool_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.getHead()
    str_5 = var_2.__str__()
    int_6 = singly_linked_list_12.getSize()
    list_2 = singly_linked_list_7.toArray()

def test_case_1301():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_8.add(str_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    var_4 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.remove()
    str_5 = var_5.__str__()
    assert str_5 == 'None'
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = var_5.__str__()
    assert str_6 == 'None'
    str_7 = var_1.__str__()
    assert str_7 == 'None'

def test_case_1302():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_1 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_3.getHead()
    list_2 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_0.getHead()

def test_case_1303():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    int_0 = 719
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(int_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_2 = [bytes_0]
    node_1 = module_0.Node(list_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(node_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_7.toArray()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    var_2 = singly_linked_list_9.getHead()
    dict_0 = {int_1: none_type_2, var_2: str_2}
    node_2 = module_0.Node(dict_0)
    str_3 = singly_linked_list_9.__str__()
    int_2 = var_2.getSize()
    assert int_2 == 1
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)
    none_type_5 = singly_linked_list_10.add(none_type_3)
    list_4 = singly_linked_list_10.toArray()
    list_5 = []
    none_type_6 = singly_linked_list_10.add(list_5)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_7 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_11.add(none_type_7)
    none_type_9 = singly_linked_list_11.add(none_type_7)
    list_6 = singly_linked_list_11.toArray()
    var_3 = singly_linked_list_11.getHead()
    list_7 = singly_linked_list_11.toArray()
    list_8 = singly_linked_list_3.toArray()

def test_case_1304():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    node_5 = singly_linked_list_3.getHeadNode()

def test_case_1305():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    list_1 = singly_linked_list_6.toArray()
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    int_2 = singly_linked_list_7.getSize()
    assert int_2 == 1
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_5 = singly_linked_list_8.add(str_1)
    list_2 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value == '[None]'
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    none_type_6 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_12.add(none_type_6)
    var_4 = singly_linked_list_12.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_7 = False
    node_8 = module_0.Node(bool_7)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    list_4 = singly_linked_list_15.toArray()
    node_9 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_16.getSize()
    bool_8 = singly_linked_list_17.isEmpty()
    assert bool_8 is True
    var_5 = singly_linked_list_17.getHead()
    str_3 = var_5.__str__()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_19.__str__()
    assert str_4 == '[None]'
    var_6 = singly_linked_list_19.remove()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    bool_9 = singly_linked_list_20.isEmpty()
    assert bool_9 is True
    bool_10 = singly_linked_list_20.isEmpty()
    assert bool_10 is True
    var_7 = singly_linked_list_11.remove()

def test_case_1306():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_2 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_5.getHead()
    str_1 = var_3.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_8.getHead()
    str_2 = var_4.__str__()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_1307():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_2.remove()

def test_case_1308():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_2.remove()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'

def test_case_1309():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    int_1 = singly_linked_list_7.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_7.__str__()
    str_4 = 'P{"'
    node_5 = module_0.Node(str_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    node_6 = module_0.Node(var_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'

def test_case_1310():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(str_1)

def test_case_1311():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    none_type_3 = singly_linked_list_6.add(none_type_1)
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    str_3 = 'P{"'
    node_5 = module_0.Node(str_3)
    none_type_6 = singly_linked_list_12.add(none_type_5)
    node_6 = module_0.Node(bool_0)
    assert node_6.value is True

def test_case_1312():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1313():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_1 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    list_1 = singly_linked_list_12.toArray()
    node_6 = singly_linked_list_12.getHeadNode()
    var_2 = singly_linked_list_7.getHead()

def test_case_1314():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_4 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_5 = singly_linked_list_8.add(str_5)
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value == '[None]'
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'
    var_4 = singly_linked_list_2.remove()

def test_case_1315():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    var_2 = singly_linked_list_3.remove()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    var_3 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_4 = singly_linked_list_8.remove()
    node_2 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.getHead()
    node_3 = module_0.Node(var_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_12.getSize()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    var_6 = singly_linked_list_13.getHead()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    int_2 = singly_linked_list_14.getSize()
    assert int_2 == 1
    node_6 = singly_linked_list_14.getHeadNode()
    var_7 = singly_linked_list_14.getHead()
    list_0 = var_7.toArray()
    var_8 = singly_linked_list_9.remove()

def test_case_1316():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_2 = var_3.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    none_type_1 = singly_linked_list_8.add(none_type_0)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_11)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_17.remove()
    bool_3 = singly_linked_list_17.isEmpty()
    assert bool_3 is True
    var_6 = singly_linked_list_15.remove()
    none_type_3 = singly_linked_list_16.add(singly_linked_list_15)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_19.toArray()
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_22.getHeadNode()
    singly_linked_list_23 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_23.getHeadNode()
    node_8 = singly_linked_list_23.getHeadNode()
    var_7 = singly_linked_list_22.getHead()
    node_9 = module_0.Node(var_4)
    assert node_9.value is None

def test_case_1317():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_8.getHead()
    str_3 = var_5.__str__()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(var_0)

def test_case_1318():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    int_1 = -1870
    node_1 = module_0.Node(int_1)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    var_0 = singly_linked_list_1.getHead()

def test_case_1319():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    var_1 = singly_linked_list_3.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    node_6 = module_0.Node(int_1)

def test_case_1320():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    var_0 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    node_4 = module_0.Node(node_3)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    list_1 = singly_linked_list_4.toArray()
    var_1 = singly_linked_list_4.getHead()
    list_2 = singly_linked_list_4.toArray()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    none_type_5 = singly_linked_list_5.add(none_type_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_6.isEmpty()
    assert bool_6 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    node_7 = singly_linked_list_6.getHeadNode()
    int_1 = 0
    node_8 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    node_9 = singly_linked_list_8.getHeadNode()
    bool_7 = singly_linked_list_8.isEmpty()
    assert bool_7 is False
    str_2 = singly_linked_list_8.__str__()
    node_10 = singly_linked_list_0.getHeadNode()

def test_case_1321():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    node_1 = singly_linked_list_2.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()

def test_case_1322():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    node_0 = singly_linked_list_0.getHeadNode()
    assert node_0.value == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    var_0 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(str_0)

def test_case_1323():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()
    dict_0 = {}
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(dict_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    none_type_4 = singly_linked_list_6.add(none_type_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_6 = singly_linked_list_7.add(str_3)
    node_2 = singly_linked_list_7.getHeadNode()
    assert node_2.value == '[None]'
    str_4 = singly_linked_list_7.__str__()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_7 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_8.getHeadNode()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is False
    str_6 = singly_linked_list_8.__str__()
    str_7 = 'P{"'
    node_5 = module_0.Node(str_7)
    list_0 = singly_linked_list_8.toArray()

def test_case_1324():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_5.remove()
    node_1 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_1)
    assert node_2.value is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(singly_linked_list_9)
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    node_6 = module_0.Node(node_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_4.__str__()
    assert str_6 == '[None]'

def test_case_1325():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    bool_0 = singly_linked_list_13.isEmpty()
    assert bool_0 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    none_type_4 = singly_linked_list_14.add(str_6)
    list_0 = singly_linked_list_14.toArray()
    list_1 = singly_linked_list_9.toArray()

def test_case_1326():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    str_0 = var_2.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_8.remove()
    node_3 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    var_4 = singly_linked_list_6.remove()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    str_3 = 'P{"'
    node_5 = module_0.Node(str_3)
    none_type_2 = singly_linked_list_9.add(none_type_1)
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    int_2 = singly_linked_list_10.getSize()
    assert int_2 == 1
    node_7 = singly_linked_list_10.getHeadNode()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is False
    str_5 = singly_linked_list_10.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_13.toArray()
    list_1 = singly_linked_list_13.toArray()
    node_9 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.getHead()
    node_10 = module_0.Node(var_5)
    int_3 = 0
    node_11 = module_0.Node(int_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_16.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_18.__str__()
    assert str_8 == '[None]'
    none_type_4 = singly_linked_list_18.add(singly_linked_list_18)
    none_type_5 = singly_linked_list_18.add(str_8)
    list_3 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_19.remove()
    str_9 = var_6.__str__()
    assert str_9 == 'None'
    int_4 = 0
    node_12 = module_0.Node(int_4)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_10 = var_6.__str__()
    assert str_10 == 'None'
    int_5 = singly_linked_list_18.getSize()
    assert int_5 == 2

def test_case_1327():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()

def test_case_1328():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_1)
    node_3 = singly_linked_list_5.getHeadNode()
    assert node_3.value == '[None]'
    str_2 = singly_linked_list_5.__str__()
    node_4 = module_0.Node(var_0)
    assert node_4.value is None

def test_case_1329():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    int_4 = singly_linked_list_3.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    var_0 = singly_linked_list_3.getHead()
    list_1 = var_0.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    int_5 = 0
    node_5 = module_0.Node(int_5)
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    str_5 = var_1.__str__()
    assert str_5 == 'None'

def test_case_1330():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value is None
    assert var_0.next is None

def test_case_1331():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    node_3 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_3 = singly_linked_list_9.add(str_4)
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    none_type_4 = None
    node_6 = module_0.Node(none_type_4)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_13.add(none_type_5)
    none_type_7 = singly_linked_list_13.add(none_type_5)
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is False
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.getHead()
    node_8 = module_0.Node(var_3)
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_16.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_18.__str__()
    assert str_6 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_19.add(singly_linked_list_19)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_20.getSize()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_21.add(singly_linked_list_19)
    bool_6 = singly_linked_list_10.isEmpty()
    assert bool_6 is True

def test_case_1332():
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_1.remove()
    list_1 = singly_linked_list_0.toArray()

def test_case_1333():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    node_2 = singly_linked_list_1.getHeadNode()
    var_0 = singly_linked_list_0.getHead()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_3.remove()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_1)
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    node_4 = module_0.Node(str_1)
    assert node_4.value == '[None]'

def test_case_1334():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    node_2 = module_0.Node(bool_0)
    assert node_2.value is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True

def test_case_1335():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    node_1 = module_0.Node(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    node_4 = module_0.Node(singly_linked_list_5)
    int_2 = singly_linked_list_7.getSize()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    list_3 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_11.add(singly_linked_list_11)
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(none_type_1)
    none_type_3 = singly_linked_list_12.add(none_type_1)
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    none_type_4 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_13.add(none_type_4)
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    list_4 = singly_linked_list_13.toArray()
    var_1 = singly_linked_list_13.getHead()
    none_type_6 = singly_linked_list_2.add(var_1)

def test_case_1336():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(singly_linked_list_2)

def test_case_1337():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_2 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    node_3 = module_0.Node(var_0)
    assert node_3.value is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    node_7 = module_0.Node(node_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    int_2 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1338():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_4.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    int_1 = singly_linked_list_6.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(none_type_2)
    none_type_4 = singly_linked_list_10.add(none_type_2)
    list_3 = singly_linked_list_10.toArray()
    int_4 = 0
    node_6 = module_0.Node(int_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_11.add(singly_linked_list_11)
    int_5 = singly_linked_list_11.getSize()
    assert int_5 == 1
    node_7 = singly_linked_list_11.getHeadNode()
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_12.toArray()
    none_type_6 = None
    node_9 = module_0.Node(none_type_6)
    var_1 = singly_linked_list_2.remove()

def test_case_1339():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_1 = module_0.Node(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_4)
    node_4 = module_0.Node(bool_2)
    assert node_4.value is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    str_2 = var_3.__str__()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_2 = [bytes_0]
    node_5 = module_0.Node(list_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(node_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    node_7 = singly_linked_list_11.getHeadNode()
    node_8 = module_0.Node(var_2)

def test_case_1340():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    str_1 = var_2.__str__()
    int_1 = singly_linked_list_6.getSize()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None

def test_case_1341():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()

def test_case_1342():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_3.add(node_1)
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    node_3 = module_0.Node(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_2 = var_2.__str__()
    int_0 = singly_linked_list_7.getSize()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    int_2 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_12.add(bool_6)
    int_3 = 719
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(int_3)
    var_4 = singly_linked_list_5.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert var_4.value is None
    assert var_4.next is None

def test_case_1343():
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_0 = 'P{"'
    node_1 = module_0.Node(str_0)
    none_type_3 = singly_linked_list_1.add(none_type_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_3)
    int_3 = singly_linked_list_5.getSize()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    int_4 = 0
    node_5 = module_0.Node(int_4)
    none_type_5 = None
    node_6 = module_0.Node(none_type_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    node_7 = module_0.Node(var_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_8.getSize()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    var_1 = singly_linked_list_9.getHead()
    str_2 = var_1.__str__()
    list_1 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_7 = None
    node_9 = module_0.Node(none_type_7)
    bool_5 = singly_linked_list_1.isEmpty()
    assert bool_5 is False

def test_case_1344():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_4 = 0
    node_2 = module_0.Node(int_4)
    var_1 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    node_3 = singly_linked_list_6.getHeadNode()
    int_5 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    node_4 = module_0.Node(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    int_6 = singly_linked_list_9.getSize()
    assert int_6 == 1
    var_2 = singly_linked_list_9.getHead()
    dict_0 = {int_6: none_type_1, var_2: str_3}
    node_5 = module_0.Node(dict_0)
    node_6 = singly_linked_list_9.getHeadNode()
    none_type_2 = singly_linked_list_9.add(dict_0)
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    var_3 = singly_linked_list_2.remove()

def test_case_1345():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    node_3 = module_0.Node(node_2)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_6 = module_0.Node(var_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    int_2 = 0
    node_7 = module_0.Node(int_2)
    var_4 = singly_linked_list_7.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_9.isEmpty()
    assert bool_6 is True
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_9.isEmpty()
    assert bool_7 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    bool_8 = False
    node_9 = module_0.Node(bool_8)
    none_type_6 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_12.add(none_type_6)
    var_5 = singly_linked_list_11.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_13.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    bool_9 = False
    node_10 = module_0.Node(bool_9)
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    none_type_8 = singly_linked_list_13.add(str_5)
    var_7 = singly_linked_list_10.remove()

def test_case_1346():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(node_0)

def test_case_1347():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_2.toArray()

def test_case_1348():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_2.toArray()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.getHead()
    node_1 = module_0.Node(var_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    var_5 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    var_7 = singly_linked_list_11.getHead()
    str_3 = 'P{"'
    node_6 = module_0.Node(str_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_8 = singly_linked_list_13.remove()
    str_5 = var_8.__str__()
    node_7 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_7).__module__}.{type(node_7).__qualname__}' == 'linkedList3.Node'
    assert node_7.value is None
    assert node_7.next is None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_9 = singly_linked_list_9.getHead()

def test_case_1349():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_9.getHeadNode()
    node_3 = singly_linked_list_9.getHeadNode()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(none_type_1)
    none_type_3 = singly_linked_list_12.add(none_type_1)
    list_1 = singly_linked_list_12.toArray()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'

def test_case_1350():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_3 = singly_linked_list_5.add(node_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    node_6 = module_0.Node(singly_linked_list_7)
    list_2 = singly_linked_list_9.toArray()

def test_case_1351():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_2.getHeadNode()

def test_case_1352():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_5.getHead()
    str_1 = var_0.__str__()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    var_2 = singly_linked_list_6.remove()
    int_5 = -1870
    node_4 = module_0.Node(int_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_2 = singly_linked_list_7.add(str_3)
    var_3 = singly_linked_list_7.getHead()
    assert var_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.getHead()
    node_5 = module_0.Node(var_4)
    int_6 = 0
    node_6 = module_0.Node(int_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    node_7 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_7).__module__}.{type(node_7).__qualname__}' == 'linkedList3.Node'
    assert node_7.value is None
    assert node_7.next is None

def test_case_1353():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    var_2 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(str_2)
    assert node_3.value == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    node_5 = singly_linked_list_3.getHeadNode()

def test_case_1354():
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    none_type_4 = singly_linked_list_6.add(str_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_9.add(singly_linked_list_9)
    int_0 = singly_linked_list_9.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_9.getHead()
    dict_0 = {int_0: none_type_6, var_1: str_4}
    node_2 = module_0.Node(dict_0)
    str_5 = singly_linked_list_9.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_13.add(singly_linked_list_11)
    var_2 = singly_linked_list_12.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_16.isEmpty()
    assert bool_2 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_19.isEmpty()
    assert bool_3 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_20.__str__()
    assert str_8 == '[None]'
    node_4 = singly_linked_list_19.getHeadNode()
    none_type_9 = singly_linked_list_16.add(node_4)

def test_case_1355():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    list_2 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    int_1 = singly_linked_list_5.getSize()

def test_case_1356():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(bool_1)
    int_2 = -1870
    node_3 = module_0.Node(int_2)
    node_4 = module_0.Node(node_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_17.isEmpty()
    assert bool_2 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_18.__str__()
    assert str_7 == '[None]'
    node_6 = singly_linked_list_17.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_19.getHead()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_20.__str__()
    assert str_8 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    str_9 = singly_linked_list_20.__str__()
    assert str_9 == '[None]'
    none_type_3 = singly_linked_list_19.add(str_8)
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    str_10 = singly_linked_list_21.__str__()
    assert str_10 == '[None]'
    none_type_4 = singly_linked_list_21.add(singly_linked_list_21)
    int_4 = singly_linked_list_21.getSize()
    assert int_4 == 1
    node_9 = singly_linked_list_21.getHeadNode()
    node_10 = singly_linked_list_6.getHeadNode()

def test_case_1357():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    str_2 = var_1.__str__()
    assert str_2 == 'None'
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    int_3 = singly_linked_list_7.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_7.getHeadNode()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is False
    node_4 = module_0.Node(int_1)

def test_case_1358():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_1.remove()
    str_1 = var_2.__str__()
    none_type_0 = singly_linked_list_1.add(str_1)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    str_2 = 'P{"'
    node_1 = module_0.Node(str_2)
    none_type_3 = singly_linked_list_2.add(none_type_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_3.remove()
    str_3 = var_3.__str__()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = var_3.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_6.__str__()
    assert str_6 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_9.__str__()
    assert str_7 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    none_type_6 = None
    node_3 = module_0.Node(none_type_6)
    bool_1 = singly_linked_list_11.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    str_9 = singly_linked_list_13.__str__()
    assert str_9 == '[None]'
    complex_0 = 1389 + 116.582j
    node_6 = module_0.Node(complex_0)
    int_2 = singly_linked_list_8.getSize()

def test_case_1359():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_1 = singly_linked_list_7.getHead()
    list_2 = singly_linked_list_8.toArray()
    var_2 = singly_linked_list_6.remove()

def test_case_1360():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1361():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    node_2 = singly_linked_list_6.getHeadNode()
    none_type_1 = singly_linked_list_5.add(none_type_0)

def test_case_1362():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_5.toArray()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    var_1 = singly_linked_list_7.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_12.add(str_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_2 = singly_linked_list_13.add(str_3)
    var_3 = singly_linked_list_13.getHead()
    assert var_3 == '[None]'
    var_4 = singly_linked_list_8.remove()

def test_case_1363():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_1.remove()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_2 = var_3.__str__()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_4.remove()

def test_case_1364():
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    list_1 = singly_linked_list_1.toArray()
    var_0 = singly_linked_list_1.getHead()
    list_2 = singly_linked_list_1.toArray()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    node_3 = module_0.Node(var_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    var_3 = singly_linked_list_8.remove()
    node_4 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    none_type_4 = None
    node_5 = module_0.Node(none_type_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.getHead()
    int_0 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_14.add(singly_linked_list_14)
    int_1 = singly_linked_list_14.getSize()
    assert int_1 == 1
    none_type_6 = singly_linked_list_3.add(none_type_5)

def test_case_1365():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_3.add(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_9.getHeadNode()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_9.add(none_type_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    node_3 = module_0.Node(singly_linked_list_10)
    int_1 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_4 = singly_linked_list_13.add(str_5)
    var_2 = singly_linked_list_13.getHead()
    assert var_2 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    none_type_5 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_7 = var_3.__str__()
    node_4 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    none_type_6 = singly_linked_list_17.add(singly_linked_list_17)
    int_3 = singly_linked_list_17.getSize()
    assert int_3 == 1
    node_6 = singly_linked_list_17.getHeadNode()
    var_4 = singly_linked_list_17.getHead()
    list_2 = var_4.toArray()
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_19.__str__()
    assert str_9 == '[None]'
    str_10 = var_0.__str__()

def test_case_1366():
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_0 = module_0.Node(list_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_3.remove()
    none_type_2 = singly_linked_list_4.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    str_2 = var_2.__str__()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.getHead()
    str_3 = var_3.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.getHead()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_15.toArray()
    var_5 = singly_linked_list_14.getHead()
    node_5 = module_0.Node(str_5)
    assert node_5.value == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_18.isEmpty()
    assert bool_5 is True
    node_7 = module_0.Node(singly_linked_list_16)
    none_type_4 = singly_linked_list_16.add(var_5)

def test_case_1367():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    none_type_2 = None
    node_0 = module_0.Node(none_type_2)
    str_2 = singly_linked_list_0.__str__()

def test_case_1368():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_2 = singly_linked_list_1.add(str_1)
    list_0 = singly_linked_list_1.toArray()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_1 = [bytes_0]
    node_0 = module_0.Node(list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(node_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_3 = var_0.__str__()
    node_1 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_5.add(singly_linked_list_0)

def test_case_1369():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    str_3 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_3.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_3.getHead()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    node_3 = module_0.Node(node_2)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(singly_linked_list_6)
    var_5 = singly_linked_list_7.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_9.remove()
    str_6 = var_6.__str__()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_7 = var_6.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_12.__str__()
    assert str_8 == '[None]'
    var_7 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_13.isEmpty()
    assert bool_5 is True
    bool_6 = singly_linked_list_13.isEmpty()
    assert bool_6 is True
    node_6 = module_0.Node(str_2)
    assert node_6.value == '[None]'

def test_case_1370():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_1.add(none_type_4)
    none_type_6 = singly_linked_list_1.add(none_type_4)
    list_2 = singly_linked_list_1.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_7 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    node_2 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_8 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    node_4 = singly_linked_list_4.getHeadNode()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is False
    str_3 = singly_linked_list_4.__str__()
    str_4 = 'P{"'
    node_5 = module_0.Node(str_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_6.getHeadNode()
    node_7 = singly_linked_list_6.getHeadNode()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    none_type_9 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_10 = singly_linked_list_7.add(none_type_9)
    none_type_11 = singly_linked_list_7.add(none_type_9)
    list_3 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = var_2.__str__()
    assert str_6 == 'None'
    str_7 = var_2.__str__()
    assert str_7 == 'None'

def test_case_1371():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    node_3 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_1372():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_1.remove()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    node_2 = singly_linked_list_4.getHeadNode()
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    node_4 = module_0.Node(node_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    node_5 = module_0.Node(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(none_type_2)
    var_2 = singly_linked_list_10.getHead()
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.getHead()
    str_4 = var_3.__str__()
    var_4 = singly_linked_list_1.remove()

def test_case_1373():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_12.add(singly_linked_list_12)
    int_1 = singly_linked_list_12.getSize()
    assert int_1 == 1
    var_3 = singly_linked_list_12.getHead()
    dict_0 = {int_1: none_type_0, var_3: str_3}
    node_6 = module_0.Node(dict_0)
    str_4 = singly_linked_list_12.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_1 = singly_linked_list_13.add(str_5)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_16.toArray()
    node_7 = module_0.Node(int_0)

def test_case_1374():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = 'P{"'
    node_3 = module_0.Node(str_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    node_4 = module_0.Node(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_9)
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'

def test_case_1375():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_3.getHead()
    list_1 = singly_linked_list_3.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    var_3 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_8.getHead()

def test_case_1376():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    str_0 = var_3.__str__()
    assert str_0 == 'None'
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = var_3.__str__()
    assert str_1 == 'None'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(str_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'

def test_case_1377():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_1 = singly_linked_list_7.add(str_2)
    node_1 = singly_linked_list_7.getHeadNode()
    assert node_1.value == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_8.remove()
    node_2 = singly_linked_list_8.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    node_3 = module_0.Node(var_0)
    assert node_3.value is None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    var_1 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_13.add(singly_linked_list_16)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_18.getHeadNode()
    node_5 = singly_linked_list_18.getHeadNode()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_19.getSize()
    var_2 = singly_linked_list_18.remove()
    bool_1 = singly_linked_list_20.isEmpty()
    assert bool_1 is True
    singly_linked_list_21 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_21.__str__()
    assert str_7 == '[None]'
    none_type_4 = singly_linked_list_21.add(singly_linked_list_21)
    int_1 = singly_linked_list_21.getSize()
    assert int_1 == 1
    var_3 = singly_linked_list_21.getHead()
    dict_0 = {int_1: none_type_4, var_3: str_7}
    node_7 = module_0.Node(dict_0)
    node_8 = singly_linked_list_21.getHeadNode()
    none_type_5 = singly_linked_list_21.add(dict_0)
    int_2 = 719
    singly_linked_list_22 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_22.add(int_2)
    singly_linked_list_23 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_23.__str__()
    assert str_8 == '[None]'
    var_4 = singly_linked_list_23.remove()
    node_9 = module_0.Node(singly_linked_list_16)

def test_case_1378():
    dict_0 = {}
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(dict_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    node_1 = module_0.Node(node_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_1)
    node_2 = singly_linked_list_4.getHeadNode()
    assert node_2.value == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    var_2 = singly_linked_list_6.getHead()
    list_0 = singly_linked_list_7.toArray()
    none_type_3 = singly_linked_list_0.add(singly_linked_list_5)

def test_case_1379():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(str_0)
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(singly_linked_list_4)
    node_2 = module_0.Node(var_0)
    assert node_2.value is None

def test_case_1380():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_2 = singly_linked_list_0.add(str_0)
    node_2 = singly_linked_list_0.getHeadNode()
    assert node_2.value == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    node_4 = module_0.Node(singly_linked_list_4)
    node_5 = module_0.Node(bool_0)
    assert node_5.value is True
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    none_type_5 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_7.add(none_type_5)
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'

def test_case_1381():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_2.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_7 = singly_linked_list_8.add(str_2)
    node_5 = singly_linked_list_8.getHeadNode()
    assert node_5.value == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_8 = singly_linked_list_9.add(singly_linked_list_9)
    int_3 = singly_linked_list_9.getSize()
    assert int_3 == 1
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.getHead()
    str_4 = var_3.__str__()
    int_4 = singly_linked_list_10.getSize()
    int_5 = -1870
    node_8 = module_0.Node(int_5)
    node_9 = module_0.Node(node_8)
    node_10 = module_0.Node(str_2)
    assert node_10.value == '[None]'

def test_case_1382():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_2.toArray()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_1 = singly_linked_list_3.toArray()
    none_type_3 = singly_linked_list_1.add(singly_linked_list_1)

def test_case_1383():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(singly_linked_list_8)
    var_0 = singly_linked_list_8.getHead()
    none_type_4 = var_0.add(node_0)

def test_case_1384():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_3.remove()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_4 = singly_linked_list_6.add(str_2)
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_6 = None
    node_6 = module_0.Node(none_type_6)
    int_2 = -1870
    node_7 = module_0.Node(int_2)
    var_3 = singly_linked_list_1.getHead()

def test_case_1385():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(bool_0)
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    int_3 = singly_linked_list_3.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_3.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(singly_linked_list_6)
    var_0 = singly_linked_list_8.getHead()

def test_case_1386():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_6)
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    str_4 = var_1.__str__()
    assert str_4 == 'None'
    none_type_3 = singly_linked_list_8.add(node_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_5 = singly_linked_list_10.add(str_5)
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1387():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_6.remove()
    node_1 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    str_3 = var_3.__str__()
    int_0 = -1870
    node_3 = module_0.Node(int_0)
    node_4 = module_0.Node(node_3)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.getHead()
    node_6 = module_0.Node(var_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1388():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    node_2 = module_0.Node(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_2)
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_5.getHead()
    str_3 = var_0.__str__()
    list_2 = singly_linked_list_5.toArray()
    node_6 = module_0.Node(list_0)
    assert node_6.value == [None]

def test_case_1389():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_1 = module_0.Node(list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(node_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_4 = None
    node_2 = module_0.Node(none_type_4)
    node_3 = module_0.Node(node_2)
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    none_type_5 = None
    node_5 = module_0.Node(none_type_5)
    str_2 = singly_linked_list_0.__str__()
    assert str_2 == '[None]'

def test_case_1390():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_1391():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_8.getHeadNode()
    var_3 = singly_linked_list_8.getHead()
    list_0 = var_3.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.getHead()
    str_4 = var_4.__str__()
    int_4 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    var_5 = singly_linked_list_12.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_14.__str__()
    assert str_5 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_16.toArray()
    none_type_4 = None
    node_8 = module_0.Node(none_type_4)
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_17.__str__()
    assert str_7 == '[None]'
    none_type_5 = singly_linked_list_17.add(singly_linked_list_17)
    none_type_6 = singly_linked_list_17.add(str_7)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_18.getSize()
    node_9 = module_0.Node(var_5)
    assert node_9.value is None

def test_case_1392():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_2 = module_0.Node(var_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    list_0 = singly_linked_list_7.toArray()
    var_4 = singly_linked_list_7.getHead()
    var_5 = singly_linked_list_0.getHead()

def test_case_1393():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    int_0 = 719
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_0 = var_0.__str__()
    int_1 = singly_linked_list_3.getSize()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_8.add(singly_linked_list_6)
    var_1 = singly_linked_list_7.remove()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_9.add(none_type_6)
    none_type_8 = singly_linked_list_9.add(none_type_6)
    list_1 = singly_linked_list_9.toArray()
    var_2 = singly_linked_list_9.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    var_3 = singly_linked_list_11.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    node_7 = module_0.Node(node_6)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_17.getSize()
    bool_7 = singly_linked_list_18.isEmpty()
    assert bool_7 is True
    var_5 = singly_linked_list_18.getHead()
    str_4 = var_5.__str__()
    list_3 = singly_linked_list_18.toArray()
    str_5 = singly_linked_list_3.__str__()
    assert str_5 == '[None]'

def test_case_1394():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_6)
    node_3 = module_0.Node(bool_0)
    assert node_3.value is True
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    none_type_3 = singly_linked_list_9.add(none_type_1)
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_11.getHead()
    str_2 = var_0.__str__()
    int_1 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    none_type_5 = None
    node_7 = module_0.Node(none_type_5)
    node_8 = module_0.Node(node_7)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.getHead()
    node_9 = module_0.Node(var_3)
    bool_4 = False
    node_10 = module_0.Node(bool_4)
    none_type_6 = None
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_17.add(none_type_6)
    none_type_8 = singly_linked_list_17.add(none_type_6)
    bool_5 = singly_linked_list_17.isEmpty()
    assert bool_5 is False
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    var_4 = singly_linked_list_14.getHead()

def test_case_1395():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_3.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_4.getHeadNode()
    var_2 = singly_linked_list_4.getHead()
    list_2 = var_2.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    str_4 = var_4.__str__()
    assert str_4 == 'None'
    none_type_3 = singly_linked_list_8.add(node_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_16.__str__()
    assert str_7 == '[None]'
    str_8 = singly_linked_list_1.__str__()
    assert str_8 == '[None]'

def test_case_1396():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1397():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    dict_0 = {}
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(dict_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_4.getSize()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    none_type_4 = None
    node_5 = module_0.Node(none_type_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(singly_linked_list_7)
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = 0
    node_8 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_10.add(singly_linked_list_10)
    int_2 = singly_linked_list_10.getSize()
    assert int_2 == 1
    node_9 = singly_linked_list_10.getHeadNode()
    str_4 = singly_linked_list_10.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    int_3 = singly_linked_list_11.getSize()

def test_case_1398():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True

def test_case_1399():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1400():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_10.getHead()
    list_1 = singly_linked_list_10.toArray()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_12.toArray()
    none_type_5 = None
    node_5 = module_0.Node(none_type_5)
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    node_6 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_16.getSize()
    bool_6 = singly_linked_list_17.isEmpty()
    assert bool_6 is True
    var_4 = singly_linked_list_17.getHead()
    str_4 = var_4.__str__()
    list_4 = singly_linked_list_17.toArray()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_18.__str__()
    assert str_5 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_7 = singly_linked_list_18.isEmpty()
    assert bool_7 is True
    none_type_7 = singly_linked_list_19.add(singly_linked_list_15)

def test_case_1401():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_4.toArray()
    none_type_1 = singly_linked_list_0.add(node_2)

def test_case_1402():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    var_2 = singly_linked_list_2.getHead()

def test_case_1403():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_11.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    node_4 = module_0.Node(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_14)
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    none_type_0 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_15.add(none_type_0)
    var_3 = singly_linked_list_15.getHead()
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_17.remove()
    bool_7 = singly_linked_list_15.isEmpty()
    assert bool_7 is False

def test_case_1404():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()

def test_case_1405():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    node_2 = module_0.Node(bool_0)
    assert node_2.value is True
    node_3 = singly_linked_list_1.getHeadNode()

def test_case_1406():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    node_0 = module_0.Node(var_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_10)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    none_type_1 = None
    node_6 = module_0.Node(none_type_1)
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_11.getHeadNode()
    int_4 = 0
    node_9 = module_0.Node(int_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    var_4 = singly_linked_list_13.remove()

def test_case_1407():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_0.add(str_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    node_4 = module_0.Node(var_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_4 = singly_linked_list_8.add(str_2)
    node_5 = singly_linked_list_8.getHeadNode()
    assert node_5.value == '[None]'
    str_3 = singly_linked_list_8.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_1408():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    list_3 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    node_6 = module_0.Node(singly_linked_list_7)
    int_3 = singly_linked_list_9.getSize()
    bool_4 = singly_linked_list_3.isEmpty()
    assert bool_4 is True

def test_case_1409():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    var_0 = singly_linked_list_0.getHead()
    list_0 = var_0.toArray()
    node_2 = module_0.Node(none_type_0)

def test_case_1410():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    node_1 = module_0.Node(bool_0)

def test_case_1411():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    node_2 = module_0.Node(node_1)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.getHead()
    node_5 = module_0.Node(var_2)
    node_6 = singly_linked_list_7.getHeadNode()
    var_3 = singly_linked_list_3.getHead()

def test_case_1412():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_1.__str__()
    assert str_3 == '[None]'

def test_case_1413():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    int_0 = singly_linked_list_6.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_6.getHead()
    dict_0 = {int_0: none_type_1, var_1: str_2}
    node_1 = module_0.Node(dict_0)
    node_2 = singly_linked_list_6.getHeadNode()
    none_type_2 = singly_linked_list_6.add(dict_0)
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_10.remove()
    node_4 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_11.getSize()
    bool_1 = singly_linked_list_12.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_12.getHead()
    list_1 = singly_linked_list_12.toArray()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()

def test_case_1414():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    node_2 = singly_linked_list_1.getHeadNode()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    int_3 = singly_linked_list_2.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_2.getHeadNode()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_4.getHead()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    int_5 = 0
    node_6 = module_0.Node(int_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    none_type_4 = None
    node_7 = module_0.Node(none_type_4)
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    var_1 = singly_linked_list_7.remove()
    dict_0 = {}
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(dict_0)
    node_8 = singly_linked_list_1.getHeadNode()

def test_case_1415():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_1416():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    none_type_1 = singly_linked_list_0.add(bool_1)

def test_case_1417():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_6 = singly_linked_list_10.getHead()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_0 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_13.add(none_type_0)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_16.remove()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_17.getHeadNode()
    bool_6 = False
    node_6 = module_0.Node(bool_6)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_8 = singly_linked_list_18.getHead()
    str_5 = var_8.__str__()
    int_3 = singly_linked_list_17.getSize()
    node_7 = singly_linked_list_8.getHeadNode()

def test_case_1418():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_1 = singly_linked_list_8.add(str_3)
    node_3 = singly_linked_list_8.getHeadNode()
    assert node_3.value == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_3 = singly_linked_list_13.add(str_5)
    list_0 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert var_2.value == '[None]'
    assert f'{type(var_2.next).__module__}.{type(var_2.next).__qualname__}' == 'linkedList3.Node'
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True

def test_case_1419():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    list_0 = singly_linked_list_0.toArray()

def test_case_1420():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_4 = singly_linked_list_10.add(str_3)
    node_4 = singly_linked_list_10.getHeadNode()
    assert node_4.value == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_12.getHead()
    str_4 = var_0.__str__()
    int_0 = singly_linked_list_11.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_14.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.remove()
    str_5 = var_2.__str__()
    assert str_5 == 'None'
    none_type_5 = singly_linked_list_14.add(node_7)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    none_type_6 = singly_linked_list_16.add(singly_linked_list_16)
    int_1 = singly_linked_list_16.getSize()
    assert int_1 == 1
    var_3 = singly_linked_list_16.getHead()
    dict_0 = {int_1: none_type_6, var_3: str_6}
    node_8 = module_0.Node(dict_0)
    node_9 = singly_linked_list_16.getHeadNode()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_17.remove()
    str_7 = var_4.__str__()
    assert str_7 == 'None'
    int_2 = 0
    node_10 = module_0.Node(int_2)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_8 = var_4.__str__()
    assert str_8 == 'None'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_6.add(str_1)

def test_case_1421():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_5.toArray()
    node_1 = singly_linked_list_5.getHeadNode()
    node_2 = module_0.Node(singly_linked_list_5)

def test_case_1422():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_2)
    var_3 = singly_linked_list_3.getHead()
    assert var_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.getHead()
    node_2 = module_0.Node(var_4)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.getHead()
    str_5 = var_5.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.getHead()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(singly_linked_list_13)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    var_7 = singly_linked_list_12.remove()

def test_case_1423():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    list_0 = singly_linked_list_2.toArray()
    var_2 = singly_linked_list_2.getHead()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(singly_linked_list_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_7.remove()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_10.add(none_type_6)
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.getHead()
    node_4 = module_0.Node(var_5)
    node_5 = singly_linked_list_12.getHeadNode()
    node_6 = singly_linked_list_1.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None

def test_case_1424():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    none_type_5 = singly_linked_list_2.add(none_type_3)
    bool_3 = singly_linked_list_2.isEmpty()
    assert bool_3 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_1 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    var_2 = singly_linked_list_6.remove()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    str_1 = var_4.__str__()
    assert str_1 == 'None'
    none_type_6 = singly_linked_list_9.add(node_6)
    node_7 = module_0.Node(bool_2)

def test_case_1425():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    none_type_1 = singly_linked_list_0.add(dict_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_3 = singly_linked_list_1.add(str_1)
    var_1 = singly_linked_list_1.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'

def test_case_1426():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()
    node_3 = module_0.Node(int_0)

def test_case_1427():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    none_type_0 = None
    node_5 = module_0.Node(none_type_0)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_1 = [bytes_0]
    node_6 = module_0.Node(list_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(node_6)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_11.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_7 = module_0.Node(singly_linked_list_12)
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_17.getHead()
    node_9 = module_0.Node(var_2)
    node_10 = singly_linked_list_17.getHeadNode()
    var_3 = singly_linked_list_7.getHead()

def test_case_1428():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    var_2 = singly_linked_list_4.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_6.getSize()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_4 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    int_4 = 0
    node_6 = module_0.Node(int_4)
    var_5 = singly_linked_list_9.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_7 = module_0.Node(singly_linked_list_12)
    list_1 = singly_linked_list_15.toArray()

def test_case_1429():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()

def test_case_1430():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_0 = singly_linked_list_5.getSize()
    assert int_0 == 1
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    node_2 = module_0.Node(singly_linked_list_6)
    node_3 = module_0.Node(bool_2)
    assert node_3.value is True
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    bool_5 = singly_linked_list_9.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_12.toArray()
    none_type_1 = None
    node_5 = module_0.Node(none_type_1)
    bool_6 = singly_linked_list_11.isEmpty()
    assert bool_6 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()

def test_case_1431():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_4.toArray()
    var_1 = singly_linked_list_3.getHead()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_3 = singly_linked_list_5.add(str_1)
    node_2 = singly_linked_list_5.getHeadNode()
    assert node_2.value == '[None]'
    str_2 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    node_3 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_5 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_6 = var_3.__str__()
    none_type_6 = None
    node_4 = module_0.Node(none_type_6)
    node_5 = module_0.Node(node_4)
    int_0 = 0
    node_6 = module_0.Node(int_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True

def test_case_1432():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    node_2 = module_0.Node(var_2)
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_12.isEmpty()
    assert bool_1 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_12.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.getHead()
    str_5 = var_4.__str__()
    int_4 = singly_linked_list_14.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.getHead()

def test_case_1433():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_1434():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    node_1 = singly_linked_list_2.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True

def test_case_1435():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()

def test_case_1436():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(str_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    str_3 = var_1.__str__()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    node_6 = singly_linked_list_8.getHeadNode()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    node_8 = module_0.Node(var_2)
    int_2 = 0
    node_9 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_13.toArray()
    int_3 = 0
    node_10 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = False
    node_11 = module_0.Node(bool_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.getHead()
    str_4 = var_3.__str__()
    node_12 = singly_linked_list_2.getHeadNode()

def test_case_1437():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    node_3 = module_0.Node(var_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    int_2 = singly_linked_list_7.getSize()
    assert int_2 == 1
    var_2 = singly_linked_list_7.getHead()
    dict_1 = {int_2: none_type_1, var_2: str_2}
    node_4 = module_0.Node(dict_1)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_8.getSize()
    none_type_2 = None
    node_7 = module_0.Node(none_type_2)
    int_5 = singly_linked_list_5.getSize()

def test_case_1438():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_2 = module_0.Node(singly_linked_list_1)
    node_3 = module_0.Node(bool_1)
    assert node_3.value is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_6.toArray()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_7.add(str_1)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(bool_2)

def test_case_1439():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    int_0 = 719
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(int_0)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_3 = singly_linked_list_6.add(str_3)
    node_1 = singly_linked_list_6.getHeadNode()
    assert node_1.value == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_8.getHead()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_12.add(singly_linked_list_10)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_14.toArray()
    none_type_7 = None
    node_6 = module_0.Node(none_type_7)
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_13.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    none_type_8 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_9 = singly_linked_list_15.add(str_5)
    node_7 = singly_linked_list_15.getHeadNode()
    assert node_7.value == '[None]'
    str_6 = singly_linked_list_15.__str__()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_2.remove()

def test_case_1440():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()

def test_case_1441():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1442():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    node_5 = module_0.Node(var_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = module_0.Node(node_3)

def test_case_1443():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()

def test_case_1444():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_0)
    node_2 = module_0.Node(bool_0)
    assert node_2.value is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    node_5 = singly_linked_list_4.getHeadNode()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    none_type_1 = singly_linked_list_5.add(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_8.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_10.getSize()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    var_2 = singly_linked_list_11.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_13.add(singly_linked_list_13)
    int_4 = singly_linked_list_13.getSize()
    assert int_4 == 1
    var_3 = singly_linked_list_13.getHead()
    dict_0 = {int_4: none_type_2, var_3: str_2}
    node_9 = module_0.Node(dict_0)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    int_5 = singly_linked_list_14.getSize()
    assert int_5 == 1
    var_4 = singly_linked_list_14.getHead()
    dict_1 = {int_5: none_type_3, var_4: str_3}
    node_10 = module_0.Node(dict_1)
    str_4 = singly_linked_list_14.__str__()
    int_6 = var_4.getSize()
    assert int_6 == 1
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    bool_5 = False
    node_11 = module_0.Node(bool_5)
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    int_7 = singly_linked_list_10.getSize()

def test_case_1445():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_8.getSize()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_1 = singly_linked_list_10.add(str_1)
    var_2 = singly_linked_list_10.getHead()
    assert var_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_16.remove()
    int_6 = 0
    node_5 = module_0.Node(int_6)
    var_5 = singly_linked_list_14.getHead()
    list_2 = singly_linked_list_15.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_17.isEmpty()
    assert bool_4 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_18.__str__()
    assert str_5 == '[None]'
    node_6 = singly_linked_list_17.getHeadNode()
    int_7 = singly_linked_list_17.getSize()
    none_type_3 = singly_linked_list_14.add(var_4)

def test_case_1446():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    var_0 = singly_linked_list_2.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_14.toArray()
    none_type_4 = None
    node_4 = module_0.Node(none_type_4)
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    none_type_5 = singly_linked_list_13.add(bool_3)
    none_type_6 = None
    node_5 = module_0.Node(none_type_6)
    int_2 = 719
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_15.add(int_2)
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is False
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    node_7 = module_0.Node(node_6)
    dict_0 = {}
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_16.add(dict_0)
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'

def test_case_1447():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 2

def test_case_1448():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_4 = singly_linked_list_2.add(str_0)
    list_0 = singly_linked_list_2.toArray()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True

def test_case_1449():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_2 = singly_linked_list_0.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    str_1 = singly_linked_list_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_1.remove()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    var_2 = singly_linked_list_5.getHead()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_7.add(singly_linked_list_7)
    int_4 = singly_linked_list_7.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_7.getHeadNode()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_8.getSize()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_9.getHead()
    list_1 = singly_linked_list_9.toArray()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_9.remove()

def test_case_1450():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = 'P{"'
    node_1 = module_0.Node(str_0)
    none_type_2 = singly_linked_list_0.add(none_type_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_2.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_6.add(none_type_3)
    str_4 = 'P{"'
    node_4 = module_0.Node(str_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    node_5 = module_0.Node(var_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    var_4 = singly_linked_list_5.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None

def test_case_1451():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()

def test_case_1452():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    node_6 = singly_linked_list_8.getHeadNode()
    var_2 = singly_linked_list_7.getHead()
    none_type_1 = singly_linked_list_8.add(singly_linked_list_3)

def test_case_1453():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_3 = singly_linked_list_3.getSize()
    assert int_3 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    var_2 = singly_linked_list_3.getHead()
    list_0 = var_2.toArray()
    int_4 = 0
    node_4 = module_0.Node(int_4)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_2.getHead()

def test_case_1454():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    node_1 = module_0.Node(var_1)
    assert node_1.value is None

def test_case_1455():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    node_1 = singly_linked_list_3.getHeadNode()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_5.remove()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    str_3 = var_3.__str__()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = var_3.__str__()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True

def test_case_1456():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    none_type_0 = singly_linked_list_3.add(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    none_type_2 = singly_linked_list_3.add(bool_0)

def test_case_1457():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()

def test_case_1458():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    str_4 = var_1.__str__()
    assert str_4 == 'None'
    none_type_1 = singly_linked_list_11.add(str_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_3 = singly_linked_list_13.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_3 = singly_linked_list_15.add(str_6)
    var_4 = singly_linked_list_15.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert var_4.value == '[None]'
    assert f'{type(var_4.next).__module__}.{type(var_4.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_16.remove()
    str_7 = var_5.__str__()
    assert str_7 == 'None'
    list_1 = singly_linked_list_12.toArray()

def test_case_1459():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    int_1 = -1870
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_6)
    node_2 = module_0.Node(str_2)
    assert node_2.value == '[None]'

def test_case_1460():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(str_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    none_type_1 = singly_linked_list_4.add(node_2)

def test_case_1461():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    var_1 = singly_linked_list_4.getHead()
    dict_0 = {int_1: none_type_0, var_1: str_0}
    node_3 = module_0.Node(dict_0)
    node_4 = singly_linked_list_4.getHeadNode()
    none_type_1 = singly_linked_list_4.add(dict_0)
    bool_0 = False
    node_5 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()

def test_case_1462():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_5.remove()
    node_3 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    none_type_3 = singly_linked_list_8.add(none_type_1)
    var_2 = singly_linked_list_8.getHead()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    node_6 = module_0.Node(var_3)
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    bool_4 = False
    node_9 = module_0.Node(bool_4)
    int_3 = singly_linked_list_11.getSize()
    int_4 = -1870
    node_10 = module_0.Node(int_4)
    node_11 = module_0.Node(node_10)
    list_2 = singly_linked_list_5.toArray()

def test_case_1463():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    list_1 = singly_linked_list_2.toArray()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_7)
    var_0 = singly_linked_list_8.remove()
    dict_0 = {}
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(dict_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_5 = singly_linked_list_11.add(str_2)
    var_1 = singly_linked_list_11.getHead()
    assert var_1 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_13.getHead()
    str_3 = var_2.__str__()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_15.getHeadNode()
    none_type_6 = singly_linked_list_12.add(singly_linked_list_12)

def test_case_1464():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_5.getHead()
    list_0 = singly_linked_list_5.toArray()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1465():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    var_0 = singly_linked_list_1.remove()

def test_case_1466():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_4 = var_1.__str__()
    none_type_3 = None
    node_5 = module_0.Node(none_type_3)
    node_6 = module_0.Node(node_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    var_3 = singly_linked_list_7.getHead()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    node_9 = module_0.Node(singly_linked_list_10)
    node_10 = module_0.Node(bool_4)
    assert node_10.value is True
    singly_linked_list_13 = module_0.SinglyLinkedList()

def test_case_1467():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    int_1 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_1)
    none_type_1 = singly_linked_list_0.add(int_1)

def test_case_1468():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_8.getHead()
    str_1 = 'P{"'
    node_5 = module_0.Node(str_1)
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(none_type_1)
    none_type_3 = singly_linked_list_9.add(none_type_1)
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_11.add(singly_linked_list_11)
    int_4 = singly_linked_list_11.getSize()
    assert int_4 == 1
    node_8 = singly_linked_list_11.getHeadNode()
    node_9 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_12.add(singly_linked_list_12)
    int_5 = singly_linked_list_12.getSize()
    assert int_5 == 1
    none_type_6 = singly_linked_list_4.add(singly_linked_list_9)

def test_case_1469():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_2.toArray()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_1)

def test_case_1470():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.getHead()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    int_2 = singly_linked_list_1.getSize()

def test_case_1471():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = False
    node_1 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    list_1 = singly_linked_list_5.toArray()
    node_2 = singly_linked_list_5.getHeadNode()
    int_0 = 719
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_6.add(int_0)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_2 = singly_linked_list_10.add(str_4)
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'

def test_case_1472():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    node_3 = singly_linked_list_10.getHeadNode()
    int_3 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    none_type_2 = singly_linked_list_16.add(singly_linked_list_16)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_16.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_7 = var_2.__str__()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_18.__str__()
    assert str_8 == '[None]'
    var_3 = singly_linked_list_18.remove()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    none_type_3 = None
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_19.add(none_type_3)
    str_9 = 'P{"'
    node_6 = module_0.Node(str_9)
    none_type_5 = singly_linked_list_19.add(none_type_4)
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    none_type_6 = None
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_20.add(none_type_6)
    str_10 = singly_linked_list_20.__str__()
    assert str_10 == '[None]'
    node_8 = singly_linked_list_20.getHeadNode()

def test_case_1473():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(bool_0)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_1474():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_3.remove()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_3)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_1475():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_1 = var_2.__str__()
    node_3 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    var_3 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.getHead()
    str_4 = var_4.__str__()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(str_4)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_18.toArray()
    var_5 = singly_linked_list_17.getHead()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(none_type_3)

def test_case_1476():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    int_2 = singly_linked_list_10.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_10.getHeadNode()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is False
    str_4 = singly_linked_list_10.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_11)
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_12.add(none_type_2)
    none_type_4 = singly_linked_list_12.add(none_type_2)
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is False
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_14.remove()
    str_5 = var_0.__str__()
    assert str_5 == 'None'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_17.toArray()
    var_1 = singly_linked_list_16.getHead()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_19.__str__()
    assert str_7 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_20.add(singly_linked_list_20)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_21.getHeadNode()
    str_8 = singly_linked_list_19.__str__()
    assert str_8 == '[None]'
    none_type_6 = singly_linked_list_21.add(none_type_5)
    bool_7 = False
    node_8 = module_0.Node(bool_7)
    singly_linked_list_22 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_22.toArray()
    list_2 = singly_linked_list_22.toArray()
    int_3 = singly_linked_list_16.getSize()

def test_case_1477():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    node_4 = singly_linked_list_5.getHeadNode()
    var_2 = singly_linked_list_4.getHead()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    none_type_4 = singly_linked_list_6.add(none_type_2)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_5 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_8.add(none_type_5)
    none_type_7 = singly_linked_list_8.add(none_type_5)
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is False
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = module_0.Node(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    int_1 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    bool_7 = singly_linked_list_10.isEmpty()
    assert bool_7 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_13.remove()
    str_1 = var_4.__str__()
    assert str_1 == 'None'
    var_5 = singly_linked_list_13.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_14.__str__()
    assert str_2 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_8 = False
    node_9 = module_0.Node(bool_8)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_16.toArray()
    list_2 = singly_linked_list_16.toArray()
    node_10 = singly_linked_list_16.getHeadNode()
    list_3 = singly_linked_list_15.toArray()

def test_case_1478():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    int_0 = 1867
    node_1 = module_0.Node(int_0)

def test_case_1479():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()

def test_case_1480():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    node_2 = singly_linked_list_1.getHeadNode()
    node_3 = singly_linked_list_1.getHeadNode()

def test_case_1481():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    str_1 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.getHead()
    str_2 = var_4.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(str_2)
    none_type_3 = singly_linked_list_5.add(singly_linked_list_8)

def test_case_1482():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    int_4 = singly_linked_list_7.getSize()
    assert int_4 == 1
    var_2 = singly_linked_list_7.getHead()
    dict_0 = {int_4: none_type_3, var_2: str_3}
    node_3 = module_0.Node(dict_0)
    node_4 = singly_linked_list_7.getHeadNode()
    none_type_4 = singly_linked_list_7.add(dict_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    var_4 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    var_5 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_13.getSize()
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    int_6 = singly_linked_list_13.getSize()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_7 = singly_linked_list_15.getSize()
    bool_2 = False
    node_9 = module_0.Node(bool_2)
    int_8 = singly_linked_list_15.getSize()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_15.getHead()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_18.getHead()
    node_10 = module_0.Node(var_7)
    int_9 = 0
    node_11 = module_0.Node(int_9)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_19.isEmpty()
    assert bool_3 is True
    singly_linked_list_20 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_19.toArray()
    list_3 = singly_linked_list_18.toArray()

def test_case_1483():
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_0.add(int_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_2.remove()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    var_2 = singly_linked_list_3.getHead()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_5 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_5.add(none_type_5)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_7 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_6.add(none_type_7)
    none_type_9 = singly_linked_list_6.add(none_type_7)
    var_3 = singly_linked_list_6.getHead()
    node_5 = module_0.Node(bool_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_9.getHeadNode()
    node_8 = singly_linked_list_9.getHeadNode()
    var_4 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    str_2 = var_5.__str__()
    assert str_2 == 'None'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.getHead()

def test_case_1484():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1485():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'

def test_case_1486():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'

def test_case_1487():
    list_0 = []
    bytes_0 = b'\xb0m'
    tuple_0 = (list_0, bytes_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1488():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()

def test_case_1489():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1490():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()

def test_case_1491():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_7 = module_0.Node(none_type_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.getHead()

def test_case_1492():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1493():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1494():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    var_0 = singly_linked_list_1.remove()

def test_case_1495():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1496():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1497():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_1.getHead()

def test_case_1498():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_3 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_5 = var_1.__str__()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()

def test_case_1499():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'

def test_case_1500():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    none_type_6 = singly_linked_list_7.add(none_type_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_7 = singly_linked_list_8.add(singly_linked_list_8)
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.getHead()
    str_3 = var_2.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_13.getHeadNode()

def test_case_1501():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1502():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_0 = var_1.__str__()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.remove()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    var_3 = singly_linked_list_11.remove()

def test_case_1503():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_9.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'

def test_case_1504():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1505():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'

def test_case_1506():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_8.__str__()
    assert str_0 == '[None]'
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_2 = var_3.__str__()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.getHead()
    str_3 = var_4.__str__()

def test_case_1507():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    node_5 = singly_linked_list_7.getHeadNode()

def test_case_1508():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1509():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_3.getHead()

def test_case_1510():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True

def test_case_1511():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    none_type_4 = singly_linked_list_4.add(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.getHead()
    str_4 = var_5.__str__()
    int_1 = singly_linked_list_11.getSize()

def test_case_1512():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_1 = singly_linked_list_1.getHead()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    node_4 = singly_linked_list_7.getHeadNode()
    var_3 = singly_linked_list_8.remove()

def test_case_1513():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    var_1 = singly_linked_list_7.getHead()

def test_case_1514():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_3 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_6 = var_3.__str__()
    int_3 = 0
    node_4 = module_0.Node(int_3)

def test_case_1515():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_2 = 0
    node_1 = module_0.Node(int_2)
    var_1 = singly_linked_list_2.getHead()
    int_3 = 0
    node_2 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()

def test_case_1516():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()

def test_case_1517():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1518():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_10.remove()
    node_4 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.getHead()
    str_3 = var_1.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_15.__str__()
    assert str_5 == '[None]'
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_18.remove()
    bool_4 = singly_linked_list_18.isEmpty()
    assert bool_4 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_19.__str__()
    assert str_7 == '[None]'
    var_3 = singly_linked_list_19.remove()

def test_case_1519():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1520():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1521():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.getHead()
    str_5 = var_0.__str__()
    int_0 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    none_type_0 = None
    node_4 = module_0.Node(none_type_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_1 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_7 = var_1.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_13.__str__()
    assert str_8 == '[None]'
    var_2 = singly_linked_list_13.remove()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_14.__str__()
    assert str_9 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_16.remove()
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_17.getHeadNode()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_17.getSize()

def test_case_1522():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1523():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    none_type_3 = singly_linked_list_7.add(none_type_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_11.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_11.remove()

def test_case_1524():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_0 = var_0.__str__()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    node_4 = singly_linked_list_3.getHeadNode()
    var_1 = singly_linked_list_0.remove()

def test_case_1525():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    var_4 = singly_linked_list_8.remove()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    var_6 = singly_linked_list_11.remove()

def test_case_1526():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    var_0 = singly_linked_list_1.getHead()

def test_case_1527():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_4.remove()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    var_3 = singly_linked_list_6.remove()

def test_case_1528():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1529():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1530():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_1.remove()
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    var_5 = singly_linked_list_7.getHead()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_2 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_10.add(none_type_2)
    none_type_4 = singly_linked_list_10.add(none_type_2)
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is False
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_11.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_6.value).__module__}.{type(var_6.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_6.next is None
    str_4 = var_6.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_13.toArray()

def test_case_1531():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_2.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_4 = singly_linked_list_9.add(str_4)
    var_3 = singly_linked_list_9.getHead()
    assert var_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    var_5 = singly_linked_list_10.getHead()
    list_0 = singly_linked_list_11.toArray()
    int_4 = 0
    node_5 = module_0.Node(int_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = None
    node_7 = module_0.Node(none_type_5)
    int_5 = 0
    node_8 = module_0.Node(int_5)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_16.isEmpty()
    assert bool_4 is True
    singly_linked_list_17 = module_0.SinglyLinkedList()

def test_case_1532():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    var_1 = singly_linked_list_2.getHead()
    assert var_1 == '[None]'

def test_case_1533():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1534():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    var_1 = singly_linked_list_2.getHead()

def test_case_1535():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_2 = singly_linked_list_7.add(str_3)
    var_2 = singly_linked_list_7.getHead()
    assert var_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_11.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    var_4 = singly_linked_list_9.getHead()
    list_1 = singly_linked_list_10.toArray()
    bool_0 = False
    node_5 = module_0.Node(bool_0)
    none_type_4 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_12.add(none_type_4)
    none_type_6 = singly_linked_list_12.add(none_type_4)

def test_case_1536():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()

def test_case_1537():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1538():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_3.getHeadNode()

def test_case_1539():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    int_1 = singly_linked_list_5.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    node_5 = singly_linked_list_8.getHeadNode()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_8 = module_0.Node(none_type_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True

def test_case_1540():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    var_0 = singly_linked_list_3.getHead()
    assert var_0 == '[None]'

def test_case_1541():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    int_1 = singly_linked_list_8.getSize()
    assert int_1 == 1
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()

def test_case_1542():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    var_1 = singly_linked_list_4.getHead()
    assert var_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    node_2 = singly_linked_list_5.getHeadNode()
    var_2 = singly_linked_list_3.remove()

def test_case_1543():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_5.remove()
    node_2 = singly_linked_list_5.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    var_2 = singly_linked_list_7.remove()
    var_3 = singly_linked_list_8.remove()

def test_case_1544():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    var_3 = singly_linked_list_7.remove()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.remove()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    var_6 = singly_linked_list_13.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    var_7 = singly_linked_list_16.remove()
    bool_5 = singly_linked_list_16.isEmpty()
    assert bool_5 is True
    var_8 = singly_linked_list_11.getHead()

def test_case_1545():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)

def test_case_1546():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_1 = singly_linked_list_1.add(str_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_9.remove()
    node_3 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None

def test_case_1547():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_1 = singly_linked_list_4.add(str_1)
    var_2 = singly_linked_list_4.getHead()
    assert var_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_4 = singly_linked_list_6.add(str_3)
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_2 = module_0.Node(complex_0)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    str_7 = singly_linked_list_9.__str__()
    assert str_7 == '[None]'

def test_case_1548():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_2 = var_2.__str__()
    int_1 = singly_linked_list_4.getSize()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1549():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1550():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_1 = var_3.__str__()
    int_0 = singly_linked_list_4.getSize()

def test_case_1551():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()

def test_case_1552():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_2.remove()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_11.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    node_2 = singly_linked_list_11.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_15.getSize()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_16.add(singly_linked_list_14)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_17.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_17.add(singly_linked_list_17)
    int_2 = singly_linked_list_17.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_17.getHeadNode()

def test_case_1553():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1554():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)

def test_case_1555():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    none_type_2 = singly_linked_list_9.add(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_10.__str__()
    assert str_2 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    var_2 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_17.toArray()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    none_type_3 = None
    singly_linked_list_18 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_18.add(none_type_3)
    none_type_5 = singly_linked_list_18.add(none_type_3)
    bool_6 = singly_linked_list_18.isEmpty()
    assert bool_6 is False
    singly_linked_list_19 = module_0.SinglyLinkedList()

def test_case_1556():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    var_2 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_0.getHead()

def test_case_1557():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()

def test_case_1558():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1559():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()

def test_case_1560():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1561():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'

def test_case_1562():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_3 = singly_linked_list_3.getHead()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    none_type_5 = singly_linked_list_8.add(none_type_3)
    bool_5 = singly_linked_list_8.isEmpty()
    assert bool_5 is False
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_6 = False
    node_5 = module_0.Node(bool_6)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.remove()
    str_2 = var_5.__str__()
    assert str_2 == 'None'
    none_type_6 = singly_linked_list_10.add(node_5)
    none_type_7 = None
    node_6 = module_0.Node(none_type_7)

def test_case_1563():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)

def test_case_1564():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_2 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_14.add(none_type_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_18.getSize()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_19.add(singly_linked_list_17)
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_20 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_20.isEmpty()
    assert bool_3 is True
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_21.getHeadNode()
    singly_linked_list_22 = module_0.SinglyLinkedList()
    none_type_4 = None
    node_6 = module_0.Node(none_type_4)

def test_case_1565():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'

def test_case_1566():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True

def test_case_1567():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()
    assert str_2 == 'None'

def test_case_1568():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_5.getHead()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()

def test_case_1569():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_6 = singly_linked_list_7.__str__()
    assert str_6 == '[None]'
    complex_0 = 1389 + 116.582j
    node_3 = module_0.Node(complex_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_8.__str__()
    assert str_7 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_2 = singly_linked_list_8.add(str_7)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.getHead()
    var_1 = singly_linked_list_8.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'

def test_case_1570():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_2 = None

def test_case_1571():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_1 = singly_linked_list_5.add(str_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_4 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_9.add(none_type_4)
    none_type_6 = singly_linked_list_9.add(none_type_4)
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is False
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    int_0 = 0
    node_4 = module_0.Node(int_0)
    var_4 = singly_linked_list_11.getHead()
    list_1 = singly_linked_list_12.toArray()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_7 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_14.add(none_type_7)
    none_type_9 = singly_linked_list_14.add(none_type_7)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.getHead()

def test_case_1572():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.getHead()
    node_0 = module_0.Node(var_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_3.getHead()

def test_case_1573():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_4.remove()
    bool_4 = False
    node_2 = module_0.Node(bool_4)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_6.isEmpty()
    assert bool_5 is True

def test_case_1574():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_3.getHead()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    str_1 = var_1.__str__()

def test_case_1575():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    int_4 = singly_linked_list_7.getSize()

def test_case_1576():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1577():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()

def test_case_1578():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_7.remove()
    node_1 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    node_4 = module_0.Node(singly_linked_list_10)

def test_case_1579():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()

def test_case_1580():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_0 = var_1.__str__()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True

def test_case_1581():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1582():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    str_4 = singly_linked_list_2.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = 0
    node_6 = module_0.Node(int_2)
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_9.add(none_type_3)
    none_type_5 = singly_linked_list_9.add(none_type_3)
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    bool_5 = False
    node_9 = module_0.Node(bool_5)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.getHead()
    str_6 = var_1.__str__()
    int_3 = singly_linked_list_10.getSize()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'

def test_case_1583():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1584():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_5)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)
    var_0 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_10.add(singly_linked_list_10)
    none_type_5 = singly_linked_list_10.add(str_5)
    var_1 = singly_linked_list_10.getHead()
    assert var_1 == '[None]'

def test_case_1585():
    none_type_0 = None

def test_case_1586():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    var_1 = singly_linked_list_3.remove()

def test_case_1587():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_1588():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1589():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_5.getHead()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    var_4 = singly_linked_list_6.getHead()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)

def test_case_1590():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_1 = module_0.Node(var_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_3 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_10.isEmpty()
    assert bool_0 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_13.remove()
    bool_1 = singly_linked_list_13.isEmpty()
    assert bool_1 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'

def test_case_1591():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    var_1 = singly_linked_list_3.getHead()
    assert var_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    var_2 = singly_linked_list_4.getHead()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_6.add(none_type_4)
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    var_3 = singly_linked_list_8.getHead()
    node_2 = module_0.Node(str_3)
    assert node_2.value == '[None]'
    var_4 = singly_linked_list_4.getHead()

def test_case_1592():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_2.add(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_7)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True

def test_case_1593():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    node_7 = module_0.Node(singly_linked_list_5)
    int_2 = singly_linked_list_7.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    var_1 = singly_linked_list_7.getHead()

def test_case_1594():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_3)
    var_0 = singly_linked_list_0.getHead()

def test_case_1595():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()

def test_case_1596():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_0.getHead()

def test_case_1597():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    none_type_1 = singly_linked_list_2.add(node_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_3 = singly_linked_list_4.add(str_2)

def test_case_1598():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_6.add(none_type_5)
    none_type_7 = singly_linked_list_6.add(none_type_5)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()

def test_case_1599():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = 'P{"'
    node_2 = module_0.Node(str_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.getHead()
    str_3 = var_4.__str__()
    var_5 = singly_linked_list_5.getHead()

def test_case_1600():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()

def test_case_1601():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_1 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    int_1 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_9.getHead()

def test_case_1602():
    dict_0 = {}
    list_0 = [dict_0]
    tuple_0 = (list_0,)
    node_0 = module_0.Node(tuple_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1603():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    none_type_3 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_8.add(none_type_3)
    none_type_5 = singly_linked_list_8.add(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    int_1 = singly_linked_list_10.getSize()

def test_case_1604():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_1)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    node_2 = singly_linked_list_7.getHeadNode()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    var_1 = singly_linked_list_8.getHead()

def test_case_1605():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()

def test_case_1606():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    var_0 = singly_linked_list_13.getHead()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_7 = module_0.Node(bytes_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_15.getHeadNode()

def test_case_1607():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = var_0.__str__()
    assert str_3 == 'None'
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_9.add(singly_linked_list_9)
    int_4 = singly_linked_list_9.getSize()
    assert int_4 == 1
    node_7 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_10.getSize()
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True
    var_1 = singly_linked_list_11.getHead()

def test_case_1608():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_6 = singly_linked_list_12.isEmpty()
    assert bool_6 is True
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    int_2 = singly_linked_list_14.getSize()
    assert int_2 == 1
    node_5 = singly_linked_list_14.getHeadNode()
    str_5 = singly_linked_list_14.__str__()

def test_case_1609():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    str_2 = var_0.__str__()
    assert str_2 == 'None'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    var_1 = singly_linked_list_7.getHead()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.getHead()
    int_4 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_12.getSize()
    bool_3 = singly_linked_list_13.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_11.isEmpty()
    assert bool_4 is True

def test_case_1610():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    int_4 = 0
    node_4 = module_0.Node(int_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.getHead()
    str_3 = var_3.__str__()
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()

def test_case_1611():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    var_0 = singly_linked_list_4.getHead()
    node_2 = module_0.Node(str_0)
    assert node_2.value == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    list_1 = singly_linked_list_6.toArray()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_10.getSize()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    int_3 = singly_linked_list_10.getSize()

def test_case_1612():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    node_4 = module_0.Node(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    node_5 = module_0.Node(var_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    int_3 = singly_linked_list_8.getSize()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    none_type_3 = singly_linked_list_10.add(none_type_1)
    list_1 = singly_linked_list_10.toArray()
    none_type_4 = None
    node_9 = module_0.Node(none_type_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_10 = singly_linked_list_12.getHeadNode()
    bool_4 = False
    node_11 = module_0.Node(bool_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.getHead()
    str_0 = var_2.__str__()
    int_4 = singly_linked_list_12.getSize()
    var_3 = singly_linked_list_11.getHead()

def test_case_1613():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_1614():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_6.remove()

def test_case_1615():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True

def test_case_1616():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    node_3 = module_0.Node(singly_linked_list_1)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_5.toArray()
    var_2 = singly_linked_list_5.getHead()

def test_case_1617():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1618():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_1)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(none_type_3)
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    list_0 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_5.getHead()

def test_case_1619():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(none_type_2)
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    int_2 = singly_linked_list_8.getSize()
    bool_5 = False
    node_5 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_7 = singly_linked_list_11.add(str_2)
    var_2 = singly_linked_list_11.getHead()
    assert var_2 == '[None]'
    int_3 = -1870
    node_6 = module_0.Node(int_3)
    bool_6 = False
    node_7 = module_0.Node(bool_6)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.remove()

def test_case_1620():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_9.__str__()
    assert str_1 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_11.getHeadNode()
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.getHead()
    str_2 = var_2.__str__()
    int_3 = singly_linked_list_11.getSize()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_5 = var_3.__str__()
    assert str_5 == 'None'
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    none_type_2 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_15.add(none_type_2)
    none_type_4 = singly_linked_list_15.add(none_type_2)
    bool_6 = singly_linked_list_15.isEmpty()
    assert bool_6 is False

def test_case_1621():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1622():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1623():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_1.add(node_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_4.remove()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    str_2 = var_3.__str__()
    assert str_2 == 'None'
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_9.isEmpty()
    assert bool_3 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    var_4 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    none_type_5 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_13.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_5.value).__module__}.{type(var_5.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_5.next is None
    str_6 = var_5.__str__()

def test_case_1624():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    none_type_2 = None
    node_0 = module_0.Node(none_type_2)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    none_type_5 = singly_linked_list_5.add(none_type_3)
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is False
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_6.toArray()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_10.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_10.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    none_type_6 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    node_3 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    var_3 = singly_linked_list_8.getHead()

def test_case_1625():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_1 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(none_type_1)
    none_type_3 = singly_linked_list_6.add(none_type_1)
    list_0 = singly_linked_list_6.toArray()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_4 = module_0.Node(bytes_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    node_6 = module_0.Node(singly_linked_list_7)
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(none_type_4)
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    list_2 = singly_linked_list_10.toArray()
    var_2 = singly_linked_list_10.getHead()
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    none_type_6 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_11.add(none_type_6)
    none_type_8 = singly_linked_list_11.add(none_type_6)
    bool_7 = singly_linked_list_11.isEmpty()
    assert bool_7 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_1626():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_0.getHead()

def test_case_1627():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    str_0 = 'P{"'
    node_4 = module_0.Node(str_0)

def test_case_1628():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    str_1 = 'P{"'
    node_1 = module_0.Node(str_1)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1629():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1630():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    node_3 = module_0.Node(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_9.__str__()
    assert str_0 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_12.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_12.remove()
    node_4 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_13.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_14.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_14.add(singly_linked_list_14)
    none_type_1 = singly_linked_list_14.add(str_3)
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_15.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_15.remove()
    bool_3 = singly_linked_list_15.isEmpty()
    assert bool_3 is True
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_16.toArray()
    none_type_2 = None
    node_5 = module_0.Node(none_type_2)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_17.__str__()
    assert str_5 == '[None]'
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    str_6 = singly_linked_list_17.__str__()
    assert str_6 == '[None]'

def test_case_1631():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True

def test_case_1632():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_3.toArray()
    var_2 = singly_linked_list_3.getHead()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_3 = var_3.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.getHead()

def test_case_1633():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    int_0 = 0
    node_2 = module_0.Node(int_0)
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    str_2 = 'P{"'
    node_4 = module_0.Node(str_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    int_3 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_8.getHeadNode()
    node_9 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_9.remove()

def test_case_1634():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(singly_linked_list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_7.getHeadNode()
    node_1 = singly_linked_list_7.getHeadNode()
    var_1 = singly_linked_list_1.remove()

def test_case_1635():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    node_5 = singly_linked_list_4.getHeadNode()
    none_type_2 = None
    node_6 = module_0.Node(none_type_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_0 = var_2.__str__()
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_11.getSize()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_13.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)

def test_case_1636():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    var_0 = singly_linked_list_0.getHead()
    assert var_0 == '[None]'
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    none_type_2 = singly_linked_list_1.add(node_0)

def test_case_1637():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_2 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    int_3 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_1 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_10.add(none_type_1)
    var_2 = singly_linked_list_9.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_11.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_13.toArray()
    var_3 = singly_linked_list_12.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)

def test_case_1638():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(str_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.getHead()
    str_2 = var_1.__str__()
    int_0 = singly_linked_list_4.getSize()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    int_1 = singly_linked_list_6.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_7.add(none_type_3)
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    list_1 = singly_linked_list_7.toArray()

def test_case_1639():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    node_1 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_9.add(none_type_2)

def test_case_1640():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1641():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_4.getHead()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_1 = var_2.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_6.add(str_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_8.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_7.remove()

def test_case_1642():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1643():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1644():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1645():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_3.remove()
    str_3 = 'P{"'
    node_2 = module_0.Node(str_3)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_11.getHead()
    str_5 = var_4.__str__()
    int_3 = singly_linked_list_10.getSize()
    bool_4 = False
    node_7 = module_0.Node(bool_4)

def test_case_1646():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_2.remove()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    str_3 = 'P{"'
    node_5 = module_0.Node(str_3)
    var_1 = singly_linked_list_0.getHead()

def test_case_1647():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_4)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_4 = module_0.Node(complex_0)
    var_0 = singly_linked_list_5.getHead()

def test_case_1648():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1649():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1650():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    none_type_4 = singly_linked_list_6.add(none_type_2)
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_0 = singly_linked_list_4.remove()

def test_case_1651():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_1.add(none_type_2)
    none_type_4 = singly_linked_list_1.add(none_type_2)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is False
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_6 = singly_linked_list_2.add(str_1)
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_0 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_6.toArray()
    none_type_7 = None
    node_3 = module_0.Node(none_type_7)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    node_5 = module_0.Node(singly_linked_list_7)
    int_2 = singly_linked_list_9.getSize()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_12.getSize()
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    int_5 = singly_linked_list_12.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_15.toArray()
    none_type_8 = None
    node_9 = module_0.Node(none_type_8)
    bool_7 = singly_linked_list_14.isEmpty()
    assert bool_7 is True
    var_1 = singly_linked_list_14.remove()

def test_case_1652():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()

def test_case_1653():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()

def test_case_1654():
    pass

def test_case_1655():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False

def test_case_1656():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.getHead()
    str_1 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(str_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    int_0 = singly_linked_list_9.getSize()
    assert int_0 == 1
    bool_2 = False
    node_0 = module_0.Node(bool_2)
    node_1 = module_0.Node(node_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_10.getHead()
    int_1 = singly_linked_list_10.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True

def test_case_1657():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_2 = singly_linked_list_3.getHead()
    var_3 = singly_linked_list_1.getHead()

def test_case_1658():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_3.add(none_type_3)
    none_type_5 = singly_linked_list_3.add(none_type_3)
    list_0 = singly_linked_list_3.toArray()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_5 = False
    node_4 = module_0.Node(bool_5)
    node_5 = module_0.Node(node_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_9.toArray()
    none_type_6 = None
    node_6 = module_0.Node(none_type_6)
    bool_6 = singly_linked_list_8.isEmpty()
    assert bool_6 is True

def test_case_1659():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_8.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    var_1 = singly_linked_list_9.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    bool_5 = singly_linked_list_14.isEmpty()
    assert bool_5 is True
    var_3 = singly_linked_list_12.remove()
    var_4 = singly_linked_list_13.getHead()

def test_case_1660():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    node_3 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_5 = module_0.Node(bytes_0)
    int_1 = 0
    node_6 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    node_7 = singly_linked_list_6.getHeadNode()
    str_4 = singly_linked_list_6.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    int_4 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    int_5 = singly_linked_list_10.getSize()

def test_case_1661():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_10.add(none_type_0)
    none_type_2 = singly_linked_list_10.add(none_type_0)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_12.add(none_type_3)
    none_type_5 = singly_linked_list_12.add(none_type_3)
    list_0 = singly_linked_list_12.toArray()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_13.__str__()
    assert str_2 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()

def test_case_1662():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(none_type_2)
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_2.toArray()

def test_case_1663():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1664():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()

def test_case_1665():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1666():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_1.add(singly_linked_list_1)
    none_type_2 = singly_linked_list_1.add(str_1)
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    node_0 = singly_linked_list_2.getHeadNode()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_4.add(none_type_3)
    none_type_5 = singly_linked_list_4.add(none_type_3)
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is False
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_7.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_3 = module_0.Node(int_3)
    var_1 = singly_linked_list_6.remove()

def test_case_1667():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_3 = var_1.__str__()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    str_4 = var_3.__str__()
    assert str_4 == 'None'
    none_type_1 = singly_linked_list_3.add(node_2)

def test_case_1668():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_3 = module_0.Node(var_1)
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    int_1 = 0
    node_5 = module_0.Node(int_1)
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_8.getHead()
    list_0 = singly_linked_list_8.toArray()
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    node_9 = module_0.Node(node_8)

def test_case_1669():
    complex_0 = 566.99709 - 1644.76199j
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1670():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1671():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()

def test_case_1672():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1673():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_2 = var_1.__str__()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_2 = singly_linked_list_6.add(str_4)
    var_2 = singly_linked_list_6.getHead()
    assert var_2 == '[None]'
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_3 = module_0.Node(bytes_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_7.__str__()
    assert str_5 == '[None]'
    var_3 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    var_4 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    var_6 = singly_linked_list_13.getHead()
    list_1 = singly_linked_list_14.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_16.getHead()
    node_5 = module_0.Node(var_7)

def test_case_1674():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True

def test_case_1675():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    node_2 = module_0.Node(var_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_2)
    list_0 = singly_linked_list_3.toArray()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()

def test_case_1676():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1677():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_2 = var_2.__str__()
    node_2 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()
    str_3 = var_3.__str__()
    int_1 = singly_linked_list_6.getSize()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'

def test_case_1678():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1679():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()

def test_case_1680():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_4.toArray()
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(none_type_2)
    none_type_4 = singly_linked_list_5.add(none_type_2)
    list_3 = singly_linked_list_5.toArray()
    list_4 = []
    none_type_5 = singly_linked_list_5.add(list_4)

def test_case_1681():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    int_2 = 0
    node_1 = module_0.Node(int_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    int_3 = singly_linked_list_2.getSize()
    assert int_3 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_4 = var_1.__str__()
    int_4 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    var_2 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    int_5 = 0
    node_5 = module_0.Node(int_5)
    var_3 = singly_linked_list_9.remove()

def test_case_1682():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()

def test_case_1683():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1684():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1685():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    none_type_3 = singly_linked_list_1.add(none_type_1)
    list_0 = singly_linked_list_1.toArray()
    list_1 = []
    none_type_4 = singly_linked_list_1.add(list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_5 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_6 = singly_linked_list_2.add(str_2)
    list_2 = singly_linked_list_2.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_7 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_3.add(none_type_7)
    none_type_9 = singly_linked_list_3.add(none_type_7)
    bool_3 = singly_linked_list_3.isEmpty()
    assert bool_3 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    str_3 = var_0.__str__()
    assert str_3 == 'None'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_10 = singly_linked_list_7.add(singly_linked_list_7)
    none_type_11 = singly_linked_list_7.add(str_4)
    var_1 = singly_linked_list_7.getHead()
    assert var_1 == '[None]'
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'

def test_case_1686():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_1 = None
    node_1 = module_0.Node(none_type_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    node_4 = singly_linked_list_4.getHeadNode()
    var_1 = singly_linked_list_3.getHead()

def test_case_1687():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_2.getSize()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'

def test_case_1688():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_10)
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.getHead()
    str_5 = var_1.__str__()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_4 = singly_linked_list_13.add(str_6)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_14.remove()
    str_7 = var_2.__str__()
    assert str_7 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_8 = var_2.__str__()
    assert str_8 == 'None'
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_18.getHeadNode()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_19.getHead()
    str_9 = var_3.__str__()
    int_2 = singly_linked_list_18.getSize()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    bool_3 = False
    node_5 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_21 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_21.add(none_type_5)
    none_type_7 = singly_linked_list_21.add(none_type_5)

def test_case_1689():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_2.getHead()
    list_0 = singly_linked_list_2.toArray()

def test_case_1690():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1691():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True

def test_case_1692():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    str_0 = var_2.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_1.add(node_1)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    node_6 = singly_linked_list_5.getHeadNode()
    var_3 = singly_linked_list_4.getHead()
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.remove()
    var_5 = singly_linked_list_2.getHead()

def test_case_1693():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_1.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    list_1 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_6 = singly_linked_list_3.add(str_3)
    list_2 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    none_type_7 = None
    node_5 = module_0.Node(none_type_7)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.remove()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    bool_3 = False
    node_7 = module_0.Node(bool_3)
    str_6 = singly_linked_list_8.__str__()
    assert str_6 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_9.__str__()
    assert str_7 == '[None]'
    none_type_8 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_8 = var_3.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_11.__str__()
    assert str_9 == '[None]'
    none_type_9 = singly_linked_list_11.add(singly_linked_list_11)
    none_type_10 = singly_linked_list_11.add(str_9)
    var_4 = singly_linked_list_11.getHead()
    assert var_4 == '[None]'

def test_case_1694():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    str_0 = var_2.__str__()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    str_1 = 'P{"'
    node_2 = module_0.Node(str_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_6.getHead()

def test_case_1695():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    none_type_3 = singly_linked_list_5.add(none_type_1)
    list_2 = singly_linked_list_5.toArray()
    list_3 = []
    none_type_4 = singly_linked_list_5.add(list_3)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_5 = singly_linked_list_9.toArray()
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_10.getHead()
    str_3 = var_0.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_12.getHeadNode()
    node_6 = singly_linked_list_12.getHeadNode()
    var_1 = singly_linked_list_11.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_1 = 0
    node_7 = module_0.Node(int_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_6 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    node_8 = module_0.Node(singly_linked_list_13)

def test_case_1696():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    node_4 = singly_linked_list_6.getHeadNode()
    int_1 = singly_linked_list_6.getSize()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    complex_0 = 1389 + 116.582j
    node_7 = module_0.Node(complex_0)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    none_type_4 = singly_linked_list_9.add(str_5)
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    var_1 = singly_linked_list_7.getHead()

def test_case_1697():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    var_2 = singly_linked_list_4.getHead()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_10)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_12.remove()
    node_5 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    node_6 = module_0.Node(var_3)
    assert node_6.value is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    var_4 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_14.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_5 = singly_linked_list_13.remove()

def test_case_1698():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1699():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    var_1 = singly_linked_list_0.remove()

def test_case_1700():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    node_2 = module_0.Node(var_1)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_9.getHead()
    list_0 = singly_linked_list_9.toArray()
    var_5 = singly_linked_list_9.getHead()

def test_case_1701():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1702():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_5.__str__()
    assert str_0 == '[None]'
    node_2 = singly_linked_list_4.getHeadNode()
    int_1 = singly_linked_list_4.getSize()

def test_case_1703():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_7.add(str_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_8.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    var_1 = singly_linked_list_9.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_12.add(singly_linked_list_12)
    int_4 = singly_linked_list_12.getSize()
    assert int_4 == 1
    node_4 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_14)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_18.getHeadNode()
    node_7 = singly_linked_list_18.getHeadNode()

def test_case_1704():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()
    var_0 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    int_1 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_1705():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_4.getSize()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'

def test_case_1706():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_4.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_1 = singly_linked_list_2.getHead()
    list_1 = singly_linked_list_3.toArray()

def test_case_1707():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(none_type_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_0 = singly_linked_list_9.remove()
    node_1 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_10.add(none_type_3)
    none_type_5 = singly_linked_list_10.add(none_type_3)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is False
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_13.isEmpty()
    assert bool_4 is True
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    singly_linked_list_16 = module_0.SinglyLinkedList()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_17.remove()
    bool_5 = singly_linked_list_17.isEmpty()
    assert bool_5 is True
    var_2 = singly_linked_list_15.remove()
    bool_6 = False
    node_4 = module_0.Node(bool_6)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_18.toArray()
    list_1 = singly_linked_list_18.toArray()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_19.__str__()
    assert str_8 == '[None]'
    singly_linked_list_20 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_20.add(singly_linked_list_20)
    singly_linked_list_21 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_21.getHeadNode()
    str_9 = singly_linked_list_19.__str__()
    assert str_9 == '[None]'
    int_0 = 0
    node_6 = module_0.Node(int_0)
    singly_linked_list_22 = module_0.SinglyLinkedList()
    str_10 = singly_linked_list_22.__str__()
    assert str_10 == '[None]'
    none_type_7 = singly_linked_list_22.add(singly_linked_list_22)
    int_1 = singly_linked_list_22.getSize()
    assert int_1 == 1
    node_7 = singly_linked_list_22.getHeadNode()

def test_case_1708():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    list_1 = []
    none_type_3 = singly_linked_list_0.add(list_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_2.getHead()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_3 = singly_linked_list_5.isEmpty()
    assert bool_3 is True
    var_2 = singly_linked_list_5.getHead()
    list_2 = singly_linked_list_5.toArray()
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_7.__str__()
    assert str_0 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    node_7 = module_0.Node(var_3)
    var_4 = singly_linked_list_7.getHead()

def test_case_1709():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1710():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    int_1 = singly_linked_list_2.getSize()

def test_case_1711():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    var_1 = singly_linked_list_0.getHead()

def test_case_1712():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_2.remove()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.remove()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    var_4 = singly_linked_list_5.remove()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_2 = 0
    node_3 = module_0.Node(int_2)
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    int_4 = singly_linked_list_10.getSize()
    assert int_4 == 1
    node_6 = singly_linked_list_10.getHeadNode()
    str_5 = singly_linked_list_10.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_7 = singly_linked_list_11.getHeadNode()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_12.getHead()
    str_6 = var_5.__str__()
    int_5 = singly_linked_list_11.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_6 = -1870
    node_9 = module_0.Node(int_6)
    var_6 = singly_linked_list_4.getHead()

def test_case_1713():
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    node_2 = module_0.Node(singly_linked_list_0)
    int_1 = singly_linked_list_2.getSize()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_3 = singly_linked_list_3.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_3.__str__()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    list_1 = singly_linked_list_4.toArray()
    var_0 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    str_2 = var_1.__str__()
    assert str_2 == 'None'

def test_case_1714():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()

def test_case_1715():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()

def test_case_1716():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1717():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    node_4 = singly_linked_list_6.getHeadNode()
    var_0 = singly_linked_list_5.getHead()

def test_case_1718():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1719():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_2 = singly_linked_list_1.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_4.getSize()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    int_2 = singly_linked_list_4.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_7.isEmpty()
    assert bool_1 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_5 = var_1.__str__()
    node_6 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    int_4 = -1870
    node_7 = module_0.Node(int_4)

def test_case_1720():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_2.remove()
    node_1 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_0)
    assert node_2.value is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_4 = var_2.__str__()
    node_3 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None

def test_case_1721():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.remove()
    str_1 = var_2.__str__()
    assert str_1 == 'None'
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_3 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_7)

def test_case_1722():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    str_1 = var_2.__str__()
    int_1 = singly_linked_list_4.getSize()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    var_4 = singly_linked_list_6.remove()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_10.add(str_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_14.remove()
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    var_7 = singly_linked_list_12.remove()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_16.getHeadNode()
    node_7 = singly_linked_list_16.getHeadNode()
    var_8 = singly_linked_list_15.getHead()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_17.isEmpty()
    assert bool_5 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_19.toArray()
    var_9 = singly_linked_list_18.getHead()

def test_case_1723():
    set_0 = set()
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1724():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1725():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    var_3 = singly_linked_list_5.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    var_4 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_10.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_5.value).__module__}.{type(var_5.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_5.next is None
    str_4 = var_5.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_12.getSize()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(none_type_3)
    none_type_5 = singly_linked_list_15.add(none_type_3)
    list_1 = singly_linked_list_15.toArray()
    var_6 = singly_linked_list_15.getHead()

def test_case_1726():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)

def test_case_1727():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    int_0 = singly_linked_list_4.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_4.getHead()
    dict_0 = {int_0: none_type_0, var_1: str_2}
    node_1 = module_0.Node(dict_0)
    str_3 = singly_linked_list_4.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_7.remove()
    node_3 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_8.add(none_type_1)
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    var_3 = singly_linked_list_2.remove()

def test_case_1728():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_1.add(none_type_3)
    none_type_5 = singly_linked_list_1.add(none_type_3)
    list_0 = singly_linked_list_1.toArray()
    var_0 = singly_linked_list_1.getHead()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_0 = var_1.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    node_3 = module_0.Node(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_6 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_7 = singly_linked_list_5.add(str_3)
    node_5 = singly_linked_list_5.getHeadNode()
    assert node_5.value == '[None]'

def test_case_1729():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    node_0 = singly_linked_list_1.getHeadNode()
    int_0 = singly_linked_list_1.getSize()
    var_1 = singly_linked_list_2.remove()

def test_case_1730():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_2.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_3 = singly_linked_list_5.add(str_3)
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_5 = singly_linked_list_6.add(str_4)
    var_3 = singly_linked_list_6.getHead()
    assert var_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_6 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_8.add(none_type_6)
    var_4 = singly_linked_list_7.getHead()
    int_1 = 0
    node_2 = module_0.Node(int_1)

def test_case_1731():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_2 = False
    node_1 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_3.add(none_type_5)
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    list_1 = singly_linked_list_3.toArray()
    var_0 = singly_linked_list_3.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_7 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_8 = singly_linked_list_4.add(str_1)
    list_2 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    bool_4 = False
    node_3 = module_0.Node(bool_4)
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_9 = singly_linked_list_6.add(str_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    none_type_10 = None
    node_4 = module_0.Node(none_type_10)

def test_case_1732():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(singly_linked_list_3)
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_5.getHeadNode()
    int_2 = 0
    node_2 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_6.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)
    int_4 = 0
    node_5 = module_0.Node(int_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_10.__str__()
    assert str_3 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_11.getHeadNode()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    int_5 = -1870
    node_7 = module_0.Node(int_5)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    str_5 = var_1.__str__()
    assert str_5 == 'None'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    var_2 = singly_linked_list_13.remove()
    node_8 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_8).__module__}.{type(node_8).__qualname__}' == 'linkedList3.Node'
    assert node_8.value is None
    assert node_8.next is None

def test_case_1733():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_8.add(singly_linked_list_8)
    none_type_4 = singly_linked_list_8.add(str_2)
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_9.toArray()
    list_2 = singly_linked_list_9.toArray()
    int_1 = 719
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_10.add(int_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    var_2 = singly_linked_list_14.remove()
    node_3 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_16.toArray()
    none_type_6 = None
    node_4 = module_0.Node(none_type_6)
    bool_4 = singly_linked_list_15.isEmpty()
    assert bool_4 is True
    var_3 = singly_linked_list_15.remove()

def test_case_1734():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_4.getHeadNode()
    str_3 = singly_linked_list_2.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_4.add(none_type_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    node_2 = singly_linked_list_7.getHeadNode()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_11.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    node_4 = singly_linked_list_11.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    none_type_4 = singly_linked_list_13.add(singly_linked_list_13)
    none_type_5 = singly_linked_list_13.add(str_6)
    list_1 = singly_linked_list_13.toArray()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_14.__str__()
    assert str_7 == '[None]'
    none_type_6 = singly_linked_list_14.add(singly_linked_list_14)
    none_type_7 = singly_linked_list_14.add(str_7)
    var_3 = singly_linked_list_14.getHead()
    assert var_3 == '[None]'
    bool_1 = False
    node_5 = module_0.Node(bool_1)

def test_case_1735():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_8.getHeadNode()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_3 = module_0.Node(bool_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    var_3 = singly_linked_list_12.remove()
    node_4 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    int_1 = 0
    node_5 = module_0.Node(int_1)
    none_type_2 = None
    node_6 = module_0.Node(none_type_2)
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    list_2 = singly_linked_list_13.toArray()
    int_2 = 0
    node_8 = module_0.Node(int_2)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_10.getHead()

def test_case_1736():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    node_1 = module_0.Node(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    none_type_1 = singly_linked_list_3.add(str_1)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    none_type_2 = singly_linked_list_4.add(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    node_4 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_9.getSize()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1737():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_0 = singly_linked_list_1.getSize()
    assert int_0 == 1
    var_2 = singly_linked_list_1.getHead()
    dict_0 = {int_0: none_type_0, var_2: str_1}
    node_0 = module_0.Node(dict_0)
    str_2 = singly_linked_list_1.__str__()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_6.getHeadNode()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'

def test_case_1738():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1739():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_8.add(singly_linked_list_8)
    int_1 = singly_linked_list_8.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_8.getHeadNode()
    str_4 = singly_linked_list_8.__str__()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_9.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_9.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_6 = var_0.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    var_1 = singly_linked_list_12.remove()
    bool_0 = singly_linked_list_12.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_12.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    node_4 = module_0.Node(var_3)
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_14.add(none_type_2)
    var_4 = singly_linked_list_14.getHead()

def test_case_1740():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1741():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1742():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_2 = singly_linked_list_5.add(str_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_4 = singly_linked_list_6.add(str_3)
    var_3 = singly_linked_list_6.getHead()
    assert var_3 == '[None]'

def test_case_1743():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    var_1 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_4.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_12.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_12.remove()
    node_7 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_7).__module__}.{type(node_7).__qualname__}' == 'linkedList3.Node'
    assert node_7.value is None
    assert node_7.next is None
    node_8 = module_0.Node(var_2)
    assert node_8.value is None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_13.getHead()
    int_3 = singly_linked_list_13.getSize()
    bool_5 = False
    node_9 = module_0.Node(bool_5)
    none_type_1 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_14.add(none_type_1)
    none_type_3 = singly_linked_list_14.add(none_type_1)
    bool_6 = singly_linked_list_14.isEmpty()
    assert bool_6 is False
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_1744():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_1.add(none_type_1)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = -1870
    node_3 = module_0.Node(int_1)
    node_4 = module_0.Node(node_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    int_3 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.getHead()
    node_7 = module_0.Node(var_1)
    bool_2 = False
    node_8 = module_0.Node(bool_2)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.remove()

def test_case_1745():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    node_1 = module_0.Node(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_4.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_7.isEmpty()
    assert bool_0 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_11.remove()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    node_5 = module_0.Node(node_4)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    var_5 = singly_linked_list_11.getHead()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_13.__str__()
    assert str_7 == '[None]'
    var_6 = singly_linked_list_13.remove()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_14.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_6 = module_0.Node(int_3)
    var_7 = singly_linked_list_13.remove()
    bool_5 = False
    node_7 = module_0.Node(bool_5)
    none_type_4 = None
    singly_linked_list_15 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_15.add(none_type_4)
    none_type_6 = singly_linked_list_15.add(none_type_4)
    list_0 = singly_linked_list_15.toArray()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_8 = singly_linked_list_16.getHead()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_17.__str__()
    assert str_8 == '[None]'
    bool_6 = False
    node_8 = module_0.Node(bool_6)
    str_9 = singly_linked_list_17.__str__()
    assert str_9 == '[None]'
    none_type_7 = singly_linked_list_16.add(str_8)
    bool_7 = False
    node_9 = module_0.Node(bool_7)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    var_9 = singly_linked_list_18.remove()
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_10 = singly_linked_list_19.remove()
    str_10 = var_10.__str__()
    none_type_8 = singly_linked_list_18.add(node_9)

def test_case_1746():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_2 = None
    node_1 = module_0.Node(none_type_2)
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_1.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_4 = module_0.Node(none_type_3)

def test_case_1747():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_3)
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_5.__str__()
    assert str_4 == '[None]'
    bool_3 = False
    node_2 = module_0.Node(bool_3)
    str_5 = singly_linked_list_5.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_3 = module_0.Node(complex_0)

def test_case_1748():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()

def test_case_1749():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    node_2 = module_0.Node(singly_linked_list_1)
    int_1 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    none_type_3 = None
    node_3 = module_0.Node(none_type_3)
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_4.isEmpty()
    assert bool_4 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_6.__str__()
    assert str_0 == '[None]'
    none_type_4 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_4 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.getHead()
    int_2 = singly_linked_list_8.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_9.getSize()
    bool_5 = singly_linked_list_10.isEmpty()
    assert bool_5 is True
    bool_6 = singly_linked_list_8.isEmpty()
    assert bool_6 is True
    bool_7 = False
    node_6 = module_0.Node(bool_7)
    none_type_5 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_11.add(none_type_5)
    str_2 = singly_linked_list_11.__str__()
    assert str_2 == '[None]'
    list_3 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_12.getHead()
    str_3 = var_2.__str__()
    bool_8 = False
    node_7 = module_0.Node(bool_8)
    none_type_7 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_13.add(none_type_7)
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_14.getSize()
    bool_9 = False
    node_9 = module_0.Node(bool_9)
    int_5 = singly_linked_list_14.getSize()
    int_6 = 0
    node_10 = module_0.Node(int_6)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_16.__str__()
    assert str_5 == '[None]'
    bool_10 = False
    node_11 = module_0.Node(bool_10)
    str_6 = singly_linked_list_16.__str__()
    assert str_6 == '[None]'
    complex_0 = 1389 + 116.582j
    node_12 = module_0.Node(complex_0)
    var_3 = singly_linked_list_8.remove()

def test_case_1750():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_5.add(none_type_0)
    none_type_2 = singly_linked_list_5.add(none_type_0)
    list_0 = singly_linked_list_5.toArray()
    var_3 = singly_linked_list_5.getHead()

def test_case_1751():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1752():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    node_1 = module_0.Node(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_4.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    bool_0 = False
    node_5 = module_0.Node(bool_0)
    none_type_3 = None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_5.add(none_type_3)
    none_type_5 = singly_linked_list_5.add(none_type_3)
    list_0 = singly_linked_list_5.toArray()
    var_1 = singly_linked_list_5.getHead()
    list_1 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_8.isEmpty()
    assert bool_1 is True
    node_7 = module_0.Node(singly_linked_list_6)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    var_2 = singly_linked_list_10.getHead()
    singly_linked_list_12 = module_0.SinglyLinkedList()

def test_case_1753():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    node_0 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_4.add(none_type_1)
    none_type_3 = singly_linked_list_4.add(none_type_1)
    list_0 = singly_linked_list_4.toArray()
    var_2 = singly_linked_list_4.getHead()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    int_0 = singly_linked_list_5.getSize()
    assert int_0 == 1
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_6.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_6 = singly_linked_list_6.add(str_4)
    node_2 = singly_linked_list_6.getHeadNode()
    assert node_2.value == '[None]'
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_7 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_7.add(none_type_7)
    none_type_9 = singly_linked_list_7.add(none_type_7)
    var_3 = singly_linked_list_7.getHead()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_2 = [bytes_0]
    node_4 = module_0.Node(list_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_10 = singly_linked_list_8.add(node_4)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    none_type_11 = singly_linked_list_9.add(str_5)

def test_case_1754():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_4.getHead()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    var_3 = singly_linked_list_5.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    var_4 = singly_linked_list_5.getHead()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_6.remove()

def test_case_1755():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_1.remove()

def test_case_1756():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_7.getHead()
    str_1 = var_1.__str__()
    int_1 = singly_linked_list_6.getSize()
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    none_type_0 = None
    node_6 = module_0.Node(none_type_0)
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_13.__str__()
    assert str_3 == '[None]'
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_14.getHeadNode()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'

def test_case_1757():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    node_1 = module_0.Node(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_2.remove()
    node_2 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    node_3 = module_0.Node(var_1)
    assert node_3.value is None

def test_case_1758():
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1759():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1760():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1761():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1762():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.getHead()

def test_case_1763():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_3.add(none_type_1)
    none_type_3 = singly_linked_list_3.add(none_type_1)
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_3 = var_1.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    none_type_5 = singly_linked_list_6.add(none_type_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    node_2 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_9.getHeadNode()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_10.getHeadNode()
    node_5 = singly_linked_list_10.getHeadNode()
    var_3 = singly_linked_list_9.getHead()
    singly_linked_list_11 = module_0.SinglyLinkedList()

def test_case_1764():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1765():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1766():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_1 = var_1.__str__()
    node_3 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_5.remove()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    node_5 = module_0.Node(node_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    none_type_2 = singly_linked_list_11.add(singly_linked_list_11)

def test_case_1767():
    str_0 = 'P{"'
    node_0 = module_0.Node(str_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True

def test_case_1768():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_0.getSize()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    int_2 = singly_linked_list_0.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_3.add(none_type_2)
    none_type_4 = singly_linked_list_3.add(none_type_2)
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    node_7 = module_0.Node(singly_linked_list_4)
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_1769():
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_0 = module_0.Node(bytes_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    node_1 = singly_linked_list_0.getHeadNode()
    assert node_1.value == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    var_2 = singly_linked_list_3.getHead()
    list_1 = singly_linked_list_4.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_9.remove()
    node_4 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None

def test_case_1770():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_4 = singly_linked_list_4.add(str_1)
    var_2 = singly_linked_list_4.getHead()
    assert var_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    node_4 = singly_linked_list_6.getHeadNode()
    var_3 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    var_5 = singly_linked_list_7.getHead()
    list_1 = singly_linked_list_8.toArray()

def test_case_1771():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = 'P{"'
    node_1 = module_0.Node(str_0)
    none_type_2 = singly_linked_list_0.add(none_type_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    none_type_5 = singly_linked_list_2.add(none_type_3)
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is False
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_4.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_6 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_7 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_9.add(none_type_7)

def test_case_1772():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_9.add(none_type_0)
    none_type_2 = singly_linked_list_9.add(none_type_0)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_10.getSize()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    int_2 = singly_linked_list_10.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    list_2 = singly_linked_list_13.toArray()
    dict_0 = {}
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_14.add(dict_0)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_15.getSize()
    bool_3 = singly_linked_list_16.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_16.getHead()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_17.__str__()
    assert str_3 == '[None]'
    none_type_4 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_19 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_19.__str__()
    assert str_4 == '[None]'
    none_type_5 = singly_linked_list_19.add(singly_linked_list_19)
    int_5 = singly_linked_list_19.getSize()
    assert int_5 == 1
    node_9 = singly_linked_list_19.getHeadNode()
    singly_linked_list_20 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_20.getHead()
    singly_linked_list_21 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_21.__str__()
    assert str_5 == '[None]'
    bool_5 = False
    node_10 = module_0.Node(bool_5)
    str_6 = singly_linked_list_21.__str__()
    assert str_6 == '[None]'
    none_type_6 = singly_linked_list_20.add(str_5)

def test_case_1773():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_2.remove()
    none_type_0 = singly_linked_list_3.add(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    var_3 = singly_linked_list_8.getHead()
    dict_0 = {int_2: none_type_2, var_3: str_3}
    node_3 = module_0.Node(dict_0)
    str_4 = singly_linked_list_8.__str__()

def test_case_1774():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    int_0 = 719
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_9.isEmpty()
    assert bool_0 is True
    node_1 = module_0.Node(singly_linked_list_7)
    int_2 = singly_linked_list_9.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    none_type_3 = None
    node_2 = module_0.Node(none_type_3)
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    var_0 = singly_linked_list_10.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_12.getHeadNode()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_12.getSize()
    bool_2 = singly_linked_list_13.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_13.getHead()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_14.getHeadNode()
    node_5 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_4 = singly_linked_list_15.getSize()
    var_2 = singly_linked_list_14.remove()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_17.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_17.add(singly_linked_list_17)
    singly_linked_list_18 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_18.__str__()
    assert str_3 == '[None]'
    singly_linked_list_19 = module_0.SinglyLinkedList()
    singly_linked_list_20 = module_0.SinglyLinkedList()

def test_case_1775():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1776():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_0.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_3.remove()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_3 = singly_linked_list_3.getHead()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()

def test_case_1777():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    dict_0 = {}
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(dict_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_6.getSize()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(bool_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()

def test_case_1778():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_1.toArray()
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_3.getHead()
    list_1 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_6.add(none_type_2)
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    int_1 = 0
    node_5 = module_0.Node(int_1)
    var_4 = singly_linked_list_8.getHead()
    list_2 = singly_linked_list_9.toArray()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    none_type_6 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_14.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_6.value).__module__}.{type(var_6.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_6.next is None
    str_7 = var_6.__str__()
    node_7 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_7).__module__}.{type(node_7).__qualname__}' == 'linkedList3.Node'
    assert node_7.value is None
    assert node_7.next is None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_9.remove()

def test_case_1779():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    var_0 = singly_linked_list_2.getHead()
    bool_0 = False
    node_4 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is False
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_6.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_6.remove()
    node_5 = singly_linked_list_6.getHeadNode()
    assert f'{type(node_5).__module__}.{type(node_5).__qualname__}' == 'linkedList3.Node'
    assert node_5.value is None
    assert node_5.next is None
    node_6 = module_0.Node(var_1)
    assert node_6.value is None
    bool_2 = False
    node_7 = module_0.Node(bool_2)

def test_case_1780():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    list_1 = singly_linked_list_2.toArray()
    list_2 = []
    none_type_4 = singly_linked_list_2.add(list_2)
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_3 = [bytes_0]
    node_2 = module_0.Node(list_3)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_3.add(node_2)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'

def test_case_1781():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    list_0 = singly_linked_list_4.toArray()
    var_2 = singly_linked_list_4.getHead()
    dict_0 = {}
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_5.add(dict_0)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_3 = singly_linked_list_6.add(singly_linked_list_6)
    int_2 = singly_linked_list_6.getSize()
    assert int_2 == 1
    node_5 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_6.__str__()
    node_6 = singly_linked_list_6.getHeadNode()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    none_type_4 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_7.add(none_type_4)
    none_type_6 = singly_linked_list_7.add(none_type_4)
    list_1 = singly_linked_list_7.toArray()
    list_2 = []
    none_type_7 = singly_linked_list_7.add(list_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_4 = singly_linked_list_9.toArray()
    none_type_8 = None
    node_8 = module_0.Node(none_type_8)
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    var_5 = singly_linked_list_10.remove()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_13.remove()
    str_5 = var_6.__str__()
    assert str_5 == 'None'
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = var_6.__str__()
    assert str_6 == 'None'
    int_4 = 0
    node_10 = module_0.Node(int_4)
    none_type_9 = None
    node_11 = module_0.Node(none_type_9)
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_1782():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_1 = singly_linked_list_2.add(str_1)
    var_1 = singly_linked_list_2.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert var_1.value == '[None]'
    assert f'{type(var_1.next).__module__}.{type(var_1.next).__qualname__}' == 'linkedList3.Node'

def test_case_1783():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    node_1 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_1.getSize()
    var_0 = singly_linked_list_0.remove()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    node_5 = singly_linked_list_6.getHeadNode()
    bool_2 = False
    node_6 = module_0.Node(bool_2)
    node_7 = module_0.Node(node_6)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_9.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_4 = var_3.__str__()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_11.__str__()
    assert str_5 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_14.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_14.remove()
    node_9 = singly_linked_list_14.getHeadNode()
    assert f'{type(node_9).__module__}.{type(node_9).__qualname__}' == 'linkedList3.Node'
    assert node_9.value is None
    assert node_9.next is None
    var_5 = singly_linked_list_12.remove()
    int_4 = 0
    node_10 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()

def test_case_1784():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(none_type_0)
    int_0 = -1870
    node_1 = module_0.Node(int_0)
    str_2 = 'P{"'
    node_2 = module_0.Node(str_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_3.__str__()
    assert str_3 == '[None]'
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    str_4 = singly_linked_list_3.__str__()
    assert str_4 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_4.__str__()
    assert str_5 == '[None]'
    var_0 = singly_linked_list_4.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_4.getHead()
    var_2 = singly_linked_list_0.getHead()

def test_case_1785():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1786():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_1 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    node_2 = module_0.Node(singly_linked_list_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    var_0 = singly_linked_list_5.getHead()
    dict_0 = {int_2: none_type_0, var_0: str_1}
    node_3 = module_0.Node(dict_0)
    node_4 = singly_linked_list_5.getHeadNode()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    int_4 = singly_linked_list_6.getSize()
    assert int_4 == 1
    node_6 = singly_linked_list_6.getHeadNode()
    var_1 = singly_linked_list_6.getHead()
    list_1 = var_1.toArray()
    bool_2 = False
    node_7 = module_0.Node(bool_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    list_3 = singly_linked_list_7.toArray()
    bool_3 = False
    node_8 = module_0.Node(bool_3)
    none_type_2 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(none_type_2)
    none_type_4 = singly_linked_list_8.add(none_type_2)
    list_4 = singly_linked_list_8.toArray()
    var_2 = singly_linked_list_8.getHead()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_5 = singly_linked_list_9.add(singly_linked_list_9)
    int_5 = singly_linked_list_9.getSize()
    assert int_5 == 1
    var_3 = singly_linked_list_9.getHead()
    dict_1 = {int_5: none_type_5, var_3: str_3}
    node_9 = module_0.Node(dict_1)

def test_case_1787():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    str_0 = var_1.__str__()
    assert str_0 == 'None'
    none_type_0 = singly_linked_list_0.add(node_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True

def test_case_1788():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_2 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_4.getHeadNode()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_1 = var_3.__str__()
    int_1 = singly_linked_list_4.getSize()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    var_4 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    var_5 = singly_linked_list_6.getHead()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(none_type_0)
    none_type_2 = singly_linked_list_7.add(none_type_0)
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is False
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_1789():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    str_1 = singly_linked_list_2.__str__()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_8.__str__()
    assert str_3 == '[None]'
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = False
    node_6 = module_0.Node(bool_1)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_11.toArray()
    list_1 = singly_linked_list_11.toArray()
    node_7 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = var_4.__str__()
    assert str_6 == 'None'
    bool_2 = False
    node_9 = module_0.Node(bool_2)
    none_type_1 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_14.add(none_type_1)
    none_type_3 = singly_linked_list_14.add(none_type_1)
    list_2 = singly_linked_list_14.toArray()
    var_5 = singly_linked_list_14.getHead()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    none_type_4 = singly_linked_list_15.add(singly_linked_list_15)
    bool_3 = False
    node_10 = module_0.Node(bool_3)
    none_type_5 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_16.add(none_type_5)
    str_8 = singly_linked_list_16.__str__()
    assert str_8 == '[None]'
    list_3 = singly_linked_list_16.toArray()

def test_case_1790():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_2 = module_0.Node(var_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_2 = singly_linked_list_1.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_1.getHeadNode()
    var_1 = singly_linked_list_1.getHead()
    list_0 = var_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    str_3 = var_2.__str__()
    assert str_3 == 'None'
    var_3 = singly_linked_list_7.remove()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.remove()
    str_4 = var_5.__str__()
    assert str_4 == 'None'
    none_type_1 = singly_linked_list_8.add(node_5)
    var_6 = singly_linked_list_7.remove()

def test_case_1791():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_1 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_1)
    assert node_2.value is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_6.getHeadNode()
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_7.getSize()
    var_2 = singly_linked_list_6.remove()
    bool_3 = singly_linked_list_8.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    int_1 = singly_linked_list_9.getSize()
    assert int_1 == 1
    var_3 = singly_linked_list_9.getHead()
    dict_0 = {int_1: none_type_2, var_3: str_2}
    node_6 = module_0.Node(dict_0)
    str_3 = singly_linked_list_9.__str__()
    int_2 = var_3.getSize()
    assert int_2 == 1
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    node_8 = module_0.Node(node_7)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    var_5 = singly_linked_list_10.remove()
    none_type_3 = singly_linked_list_11.add(singly_linked_list_10)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_9 = singly_linked_list_13.getHeadNode()
    node_10 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    node_11 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_14.getSize()
    var_6 = singly_linked_list_13.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_7 = singly_linked_list_16.remove()
    var_8 = singly_linked_list_15.remove()

def test_case_1792():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = var_0.__str__()
    assert str_1 == 'None'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    int_1 = 0
    node_1 = module_0.Node(int_1)
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_2 = singly_linked_list_5.getSize()
    assert int_2 == 1
    var_3 = singly_linked_list_5.getHead()
    dict_0 = {int_2: none_type_0, var_3: str_3}
    node_2 = module_0.Node(dict_0)
    str_4 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_6.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_6 = var_4.__str__()
    none_type_2 = None
    node_3 = module_0.Node(none_type_2)
    node_4 = module_0.Node(node_3)
    int_3 = 0
    node_5 = module_0.Node(int_3)
    none_type_3 = None
    node_6 = module_0.Node(none_type_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()

def test_case_1793():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    var_3 = singly_linked_list_5.getHead()
    dict_0 = {int_1: none_type_0, var_3: str_3}
    node_1 = module_0.Node(dict_0)
    str_4 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = module_0.Node(singly_linked_list_6)
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(none_type_1)
    none_type_3 = singly_linked_list_7.add(none_type_1)
    list_1 = singly_linked_list_7.toArray()
    var_4 = singly_linked_list_7.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    var_5 = singly_linked_list_8.getHead()
    dict_1 = {int_2: none_type_4, var_5: str_5}
    node_4 = module_0.Node(dict_1)
    node_5 = singly_linked_list_8.getHeadNode()

def test_case_1794():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_1 = singly_linked_list_0.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_0.getHeadNode()
    str_1 = singly_linked_list_0.__str__()
    node_2 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_0 = False
    node_3 = module_0.Node(bool_0)
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    var_0 = singly_linked_list_2.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_1 = singly_linked_list_3.remove()
    bool_2 = singly_linked_list_3.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_4.getSize()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    int_3 = singly_linked_list_4.getSize()

def test_case_1795():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_2.getHeadNode()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_1 = var_1.__str__()
    int_1 = singly_linked_list_2.getSize()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    none_type_0 = None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_4.add(none_type_0)
    none_type_2 = singly_linked_list_4.add(none_type_0)
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_6.getSize()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_8.getSize()
    bool_4 = False
    node_7 = module_0.Node(bool_4)
    int_4 = singly_linked_list_8.getSize()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_11.__str__()
    assert str_3 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_13.toArray()
    list_2 = singly_linked_list_13.toArray()
    node_9 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_14.__str__()
    assert str_4 == '[None]'
    none_type_3 = singly_linked_list_14.add(singly_linked_list_14)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_14.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_5 = var_3.__str__()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_5 = singly_linked_list_16.getSize()
    var_4 = singly_linked_list_5.getHead()

def test_case_1796():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    list_0 = singly_linked_list_1.toArray()
    var_1 = singly_linked_list_1.getHead()
    list_1 = singly_linked_list_1.toArray()

def test_case_1797():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    var_1 = singly_linked_list_0.getHead()

def test_case_1798():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_6.getHeadNode()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    var_0 = singly_linked_list_8.getHead()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_11.getHead()
    str_5 = var_1.__str__()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_12.__str__()
    assert str_6 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_14.toArray()

def test_case_1799():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_1 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_4.__str__()
    assert str_0 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_7.add(singly_linked_list_5)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_8.add(none_type_2)
    none_type_4 = singly_linked_list_8.add(none_type_2)
    list_0 = singly_linked_list_8.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_5 = None
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_9.add(none_type_5)
    str_1 = 'P{"'
    node_4 = module_0.Node(str_1)
    none_type_7 = singly_linked_list_9.add(none_type_6)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    none_type_8 = None
    node_6 = module_0.Node(none_type_8)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_11.remove()
    str_2 = var_2.__str__()
    assert str_2 == 'None'
    var_3 = singly_linked_list_11.remove()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.remove()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    var_5 = singly_linked_list_12.getHead()
    list_1 = singly_linked_list_13.toArray()
    int_4 = 0
    node_8 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_16.__str__()
    assert str_4 == '[None]'
    var_6 = singly_linked_list_14.remove()

def test_case_1800():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = module_0.Node(singly_linked_list_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    node_2 = module_0.Node(node_1)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(str_0)
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    node_4 = module_0.Node(var_1)

def test_case_1801():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_3 = singly_linked_list_3.getHeadNode()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is False
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.remove()
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_6 = module_0.SinglyLinkedList()

def test_case_1802():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()

def test_case_1803():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_5.getHeadNode()
    node_5 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_6.getSize()
    var_2 = singly_linked_list_5.remove()
    int_2 = 0
    node_7 = module_0.Node(int_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_8.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_8.add(singly_linked_list_8)
    int_3 = singly_linked_list_8.getSize()
    assert int_3 == 1
    node_8 = singly_linked_list_8.getHeadNode()
    str_1 = singly_linked_list_8.__str__()
    node_9 = singly_linked_list_8.getHeadNode()

def test_case_1804():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    none_type_1 = None
    node_0 = module_0.Node(none_type_1)
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_2 = singly_linked_list_4.remove()
    node_1 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    node_2 = module_0.Node(var_2)
    assert node_2.value is None

def test_case_1805():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_4.add(singly_linked_list_2)
    var_1 = singly_linked_list_3.remove()
    int_1 = -1870
    node_2 = module_0.Node(int_1)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_5.isEmpty()
    assert bool_2 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    node_3 = module_0.Node(str_1)
    assert node_3.value == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    int_2 = singly_linked_list_8.getSize()
    assert int_2 == 1
    var_3 = singly_linked_list_8.getHead()
    dict_0 = {int_2: none_type_4, var_3: str_2}
    node_4 = module_0.Node(dict_0)
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    var_4 = singly_linked_list_9.remove()
    node_6 = singly_linked_list_9.getHeadNode()
    assert f'{type(node_6).__module__}.{type(node_6).__qualname__}' == 'linkedList3.Node'
    assert node_6.value is None
    assert node_6.next is None
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_11.toArray()
    none_type_5 = None
    node_7 = module_0.Node(none_type_5)
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_10.isEmpty()
    assert bool_4 is True
    int_3 = 0
    node_8 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_5 = singly_linked_list_12.isEmpty()
    assert bool_5 is True
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_14.getHead()
    node_9 = singly_linked_list_14.getHeadNode()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_10 = module_0.Node(bytes_0)
    var_6 = singly_linked_list_4.remove()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_6.value).__module__}.{type(var_6.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_6.next is None

def test_case_1806():
    int_0 = -1870
    node_0 = module_0.Node(int_0)
    node_1 = module_0.Node(node_0)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    bool_2 = False
    node_3 = module_0.Node(bool_2)
    none_type_3 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_2.add(none_type_3)
    none_type_5 = singly_linked_list_2.add(none_type_3)
    list_1 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_2.getHead()

def test_case_1807():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_4.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    node_4 = module_0.Node(singly_linked_list_3)
    node_5 = module_0.Node(bool_1)
    assert node_5.value is True
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_6.getHead()
    int_2 = singly_linked_list_6.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_7.getSize()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_6.isEmpty()
    assert bool_3 is True
    var_1 = singly_linked_list_4.getHead()

def test_case_1808():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_2.add(none_type_0)
    none_type_2 = singly_linked_list_2.add(none_type_0)
    int_1 = 0
    node_3 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_3.add(singly_linked_list_3)
    int_2 = singly_linked_list_3.getSize()
    assert int_2 == 1
    node_4 = singly_linked_list_3.getHeadNode()
    var_1 = singly_linked_list_3.getHead()
    list_0 = var_1.toArray()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    node_5 = module_0.Node(var_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.remove()
    bool_2 = singly_linked_list_4.isEmpty()
    assert bool_2 is True

def test_case_1809():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_0.getSize()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    var_0 = singly_linked_list_1.getHead()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_8.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_3 = var_2.__str__()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_3.value).__module__}.{type(var_3.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_3.next is None
    str_5 = var_3.__str__()
    node_1 = singly_linked_list_10.getHeadNode()
    assert f'{type(node_1).__module__}.{type(node_1).__qualname__}' == 'linkedList3.Node'
    assert node_1.value is None
    assert node_1.next is None
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    var_4 = singly_linked_list_13.remove()
    node_2 = singly_linked_list_13.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_1 = [bytes_0]
    node_3 = module_0.Node(list_1)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_14.add(node_3)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_15.toArray()
    bool_1 = False
    node_5 = module_0.Node(bool_1)
    none_type_4 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_5 = singly_linked_list_16.add(none_type_4)
    none_type_6 = singly_linked_list_16.add(none_type_4)
    list_3 = singly_linked_list_16.toArray()
    var_5 = singly_linked_list_16.getHead()
    list_4 = singly_linked_list_16.toArray()
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_17.__str__()
    assert str_7 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_17.isEmpty()
    assert bool_2 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_7.remove()

def test_case_1810():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1811():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    node_0 = module_0.Node(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_2.remove()
    node_2 = singly_linked_list_2.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_7.__str__()
    assert str_2 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_7.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_7.isEmpty()
    assert bool_3 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    none_type_0 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_5 = module_0.Node(singly_linked_list_10)

def test_case_1812():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    var_1 = singly_linked_list_2.getHead()

def test_case_1813():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    none_type_1 = singly_linked_list_0.add(dict_0)
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    none_type_2 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_1.add(none_type_2)
    none_type_4 = singly_linked_list_1.add(none_type_2)
    list_0 = singly_linked_list_1.toArray()
    var_1 = singly_linked_list_1.getHead()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_6 = singly_linked_list_4.add(str_1)
    list_2 = singly_linked_list_4.toArray()

def test_case_1814():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(singly_linked_list_1)
    var_0 = singly_linked_list_2.remove()
    int_1 = 0
    node_0 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_2 = singly_linked_list_4.add(singly_linked_list_4)
    int_2 = singly_linked_list_4.getSize()
    assert int_2 == 1
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_7.toArray()
    var_1 = singly_linked_list_6.getHead()

def test_case_1815():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_5.getHeadNode()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_5.add(none_type_0)

def test_case_1816():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1817():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    node_0 = module_0.Node(str_0)
    assert node_0.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = singly_linked_list_3.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_3.getHead()
    dict_0 = {int_0: none_type_0, var_1: str_1}
    node_1 = module_0.Node(dict_0)
    str_2 = singly_linked_list_3.__str__()
    int_1 = var_1.getSize()
    assert int_1 == 1
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.getHead()
    node_2 = module_0.Node(var_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_6.__str__()
    assert str_3 == '[None]'
    none_type_1 = singly_linked_list_6.add(singly_linked_list_6)
    int_3 = singly_linked_list_6.getSize()
    assert int_3 == 1
    node_4 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_11.__str__()
    assert str_6 == '[None]'
    none_type_3 = singly_linked_list_11.add(singly_linked_list_11)
    int_5 = singly_linked_list_11.getSize()
    assert int_5 == 1
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    int_6 = singly_linked_list_12.getSize()
    int_7 = 0
    node_9 = module_0.Node(int_7)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_14.getHead()
    node_10 = module_0.Node(var_4)
    node_11 = singly_linked_list_14.getHeadNode()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_15.__str__()
    assert str_7 == '[None]'
    none_type_4 = singly_linked_list_15.add(singly_linked_list_15)
    none_type_5 = singly_linked_list_15.add(str_7)
    var_5 = singly_linked_list_15.remove()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'linkedList3.Node'
    assert var_5.value == '[None]'
    assert f'{type(var_5.next).__module__}.{type(var_5.next).__qualname__}' == 'linkedList3.Node'
    none_type_6 = None
    singly_linked_list_16 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_16.add(none_type_6)

def test_case_1818():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True

def test_case_1819():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.remove()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_3.remove()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_4.remove()
    str_1 = var_3.__str__()
    assert str_1 == 'None'
    none_type_2 = singly_linked_list_3.add(node_2)
    int_0 = 0
    node_3 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    complex_0 = 1389 + 116.582j
    node_5 = module_0.Node(complex_0)
    int_1 = 719
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(int_1)
    bool_4 = singly_linked_list_6.isEmpty()
    assert bool_4 is False

def test_case_1820():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    list_0 = singly_linked_list_0.toArray()
    var_0 = singly_linked_list_0.getHead()
    list_1 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    bool_2 = False
    node_2 = module_0.Node(bool_2)
    int_1 = singly_linked_list_2.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(bool_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_5.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_5 = singly_linked_list_5.add(str_1)
    var_2 = singly_linked_list_5.getHead()
    assert var_2 == '[None]'
    str_2 = 'P{"'
    node_3 = module_0.Node(str_2)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    str_3 = var_4.__str__()
    assert str_3 == 'None'
    none_type_6 = singly_linked_list_6.add(node_4)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_8.getSize()
    bool_4 = singly_linked_list_9.isEmpty()
    assert bool_4 is True
    var_5 = singly_linked_list_9.getHead()
    list_2 = singly_linked_list_9.toArray()
    int_3 = 0
    node_6 = module_0.Node(int_3)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_10.__str__()
    assert str_4 == '[None]'
    none_type_7 = singly_linked_list_10.add(singly_linked_list_10)
    int_4 = singly_linked_list_10.getSize()
    assert int_4 == 1
    node_7 = singly_linked_list_10.getHeadNode()
    bool_5 = False
    node_8 = module_0.Node(bool_5)
    none_type_8 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_9 = singly_linked_list_11.add(none_type_8)
    none_type_10 = singly_linked_list_11.add(none_type_8)
    bool_6 = singly_linked_list_11.isEmpty()
    assert bool_6 is False
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_12.toArray()
    int_5 = 0
    node_9 = module_0.Node(int_5)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_13.__str__()
    assert str_5 == '[None]'
    bool_7 = False
    node_10 = module_0.Node(bool_7)
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
    complex_0 = 1389 + 116.582j
    node_11 = module_0.Node(complex_0)

def test_case_1821():
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    int_0 = 719
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(int_0)
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    none_type_2 = singly_linked_list_1.add(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.getHead()
    node_1 = module_0.Node(var_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_2 = 'P{"'
    node_2 = module_0.Node(str_2)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    bool_1 = False
    node_4 = module_0.Node(bool_1)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_3 = var_2.__str__()
    int_2 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    int_3 = 0
    node_5 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    none_type_4 = singly_linked_list_8.add(singly_linked_list_8)
    int_4 = singly_linked_list_8.getSize()
    assert int_4 == 1
    node_6 = singly_linked_list_8.getHeadNode()
    str_5 = singly_linked_list_8.__str__()
    int_5 = 0
    node_7 = module_0.Node(int_5)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_10.__str__()
    assert str_6 == '[None]'

def test_case_1822():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = None
    node_2 = module_0.Node(none_type_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_3 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    node_4 = module_0.Node(var_0)
    assert node_4.value is None

def test_case_1823():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    list_0 = singly_linked_list_0.toArray()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_1 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_3.toArray()
    none_type_2 = None
    node_2 = module_0.Node(none_type_2)
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_4.isEmpty()
    assert bool_3 is True

def test_case_1824():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_2.getSize()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    bool_1 = singly_linked_list_1.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.remove()
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_4.remove()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_7.remove()
    str_2 = var_4.__str__()
    assert str_2 == 'None'
    var_5 = singly_linked_list_7.getHead()
    bool_3 = False
    node_1 = module_0.Node(bool_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_8.toArray()
    list_1 = singly_linked_list_8.toArray()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_9.__str__()
    assert str_3 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_10.add(singly_linked_list_10)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_11.getSize()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_12.add(singly_linked_list_10)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_13.__str__()
    assert str_4 == '[None]'
    none_type_2 = singly_linked_list_13.add(singly_linked_list_13)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_13.remove()
    str_5 = var_6.__str__()
    var_7 = singly_linked_list_11.getHead()

def test_case_1825():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_0.toArray()
    list_1 = singly_linked_list_0.toArray()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_2 = [bytes_0]
    node_1 = module_0.Node(list_2)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(node_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.getHead()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_3.getSize()
    bool_1 = singly_linked_list_4.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_2.isEmpty()
    assert bool_2 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_5)

def test_case_1826():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    none_type_1 = singly_linked_list_0.add(str_0)
    list_0 = singly_linked_list_0.toArray()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value == '[None]'
    assert f'{type(var_0.next).__module__}.{type(var_0.next).__qualname__}' == 'linkedList3.Node'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_2.getHeadNode()
    node_1 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    var_1 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_5.getHead()
    node_3 = module_0.Node(var_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    int_1 = 719
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_7.add(int_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_4 = module_0.Node(singly_linked_list_8)

def test_case_1827():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_2.add(singly_linked_list_2)
    none_type_2 = singly_linked_list_2.add(str_1)
    node_1 = singly_linked_list_2.getHeadNode()
    assert node_1.value == '[None]'
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    var_0 = singly_linked_list_3.remove()
    bool_1 = singly_linked_list_3.isEmpty()
    assert bool_1 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_6.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_2 = singly_linked_list_4.getHead()
    list_0 = singly_linked_list_5.toArray()

def test_case_1828():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1829():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_2.toArray()
    none_type_3 = None
    node_1 = module_0.Node(none_type_3)
    bool_2 = singly_linked_list_1.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_1.isEmpty()
    assert bool_3 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_3.__str__()
    assert str_0 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.remove()
    int_0 = 0
    node_2 = module_0.Node(int_0)
    var_1 = singly_linked_list_3.getHead()
    list_2 = singly_linked_list_4.toArray()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_3 = [bytes_0]
    node_3 = module_0.Node(list_3)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_6.add(node_3)
    bool_4 = False
    node_4 = module_0.Node(bool_4)
    none_type_5 = None
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_6 = singly_linked_list_7.add(none_type_5)
    none_type_7 = singly_linked_list_7.add(none_type_5)
    var_2 = singly_linked_list_7.getHead()

def test_case_1830():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    var_2 = singly_linked_list_2.remove()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_5.add(singly_linked_list_5)
    int_1 = singly_linked_list_5.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_5.getHeadNode()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is False
    str_3 = singly_linked_list_5.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_7.toArray()
    none_type_1 = None
    node_3 = module_0.Node(none_type_1)
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is True
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_8.__str__()
    assert str_4 == '[None]'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.remove()
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    var_4 = singly_linked_list_8.remove()
    none_type_2 = singly_linked_list_9.add(singly_linked_list_8)
    int_2 = 0
    node_4 = module_0.Node(int_2)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_12.getHeadNode()
    node_6 = singly_linked_list_12.getHeadNode()
    var_5 = singly_linked_list_0.remove()

def test_case_1831():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    var_1 = singly_linked_list_1.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    none_type_2 = singly_linked_list_4.add(str_2)
    var_2 = singly_linked_list_4.getHead()
    assert var_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    none_type_3 = singly_linked_list_5.add(singly_linked_list_5)
    none_type_4 = singly_linked_list_5.add(str_3)
    node_1 = singly_linked_list_5.getHeadNode()
    assert node_1.value == '[None]'
    str_4 = singly_linked_list_5.__str__()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    node_3 = module_0.Node(node_2)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.getHead()
    int_1 = 0
    node_4 = module_0.Node(int_1)
    none_type_5 = None
    node_5 = module_0.Node(none_type_5)
    singly_linked_list_7 = module_0.SinglyLinkedList()

def test_case_1832():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_2.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    var_1 = singly_linked_list_2.getHead()
    dict_0 = {int_1: none_type_0, var_1: str_2}
    node_2 = module_0.Node(dict_0)
    node_3 = singly_linked_list_2.getHeadNode()
    var_2 = singly_linked_list_1.getHead()

def test_case_1833():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.remove()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_1 = singly_linked_list_2.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_2.getHeadNode()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_3.getSize()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_5.__str__()
    assert str_2 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_3 = 0
    node_3 = module_0.Node(int_3)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_10.isEmpty()
    assert bool_1 is True
    node_4 = module_0.Node(singly_linked_list_8)
    int_4 = singly_linked_list_10.getSize()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    none_type_2 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_11.add(none_type_2)
    none_type_4 = singly_linked_list_11.add(none_type_2)
    list_1 = singly_linked_list_11.toArray()
    var_2 = singly_linked_list_11.getHead()
    list_2 = singly_linked_list_11.toArray()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = singly_linked_list_12.isEmpty()
    assert bool_3 is True

def test_case_1834():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_2.getHeadNode()
    node_2 = singly_linked_list_2.getHeadNode()
    var_0 = singly_linked_list_1.getHead()
    bytes_0 = b'\x82\x86\xf6\xbe\xba\xa6\x15;['
    list_0 = [bytes_0]
    node_3 = module_0.Node(list_0)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(node_3)

def test_case_1835():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_3.__str__()
    assert str_2 == '[None]'
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_7.remove()
    str_3 = var_0.__str__()
    assert str_3 == 'None'
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_4 = var_0.__str__()
    assert str_4 == 'None'
    singly_linked_list_9 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(str_4)
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    node_3 = module_0.Node(node_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_10.toArray()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_11.toArray()
    none_type_1 = None
    node_4 = module_0.Node(none_type_1)
    bool_2 = singly_linked_list_10.isEmpty()
    assert bool_2 is True
    bool_3 = singly_linked_list_10.isEmpty()
    assert bool_3 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_12.remove()
    str_5 = var_1.__str__()
    assert str_5 == 'None'
    int_1 = 0
    node_5 = module_0.Node(int_1)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = var_1.__str__()
    assert str_6 == 'None'
    bool_4 = False
    node_6 = module_0.Node(bool_4)
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_14.toArray()
    list_3 = singly_linked_list_14.toArray()
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_15.getHead()
    node_7 = module_0.Node(var_2)
    singly_linked_list_16 = module_0.SinglyLinkedList()

def test_case_1836():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1837():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()

def test_case_1838():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()

def test_case_1839():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_1.add(str_0)
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_1 = None
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_2.add(none_type_1)
    none_type_3 = singly_linked_list_2.add(none_type_1)
    list_0 = singly_linked_list_2.toArray()
    list_1 = []
    none_type_4 = singly_linked_list_2.add(list_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_5 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_3.remove()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_1.value).__module__}.{type(var_1.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_1.next is None
    str_2 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_5.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    list_2 = singly_linked_list_7.toArray()
    var_2 = singly_linked_list_6.getHead()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_9.__str__()
    assert str_4 == '[None]'
    none_type_6 = singly_linked_list_9.add(singly_linked_list_9)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_10.getHead()
    node_1 = module_0.Node(var_3)
    int_0 = 0
    node_2 = module_0.Node(int_0)
    singly_linked_list_11 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_11.isEmpty()
    assert bool_2 is True
    singly_linked_list_12 = module_0.SinglyLinkedList()
    list_3 = singly_linked_list_11.toArray()
    str_5 = 'P{"'
    node_3 = module_0.Node(str_5)
    bool_3 = False
    node_4 = module_0.Node(bool_3)
    bool_4 = False
    node_5 = module_0.Node(bool_4)
    none_type_7 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_8 = singly_linked_list_13.add(none_type_7)
    var_4 = singly_linked_list_13.getHead()
    bool_5 = False
    node_6 = module_0.Node(bool_5)
    none_type_9 = None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_10 = singly_linked_list_14.add(none_type_9)
    none_type_11 = singly_linked_list_14.add(none_type_9)
    var_5 = singly_linked_list_14.getHead()
    node_7 = module_0.Node(bool_5)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_15.getHeadNode()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_15.getSize()
    bool_6 = singly_linked_list_16.isEmpty()
    assert bool_6 is True
    var_6 = singly_linked_list_16.getHead()
    list_4 = singly_linked_list_16.toArray()
    str_6 = singly_linked_list_15.__str__()
    assert str_6 == '[None]'

def test_case_1840():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1841():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_0.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    str_0 = var_0.__str__()
    int_0 = singly_linked_list_0.getSize()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    node_3 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    node_6 = singly_linked_list_5.getHeadNode()
    var_1 = singly_linked_list_4.getHead()
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_6.add(none_type_0)
    none_type_2 = singly_linked_list_6.add(none_type_0)
    bool_2 = singly_linked_list_6.isEmpty()
    assert bool_2 is False
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_7.__str__()
    assert str_1 == '[None]'
    singly_linked_list_8 = module_0.SinglyLinkedList()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_9.__str__()
    assert str_2 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    node_8 = singly_linked_list_11.getHeadNode()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    bool_3 = False
    node_9 = module_0.Node(bool_3)
    none_type_3 = None
    singly_linked_list_13 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_13.add(none_type_3)
    none_type_5 = singly_linked_list_13.add(none_type_3)
    var_2 = singly_linked_list_13.getHead()
    node_10 = module_0.Node(bool_3)
    var_3 = singly_linked_list_3.getHead()

def test_case_1842():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_1 = singly_linked_list_3.getSize()
    assert int_1 == 1
    var_2 = singly_linked_list_3.getHead()
    dict_0 = {int_1: none_type_0, var_2: str_1}
    node_1 = module_0.Node(dict_0)
    node_2 = singly_linked_list_3.getHeadNode()

def test_case_1843():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.getHead()
    int_0 = singly_linked_list_1.getSize()

def test_case_1844():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = False
    node_0 = module_0.Node(bool_1)
    none_type_0 = None
    singly_linked_list_3 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_3.add(none_type_0)
    none_type_2 = singly_linked_list_3.add(none_type_0)
    var_0 = singly_linked_list_3.getHead()
    int_0 = 0
    node_1 = module_0.Node(int_0)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_4.__str__()
    assert str_1 == '[None]'
    none_type_3 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    node_2 = singly_linked_list_4.getHeadNode()
    var_1 = singly_linked_list_4.getHead()
    list_0 = var_1.toArray()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_5.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    int_3 = singly_linked_list_5.getSize()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_8.getHead()
    str_2 = var_2.__str__()

def test_case_1845():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1846():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_1.add(none_type_0)
    none_type_2 = singly_linked_list_1.add(none_type_0)
    var_1 = singly_linked_list_1.getHead()
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()

def test_case_1847():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    node_1 = module_0.Node(node_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is True
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_2 = singly_linked_list_3.getHeadNode()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_1 = singly_linked_list_3.add(none_type_0)
    var_0 = singly_linked_list_3.remove()
    assert node_2.next is None
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert var_0.value is None
    assert var_0.next is None

def test_case_1848():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    node_0 = singly_linked_list_1.getHeadNode()
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_2.getHead()
    str_1 = var_1.__str__()
    int_0 = singly_linked_list_1.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    var_2 = singly_linked_list_7.remove()
    node_2 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_2).__module__}.{type(node_2).__qualname__}' == 'linkedList3.Node'
    assert node_2.value is None
    assert node_2.next is None
    bool_1 = False
    node_3 = module_0.Node(bool_1)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_9.remove()
    str_4 = var_4.__str__()
    assert str_4 == 'None'
    none_type_0 = singly_linked_list_8.add(node_3)
    int_1 = 0
    node_4 = module_0.Node(int_1)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_10.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_10.add(singly_linked_list_10)
    int_2 = singly_linked_list_10.getSize()
    assert int_2 == 1
    node_5 = singly_linked_list_10.getHeadNode()
    str_6 = singly_linked_list_10.__str__()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_11.__str__()
    assert str_7 == '[None]'
    singly_linked_list_12 = module_0.SinglyLinkedList()
    none_type_2 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    int_3 = singly_linked_list_13.getSize()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_14.add(singly_linked_list_12)
    int_4 = 0
    node_7 = module_0.Node(int_4)
    singly_linked_list_15 = module_0.SinglyLinkedList()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_8 = singly_linked_list_16.__str__()
    assert str_8 == '[None]'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_17.__str__()
    assert str_9 == '[None]'
    singly_linked_list_18 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_17.isEmpty()
    assert bool_2 is True
    singly_linked_list_19 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_19.toArray()
    var_5 = singly_linked_list_18.getHead()

def test_case_1849():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    str_0 = var_0.__str__()
    assert str_0 == 'None'
    var_1 = singly_linked_list_0.remove()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_1.add(singly_linked_list_1)
    int_1 = singly_linked_list_1.getSize()
    assert int_1 == 1
    node_1 = singly_linked_list_1.getHeadNode()
    var_2 = singly_linked_list_1.getHead()
    list_0 = var_2.toArray()

def test_case_1850():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_1.remove()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_2.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_2.add(singly_linked_list_2)
    int_0 = singly_linked_list_2.getSize()
    assert int_0 == 1
    var_1 = singly_linked_list_2.getHead()
    dict_0 = {int_0: none_type_0, var_1: str_1}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_2.getHeadNode()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_4.remove()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_5.getHead()
    str_2 = var_3.__str__()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_6.getHead()
    int_2 = 0
    node_3 = module_0.Node(int_2)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    int_3 = 0
    node_4 = module_0.Node(int_3)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_8.isEmpty()
    assert bool_2 is True
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_9.remove()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_8.getHeadNode()

def test_case_1851():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()

def test_case_1852():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    var_0 = singly_linked_list_3.remove()
    node_0 = singly_linked_list_3.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_4.getHead()
    str_2 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_5.__str__()
    assert str_3 == '[None]'
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_5.isEmpty()
    assert bool_0 is True
    bool_1 = False
    node_1 = module_0.Node(bool_1)
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    none_type_0 = singly_linked_list_7.add(singly_linked_list_7)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_7.remove()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_2.value).__module__}.{type(var_2.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_2.next is None
    str_5 = var_2.__str__()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_9.toArray()
    singly_linked_list_10 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_10.toArray()
    none_type_1 = None
    node_2 = module_0.Node(none_type_1)
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_12.getHead()
    int_0 = singly_linked_list_12.getSize()
    singly_linked_list_13 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_13.getHeadNode()
    singly_linked_list_14 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_13.getSize()
    bool_3 = singly_linked_list_14.isEmpty()
    assert bool_3 is True
    bool_4 = singly_linked_list_12.isEmpty()
    assert bool_4 is True

def test_case_1853():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()

def test_case_1854():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    int_0 = singly_linked_list_0.getSize()
    assert int_0 == 1
    var_0 = singly_linked_list_0.getHead()
    dict_0 = {int_0: none_type_0, var_0: str_0}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_0.getHeadNode()
    none_type_1 = singly_linked_list_0.add(dict_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    var_1 = singly_linked_list_1.remove()
    bool_0 = False
    node_2 = module_0.Node(bool_0)
    node_3 = module_0.Node(node_2)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_2.isEmpty()
    assert bool_1 is True
    var_2 = singly_linked_list_1.getHead()
    int_1 = -1870
    node_4 = module_0.Node(int_1)

def test_case_1855():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_0.isEmpty()
    assert bool_0 is True
    singly_linked_list_2 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_2.toArray()
    var_0 = singly_linked_list_1.getHead()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_3.toArray()
    node_0 = module_0.Node(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    node_1 = module_0.Node(singly_linked_list_4)
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_5.remove()
    str_1 = var_1.__str__()
    assert str_1 == 'None'
    var_2 = singly_linked_list_5.remove()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    none_type_0 = singly_linked_list_6.add(singly_linked_list_6)
    none_type_1 = singly_linked_list_6.add(str_2)
    list_2 = singly_linked_list_6.toArray()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_6.remove()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'linkedList3.Node'
    assert var_3.value == '[None]'
    assert f'{type(var_3.next).__module__}.{type(var_3.next).__qualname__}' == 'linkedList3.Node'

def test_case_1856():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    node_0 = singly_linked_list_0.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    node_1 = module_0.Node(var_0)
    assert node_1.value is None
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    node_2 = module_0.Node(singly_linked_list_1)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    node_3 = module_0.Node(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_3.getHeadNode()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_3.getSize()
    bool_0 = singly_linked_list_4.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_4.getHead()
    str_1 = var_1.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    node_5 = singly_linked_list_5.getHeadNode()
    bytes_0 = b"\xd2k\x08'\x9a\xb5t\x83\xbab\xa0\x1c\xa7\xe4\xd5"
    node_6 = module_0.Node(bytes_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_6.getHead()
    str_2 = var_2.__str__()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    none_type_0 = singly_linked_list_7.add(str_2)
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_8.remove()
    str_3 = var_3.__str__()
    assert str_3 == 'None'
    var_4 = singly_linked_list_8.remove()
    bool_1 = False
    node_7 = module_0.Node(bool_1)
    node_8 = module_0.Node(node_7)

def test_case_1857():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    node_0 = module_0.Node(var_0)
    bool_0 = False
    node_1 = module_0.Node(bool_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_1.toArray()
    list_1 = singly_linked_list_1.toArray()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_2.__str__()
    assert str_0 == '[None]'
    var_1 = singly_linked_list_2.remove()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_0 = singly_linked_list_3.add(singly_linked_list_3)
    int_0 = singly_linked_list_3.getSize()
    assert int_0 == 1
    var_2 = singly_linked_list_3.getHead()
    dict_0 = {int_0: none_type_0, var_2: str_1}
    node_2 = module_0.Node(dict_0)
    str_2 = singly_linked_list_3.__str__()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_4.__str__()
    assert str_3 == '[None]'
    singly_linked_list_5 = module_0.SinglyLinkedList()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_7.__str__()
    assert str_4 == '[None]'
    var_3 = singly_linked_list_7.remove()
    node_3 = singly_linked_list_7.getHeadNode()
    assert f'{type(node_3).__module__}.{type(node_3).__qualname__}' == 'linkedList3.Node'
    assert node_3.value is None
    assert node_3.next is None
    singly_linked_list_8 = module_0.SinglyLinkedList()
    str_5 = singly_linked_list_8.__str__()
    assert str_5 == '[None]'
    none_type_1 = singly_linked_list_8.add(singly_linked_list_8)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_9.__str__()
    assert str_6 == '[None]'
    singly_linked_list_10 = module_0.SinglyLinkedList()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_7 = singly_linked_list_12.__str__()
    assert str_7 == '[None]'
    none_type_2 = singly_linked_list_12.add(singly_linked_list_12)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_12.remove()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_4.value).__module__}.{type(var_4.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_4.next is None
    str_8 = var_4.__str__()
    node_4 = singly_linked_list_12.getHeadNode()
    assert f'{type(node_4).__module__}.{type(node_4).__qualname__}' == 'linkedList3.Node'
    assert node_4.value is None
    assert node_4.next is None
    singly_linked_list_14 = module_0.SinglyLinkedList()
    str_9 = singly_linked_list_14.__str__()
    assert str_9 == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_5 = singly_linked_list_15.remove()
    singly_linked_list_16 = module_0.SinglyLinkedList()
    var_6 = singly_linked_list_16.getHead()
    node_5 = module_0.Node(var_6)
    singly_linked_list_17 = module_0.SinglyLinkedList()
    singly_linked_list_18 = module_0.SinglyLinkedList()

def test_case_1858():
    int_0 = 0
    node_0 = module_0.Node(int_0)
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_1 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    int_1 = 0
    node_2 = module_0.Node(int_1)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_5.getHead()
    node_3 = module_0.Node(var_0)
    node_4 = singly_linked_list_5.getHeadNode()
    singly_linked_list_6 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_6.__str__()
    assert str_2 == '[None]'
    singly_linked_list_7 = module_0.SinglyLinkedList()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_8.remove()
    bool_0 = singly_linked_list_8.isEmpty()
    assert bool_0 is True
    var_2 = singly_linked_list_6.remove()
    none_type_2 = singly_linked_list_7.add(singly_linked_list_6)
    int_2 = 0
    node_5 = module_0.Node(int_2)
    singly_linked_list_9 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_9.isEmpty()
    assert bool_1 is True
    singly_linked_list_10 = module_0.SinglyLinkedList()
    node_6 = singly_linked_list_10.getHeadNode()
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_3 = None
    node_7 = module_0.Node(none_type_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_12.__str__()
    assert str_3 == '[None]'
    singly_linked_list_13 = module_0.SinglyLinkedList()
    bool_2 = singly_linked_list_12.isEmpty()
    assert bool_2 is True
    singly_linked_list_14 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_14.toArray()
    var_3 = singly_linked_list_13.getHead()
    node_8 = module_0.Node(str_3)
    assert node_8.value == '[None]'
    singly_linked_list_15 = module_0.SinglyLinkedList()
    var_4 = singly_linked_list_15.remove()
    str_4 = var_4.__str__()
    assert str_4 == 'None'
    int_3 = 0
    node_9 = module_0.Node(int_3)
    singly_linked_list_16 = module_0.SinglyLinkedList()
    str_5 = var_4.__str__()
    assert str_5 == 'None'
    singly_linked_list_17 = module_0.SinglyLinkedList()
    none_type_4 = singly_linked_list_15.add(str_5)

def test_case_1859():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    var_0 = singly_linked_list_0.remove()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_1.__str__()
    assert str_1 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True
    singly_linked_list_3 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_3.toArray()
    var_1 = singly_linked_list_2.getHead()
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    var_2 = singly_linked_list_4.remove()
    node_0 = singly_linked_list_4.getHeadNode()
    assert f'{type(node_0).__module__}.{type(node_0).__qualname__}' == 'linkedList3.Node'
    assert node_0.value is None
    assert node_0.next is None
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_1 = singly_linked_list_5.toArray()
    none_type_0 = None
    node_1 = module_0.Node(none_type_0)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    bool_1 = singly_linked_list_6.isEmpty()
    assert bool_1 is True
    singly_linked_list_7 = module_0.SinglyLinkedList()
    str_3 = singly_linked_list_7.__str__()
    assert str_3 == '[None]'
    node_2 = singly_linked_list_6.getHeadNode()
    int_0 = singly_linked_list_6.getSize()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_8.getHeadNode()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_8.getSize()
    bool_2 = singly_linked_list_9.isEmpty()
    assert bool_2 is True
    var_3 = singly_linked_list_9.getHead()

def test_case_1860():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    singly_linked_list_1 = module_0.SinglyLinkedList()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_2.remove()
    bool_0 = singly_linked_list_2.isEmpty()
    assert bool_0 is True
    var_1 = singly_linked_list_0.remove()
    none_type_0 = singly_linked_list_1.add(singly_linked_list_0)

def test_case_1861():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_0.__str__()
    assert str_0 == '[None]'
    none_type_0 = singly_linked_list_0.add(singly_linked_list_0)
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_1 = var_0.__str__()
    singly_linked_list_2 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_2.getSize()
    singly_linked_list_3 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_3.isEmpty()
    assert bool_0 is True
    singly_linked_list_4 = module_0.SinglyLinkedList()
    str_2 = singly_linked_list_4.__str__()
    assert str_2 == '[None]'
    none_type_1 = singly_linked_list_4.add(singly_linked_list_4)
    int_1 = singly_linked_list_4.getSize()
    assert int_1 == 1
    var_1 = singly_linked_list_4.getHead()
    dict_0 = {int_1: none_type_1, var_1: str_2}
    node_0 = module_0.Node(dict_0)
    node_1 = singly_linked_list_4.getHeadNode()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    list_0 = singly_linked_list_5.toArray()
    bool_1 = False
    node_2 = module_0.Node(bool_1)
    none_type_2 = None
    singly_linked_list_6 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_6.add(none_type_2)
    var_2 = singly_linked_list_5.getHead()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_2 = singly_linked_list_7.getSize()
    bool_2 = False
    node_4 = module_0.Node(bool_2)
    int_3 = singly_linked_list_7.getSize()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    var_3 = singly_linked_list_7.getHead()

def test_case_1862():
    singly_linked_list_0 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_0.getHead()
    str_0 = var_0.__str__()
    singly_linked_list_1 = module_0.SinglyLinkedList()
    var_1 = singly_linked_list_1.getHead()
    int_0 = 0
    node_0 = module_0.Node(int_0)
    singly_linked_list_2 = module_0.SinglyLinkedList()
    bool_0 = singly_linked_list_1.isEmpty()
    assert bool_0 is True

def test_case_1863():
    bool_0 = False
    node_0 = module_0.Node(bool_0)
    none_type_0 = None
    singly_linked_list_0 = module_0.SinglyLinkedList()
    none_type_1 = singly_linked_list_0.add(none_type_0)
    none_type_2 = singly_linked_list_0.add(none_type_0)
    bool_1 = singly_linked_list_0.isEmpty()
    assert bool_1 is False
    singly_linked_list_1 = module_0.SinglyLinkedList()
    str_0 = singly_linked_list_1.__str__()
    assert str_0 == '[None]'
    singly_linked_list_2 = module_0.SinglyLinkedList()
    none_type_3 = singly_linked_list_2.add(singly_linked_list_2)
    singly_linked_list_3 = module_0.SinglyLinkedList()
    str_1 = singly_linked_list_3.__str__()
    assert str_1 == '[None]'
    none_type_4 = singly_linked_list_3.add(singly_linked_list_3)
    singly_linked_list_4 = module_0.SinglyLinkedList()
    var_0 = singly_linked_list_3.remove()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'linkedList3.Node'
    assert f'{type(var_0.value).__module__}.{type(var_0.value).__qualname__}' == 'linkedList3.SinglyLinkedList'
    assert var_0.next is None
    str_2 = var_0.__str__()
    singly_linked_list_5 = module_0.SinglyLinkedList()
    int_0 = singly_linked_list_5.getSize()
    none_type_5 = singly_linked_list_5.add(none_type_4)
    singly_linked_list_6 = module_0.SinglyLinkedList()
    node_1 = singly_linked_list_6.getHeadNode()
    node_2 = singly_linked_list_6.getHeadNode()
    singly_linked_list_7 = module_0.SinglyLinkedList()
    node_3 = singly_linked_list_7.getHeadNode()
    singly_linked_list_8 = module_0.SinglyLinkedList()
    int_1 = singly_linked_list_7.getSize()
    var_1 = singly_linked_list_6.remove()
    singly_linked_list_9 = module_0.SinglyLinkedList()
    node_4 = singly_linked_list_9.getHeadNode()
    bool_2 = False
    node_5 = module_0.Node(bool_2)
    singly_linked_list_10 = module_0.SinglyLinkedList()
    var_2 = singly_linked_list_10.getHead()
    str_3 = var_2.__str__()
    int_2 = singly_linked_list_9.getSize()
    bool_3 = False
    node_6 = module_0.Node(bool_3)
    none_type_6 = None
    singly_linked_list_11 = module_0.SinglyLinkedList()
    none_type_7 = singly_linked_list_11.add(none_type_6)
    none_type_8 = singly_linked_list_11.add(none_type_6)
    var_3 = singly_linked_list_11.getHead()
    int_3 = 0
    node_7 = module_0.Node(int_3)
    singly_linked_list_12 = module_0.SinglyLinkedList()
    str_4 = singly_linked_list_12.__str__()
    assert str_4 == '[None]'
    bool_4 = False
    node_8 = module_0.Node(bool_4)
    str_5 = singly_linked_list_12.__str__()
    assert str_5 == '[None]'
    complex_0 = 1389 + 116.582j
    node_9 = module_0.Node(complex_0)
    singly_linked_list_13 = module_0.SinglyLinkedList()
    str_6 = singly_linked_list_13.__str__()
    assert str_6 == '[None]'
